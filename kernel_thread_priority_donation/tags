!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AS	Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
Align	user/umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	user/sh.c	12;"	d	file:
BACKSPACE	kernel/console.c	25;"	d	file:
BBLOCK	kernel/fs.h	51;"	d
BPB	kernel/fs.h	48;"	d
BSIZE	kernel/fs.h	6;"	d
BUFSZ	user/usertests.c	20;"	d	file:
C	kernel/console.c	26;"	d	file:
CC	Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Werror -O -fno-omit-frame-pointer -ggdb -DSNU$/;"	m
CLINT	kernel/memlayout.h	29;"	d
CLINT_MTIME	kernel/memlayout.h	31;"	d
CLINT_MTIMECMP	kernel/memlayout.h	30;"	d
CONSOLE	kernel/file.h	40;"	d
CPUS	Makefile	/^CPUS := 4$/;"	m
DIRSIZ	kernel/fs.h	54;"	d
Disassembly	kernel/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/kthtest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/zombie.asm	/^Disassembly of section .text:$/;"	l
ELF_MAGIC	kernel/elf.h	3;"	d
ELF_PROG_FLAG_EXEC	kernel/elf.h	40;"	d
ELF_PROG_FLAG_READ	kernel/elf.h	42;"	d
ELF_PROG_FLAG_WRITE	kernel/elf.h	41;"	d
ELF_PROG_LOAD	kernel/elf.h	37;"	d
EXEC	user/sh.c	8;"	d	file:
FCR	kernel/uart.c	25;"	d	file:
FD_DEVICE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon3
FD_INODE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon3
FD_NONE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon3
FD_PIPE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon3
FILES	Makefile	/^FILES = .\/Makefile .\/$K .\/$U .\/mkfs .\/README .\/ans .\/out .\/run-test.py$/;"	m
FSMAGIC	kernel/fs.h	25;"	d
FSSIZE	kernel/param.h	12;"	d
GDBPORT	Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
Header	user/umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	kernel/fs.h	45;"	d
IER	kernel/uart.c	24;"	d	file:
INPUT_BUF	kernel/console.c	53;"	d	file:
IPB	kernel/fs.h	42;"	d
ISR	kernel/uart.c	26;"	d	file:
K	Makefile	/^K=kernel$/;"	m
KERNBASE	kernel/memlayout.h	47;"	d
KERN_DEF_PRIO	kernel/defs.h	195;"	d
KSTACK	kernel/memlayout.h	56;"	d
LCR	kernel/uart.c	27;"	d	file:
LD	Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -z max-page-size=4096$/;"	m
LIST	user/sh.c	11;"	d	file:
LOGSIZE	kernel/param.h	10;"	d
LSR	kernel/uart.c	28;"	d	file:
MAKE_SATP	kernel/riscv.h	187;"	d
MAXARG	kernel/param.h	8;"	d
MAXARGS	user/sh.c	14;"	d	file:
MAXFILE	kernel/fs.h	29;"	d
MAXOPBLOCKS	kernel/param.h	9;"	d
MAXPATH	kernel/param.h	13;"	d
MAXVA	kernel/riscv.h	352;"	d
MIE_MEIE	kernel/riscv.h	97;"	d
MIE_MSIE	kernel/riscv.h	99;"	d
MIE_MTIE	kernel/riscv.h	98;"	d
MSTATUS_MIE	kernel/riscv.h	16;"	d
MSTATUS_MPP_M	kernel/riscv.h	13;"	d
MSTATUS_MPP_MASK	kernel/riscv.h	12;"	d
MSTATUS_MPP_S	kernel/riscv.h	14;"	d
MSTATUS_MPP_U	kernel/riscv.h	15;"	d
N	user/forktest.asm	/^#define N  1000$/;"	d
N	user/forktest.c	8;"	d	file:
NBUF	kernel/param.h	11;"	d
NCPU	kernel/param.h	2;"	d
NDEV	kernel/param.h	6;"	d
NDIRECT	kernel/fs.h	27;"	d
NELEM	kernel/defs.h	206;"	d
NFILE	kernel/param.h	4;"	d
NINDIRECT	kernel/fs.h	28;"	d
NINODE	kernel/param.h	5;"	d
NINODES	mkfs/mkfs.c	18;"	d	file:
NOFILE	kernel/param.h	3;"	d
NPROC	kernel/param.h	1;"	d
NUM	kernel/virtio.h	48;"	d
OBJCOPY	Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	Makefile	/^OBJS = \\$/;"	m
O_CREATE	kernel/fcntl.h	4;"	d
O_RDONLY	kernel/fcntl.h	1;"	d
O_RDWR	kernel/fcntl.h	3;"	d
O_WRONLY	kernel/fcntl.h	2;"	d
PA2PTE	kernel/riscv.h	337;"	d
PANUM	Makefile	/^PANUM = PA6$/;"	m
PGROUNDDOWN	kernel/riscv.h	328;"	d
PGROUNDUP	kernel/riscv.h	327;"	d
PGSHIFT	kernel/riscv.h	325;"	d
PGSIZE	kernel/riscv.h	324;"	d
PHYSTOP	kernel/memlayout.h	48;"	d
PIPE	user/sh.c	10;"	d	file:
PIPESIZE	kernel/pipe.c	11;"	d	file:
PLIC	kernel/memlayout.h	34;"	d
PLIC_MCLAIM	kernel/memlayout.h	41;"	d
PLIC_MENABLE	kernel/memlayout.h	37;"	d
PLIC_MPRIORITY	kernel/memlayout.h	39;"	d
PLIC_PENDING	kernel/memlayout.h	36;"	d
PLIC_PRIORITY	kernel/memlayout.h	35;"	d
PLIC_SCLAIM	kernel/memlayout.h	42;"	d
PLIC_SENABLE	kernel/memlayout.h	38;"	d
PLIC_SPRIORITY	kernel/memlayout.h	40;"	d
PTE2PA	kernel/riscv.h	339;"	d
PTE_FLAGS	kernel/riscv.h	341;"	d
PTE_R	kernel/riscv.h	331;"	d
PTE_U	kernel/riscv.h	334;"	d
PTE_V	kernel/riscv.h	330;"	d
PTE_W	kernel/riscv.h	332;"	d
PTE_X	kernel/riscv.h	333;"	d
PX	kernel/riscv.h	346;"	d
PXMASK	kernel/riscv.h	344;"	d
PXSHIFT	kernel/riscv.h	345;"	d
QEMU	Makefile	/^QEMU = qemu-system-riscv64$/;"	m
QEMUEXTRA	Makefile	/^QEMUEXTRA = -drive file=fs1.img,if=none,format=raw,id=x1 -device virtio-blk-device,drive=x1,bus=virtio-mmio-bus.1$/;"	m
QEMUGDB	Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -machine virt -bios none -kernel $K\/kernel -m 3G -smp $(CPUS) -nographic$/;"	m
R	kernel/virtio_disk.c	21;"	d	file:
REDIR	user/sh.c	9;"	d	file:
RHR	kernel/uart.c	22;"	d	file:
ROOTDEV	kernel/param.h	7;"	d
ROOTINO	kernel/fs.h	5;"	d
RUNNABLE	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
ReadReg	kernel/kernel.asm	/^#define ReadReg(reg) (*(Reg(reg)))$/;"	d
ReadReg	kernel/uart.c	30;"	d	file:
Reg	kernel/uart.c	16;"	d	file:
SATP_SV39	kernel/riscv.h	185;"	d
SIE_SEIE	kernel/riscv.h	79;"	d
SIE_SSIE	kernel/riscv.h	81;"	d
SIE_STIE	kernel/riscv.h	80;"	d
SLEEPING	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SSTATUS_SIE	kernel/riscv.h	46;"	d
SSTATUS_SPIE	kernel/riscv.h	44;"	d
SSTATUS_SPP	kernel/riscv.h	43;"	d
SSTATUS_UIE	kernel/riscv.h	47;"	d
SSTATUS_UPIE	kernel/riscv.h	45;"	d
STUDENTID	Makefile	/^STUDENTID = 2014-12142$/;"	m
SYS_chdir	kernel/syscall.h	10;"	d
SYS_close	kernel/syscall.h	22;"	d
SYS_dup	kernel/syscall.h	11;"	d
SYS_exec	kernel/syscall.h	8;"	d
SYS_exit	kernel/syscall.h	3;"	d
SYS_fork	kernel/syscall.h	2;"	d
SYS_fstat	kernel/syscall.h	9;"	d
SYS_getpid	kernel/syscall.h	12;"	d
SYS_kill	kernel/syscall.h	7;"	d
SYS_kthtest	kernel/syscall.h	24;"	d
SYS_link	kernel/syscall.h	20;"	d
SYS_mkdir	kernel/syscall.h	21;"	d
SYS_mknod	kernel/syscall.h	18;"	d
SYS_open	kernel/syscall.h	16;"	d
SYS_pipe	kernel/syscall.h	5;"	d
SYS_read	kernel/syscall.h	6;"	d
SYS_sbrk	kernel/syscall.h	13;"	d
SYS_sleep	kernel/syscall.h	14;"	d
SYS_unlink	kernel/syscall.h	19;"	d
SYS_uptime	kernel/syscall.h	15;"	d
SYS_wait	kernel/syscall.h	4;"	d
SYS_write	kernel/syscall.h	17;"	d
TARBALL	Makefile	/^TARBALL = ..\/xv6-$(_PANUM)-$(_STUDENTID).tar.gz$/;"	m
TC	kernel/kthtest.c	484;"	d	file:
TEST_BEGIN	kernel/kthtest.c	33;"	d	file:
TEST_DONE	kernel/kthtest.c	36;"	d	file:
TEST_END	kernel/kthtest.c	34;"	d	file:
TEST_EXIT	kernel/kthtest.c	35;"	d	file:
TEST_PRINT	kernel/kthtest.c	31;"	d	file:
TEST_PRINTX	kernel/kthtest.c	32;"	d	file:
THR	kernel/uart.c	23;"	d	file:
TOOLPREFIX	Makefile	/^TOOLPREFIX := $(shell if riscv64-unknown-elf-objdump -i 2>&1 | grep 'elf64-big' >\/dev\/null 2>&1; \\$/;"	m
TRAMPOLINE	kernel/memlayout.h	52;"	d
TRAPFRAME	kernel/memlayout.h	67;"	d
T_DEVICE	kernel/stat.h	3;"	d
T_DIR	kernel/stat.h	1;"	d
T_FILE	kernel/stat.h	2;"	d
U	Makefile	/^U=user$/;"	m
UART0	kernel/memlayout.h	21;"	d
UART0_IRQ	kernel/memlayout.h	22;"	d
ULIB	Makefile	/^ULIB = $U\/ulib.o $U\/usys.o $U\/printf.o $U\/umalloc.o$/;"	m
UNUSED	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UPROGS	Makefile	/^UPROGS=\\$/;"	m
USER_DEF_PRIO	kernel/defs.h	194;"	d
USER_MAX_PRIO	kernel/defs.h	193;"	d
UsedArea	kernel/virtio.h	/^struct UsedArea {$/;"	s
VIRTIO0	kernel/memlayout.h	25;"	d
VIRTIO0_IRQ	kernel/memlayout.h	26;"	d
VIRTIO_BLK_F_CONFIG_WCE	kernel/virtio.h	40;"	d
VIRTIO_BLK_F_MQ	kernel/virtio.h	41;"	d
VIRTIO_BLK_F_RO	kernel/virtio.h	38;"	d
VIRTIO_BLK_F_SCSI	kernel/virtio.h	39;"	d
VIRTIO_BLK_T_IN	kernel/virtio.h	65;"	d
VIRTIO_BLK_T_OUT	kernel/virtio.h	66;"	d
VIRTIO_CONFIG_S_ACKNOWLEDGE	kernel/virtio.h	32;"	d
VIRTIO_CONFIG_S_DRIVER	kernel/virtio.h	33;"	d
VIRTIO_CONFIG_S_DRIVER_OK	kernel/virtio.h	34;"	d
VIRTIO_CONFIG_S_FEATURES_OK	kernel/virtio.h	35;"	d
VIRTIO_F_ANY_LAYOUT	kernel/virtio.h	42;"	d
VIRTIO_MMIO_DEVICE_FEATURES	kernel/virtio.h	17;"	d
VIRTIO_MMIO_DEVICE_ID	kernel/virtio.h	15;"	d
VIRTIO_MMIO_DRIVER_FEATURES	kernel/virtio.h	18;"	d
VIRTIO_MMIO_GUEST_PAGE_SIZE	kernel/virtio.h	19;"	d
VIRTIO_MMIO_INTERRUPT_ACK	kernel/virtio.h	28;"	d
VIRTIO_MMIO_INTERRUPT_STATUS	kernel/virtio.h	27;"	d
VIRTIO_MMIO_MAGIC_VALUE	kernel/virtio.h	13;"	d
VIRTIO_MMIO_QUEUE_ALIGN	kernel/virtio.h	23;"	d
VIRTIO_MMIO_QUEUE_NOTIFY	kernel/virtio.h	26;"	d
VIRTIO_MMIO_QUEUE_NUM	kernel/virtio.h	22;"	d
VIRTIO_MMIO_QUEUE_NUM_MAX	kernel/virtio.h	21;"	d
VIRTIO_MMIO_QUEUE_PFN	kernel/virtio.h	24;"	d
VIRTIO_MMIO_QUEUE_READY	kernel/virtio.h	25;"	d
VIRTIO_MMIO_QUEUE_SEL	kernel/virtio.h	20;"	d
VIRTIO_MMIO_STATUS	kernel/virtio.h	29;"	d
VIRTIO_MMIO_VENDOR_ID	kernel/virtio.h	16;"	d
VIRTIO_MMIO_VERSION	kernel/virtio.h	14;"	d
VIRTIO_RING_F_EVENT_IDX	kernel/virtio.h	44;"	d
VIRTIO_RING_F_INDIRECT_DESC	kernel/virtio.h	43;"	d
VRING_DESC_F_NEXT	kernel/virtio.h	56;"	d
VRING_DESC_F_WRITE	kernel/virtio.h	57;"	d
VRingDesc	kernel/virtio.h	/^struct VRingDesc {$/;"	s
VRingUsedElem	kernel/virtio.h	/^struct VRingUsedElem {$/;"	s
V_ACQUIRE	kernel/kthtest.c	44;"	d	file:
V_CREATE	kernel/kthtest.c	42;"	d	file:
V_PRIO	kernel/kthtest.c	51;"	d	file:
V_RELEASE	kernel/kthtest.c	48;"	d	file:
WriteReg	kernel/kernel.asm	/^#define WriteReg(reg, v) (*(Reg(reg)) = (v))$/;"	d
WriteReg	kernel/uart.c	31;"	d	file:
ZOMBIE	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
_PANUM	Makefile	/^_PANUM = $(strip $(PANUM))$/;"	m
_STUDENTID	Makefile	/^_STUDENTID = $(strip $(STUDENTID))$/;"	m
_entry	kernel/entry.S	/^_entry:$/;"	l
a	kernel/kernel.asm	/^    a = (uint*)bp->data;$/;"	d
a	kernel/kernel.asm	/^  a = PGROUNDDOWN(va);$/;"	d
a	kernel/kernel.asm	/^  a = oldsz;$/;"	d
a	kernel/kthtest.c	/^  struct sleeplock a;$/;"	m	struct:slocks	typeref:struct:slocks::sleeplock	file:
a	user/cat.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/echo.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/forktest.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	user/grep.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/init.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	user/kill.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	user/kthtest.asm	/^   a:	00f50f63          	beq	a0,a5,28 <main+0x28>$/;"	l
a	user/ln.asm	/^   a:	478d                	li	a5,3$/;"	l
a	user/ls.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/mkdir.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/rm.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/sh.asm	/^       a:	1000                	addi	s0,sp,32$/;"	l
a	user/usertests.asm	/^       a:	00007797          	auipc	a5,0x7$/;"	l
a	user/usertests.asm	/^    a = b + 1;$/;"	d
a	user/usertests.asm	/^    a = sbrk(0);$/;"	d
a	user/usertests.asm	/^  a = sbrk(0);$/;"	d
a	user/usertests.asm	/^  a = sbrk(PGSIZE);$/;"	d
a	user/usertests.asm	/^  a = sbrk(TOOMUCH);$/;"	d
a	user/wc.asm	/^   a:	ecce                	sd	s3,88(sp)$/;"	l
a0	kernel/proc.h	/^  \/* 112 *\/ uint64 a0;$/;"	m	struct:trapframe
a0	user/cat.asm	/^  a0:	ffe5099b          	addiw	s3,a0,-2$/;"	l
a0	user/echo.asm	/^  a0:	1141                	addi	sp,sp,-16$/;"	l
a0	user/forktest.asm	/^  a0:	34fd                	addiw	s1,s1,-1$/;"	l
a0	user/grep.asm	/^  a0:	b7e5                	j	88 <matchhere+0x3a>$/;"	l
a0	user/init.asm	/^  a0:	5de080e7          	jalr	1502(ra) # 67a <printf>$/;"	l
a0	user/kthtest.asm	/^  a0:	00f71b63          	bne	a4,a5,b6 <strcmp+0x26>$/;"	l
a0	user/ls.asm	/^  a0:	1982                	slli	s3,s3,0x20$/;"	l
a0	user/mkdir.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	user/rm.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	user/stressfs.asm	/^  a0:	00000097          	auipc	ra,0x0$/;"	l
a0	user/usertests.asm	/^      a0:	3cc080e7          	jalr	972(ra) # 4468 <chdir>$/;"	l
a0	user/wc.asm	/^  a0:	02095913          	srli	s2,s2,0x20$/;"	l
a0	user/zombie.asm	/^  a0:	4501                	li	a0,0$/;"	l
a00	user/sh.asm	/^     a00:	fd840513          	addi	a0,s0,-40$/;"	l
a02	user/ls.asm	/^ a02:	6098                	ld	a4,0(s1)$/;"	l
a02	user/usertests.asm	/^     a02:	854a                	mv	a0,s2$/;"	l
a04	user/ls.asm	/^ a04:	853e                	mv	a0,a5$/;"	l
a04	user/sh.asm	/^     a04:	00000097          	auipc	ra,0x0$/;"	l
a04	user/usertests.asm	/^     a04:	00004097          	auipc	ra,0x4$/;"	l
a06	user/ls.asm	/^ a06:	fef71ae3          	bne	a4,a5,9fa <malloc+0xc4>$/;"	l
a08	user/sh.asm	/^     a08:	df6080e7          	jalr	-522(ra) # 7fa <parseline>$/;"	l
a08	user/usertests.asm	/^     a08:	a44080e7          	jalr	-1468(ra) # 4448 <unlink>$/;"	l
a0a	user/ls.asm	/^ a0a:	8552                	mv	a0,s4$/;"	l
a0c	user/ls.asm	/^ a0c:	00000097          	auipc	ra,0x0$/;"	l
a0c	user/sh.asm	/^     a0c:	892a                	mv	s2,a0$/;"	l
a0c	user/usertests.asm	/^     a0c:	2485                	addiw	s1,s1,1$/;"	l
a0e	user/sh.asm	/^     a0e:	00001617          	auipc	a2,0x1$/;"	l
a0e	user/usertests.asm	/^     a0e:	0ff4f493          	andi	s1,s1,255$/;"	l
a1	kernel/proc.h	/^  \/* 120 *\/ uint64 a1;$/;"	m	struct:trapframe
a10	user/ls.asm	/^ a10:	b72080e7          	jalr	-1166(ra) # 57e <sbrk>$/;"	l
a12	user/sh.asm	/^     a12:	9a260613          	addi	a2,a2,-1630 # 13b0 <malloc+0x1fc>$/;"	l
a12	user/usertests.asm	/^     a12:	ff3496e3          	bne	s1,s3,9fe <createtest+0x6e>$/;"	l
a14	user/ls.asm	/^ a14:	fd651ae3          	bne	a0,s6,9e8 <malloc+0xb2>$/;"	l
a16	user/sh.asm	/^     a16:	85a6                	mv	a1,s1$/;"	l
a16	user/usertests.asm	/^     a16:	70a2                	ld	ra,40(sp)$/;"	l
a18	user/ls.asm	/^ a18:	4501                	li	a0,0$/;"	l
a18	user/sh.asm	/^     a18:	fd840513          	addi	a0,s0,-40$/;"	l
a18	user/usertests.asm	/^     a18:	7402                	ld	s0,32(sp)$/;"	l
a1a	user/ls.asm	/^ a1a:	bf55                	j	9ce <malloc+0x98>$/;"	l
a1a	user/usertests.asm	/^     a1a:	64e2                	ld	s1,24(sp)$/;"	l
a1c	user/sh.asm	/^     a1c:	00000097          	auipc	ra,0x0$/;"	l
a1c	user/usertests.asm	/^     a1c:	6942                	ld	s2,16(sp)$/;"	l
a1e	user/usertests.asm	/^     a1e:	69a2                	ld	s3,8(sp)$/;"	l
a2	kernel/proc.h	/^  \/* 128 *\/ uint64 a2;$/;"	m	struct:trapframe
a2	user/echo.asm	/^  a2:	e422                	sd	s0,8(sp)$/;"	l
a2	user/forktest.asm	/^  a2:	f8e5                	bnez	s1,92 <forktest+0x64>$/;"	l
a2	user/grep.asm	/^  a2:	c691                	beqz	a3,ae <matchhere+0x60>$/;"	l
a2	user/kill.asm	/^  a2:	fef709e3          	beq	a4,a5,94 <strcmp+0x14>$/;"	l
a2	user/ln.asm	/^  a2:	0005c503          	lbu	a0,0(a1)$/;"	l
a2	user/ls.asm	/^  a2:	0209d993          	srli	s3,s3,0x20$/;"	l
a2	user/sh.asm	/^      a2:	00000097          	auipc	ra,0x0$/;"	l
a2	user/zombie.asm	/^  a2:	bfe5                	j	9a <strlen+0x20>$/;"	l
a20	user/sh.asm	/^     a20:	b06080e7          	jalr	-1274(ra) # 522 <peek>$/;"	l
a20	user/usertests.asm	/^     a20:	6145                	addi	sp,sp,48$/;"	l
a22	user/usertests.asm	/^     a22:	8082                	ret$/;"	l
a24	user/sh.asm	/^     a24:	fd843603          	ld	a2,-40(s0)$/;"	l
a24	user/usertests.asm	/^     a24:	1101                	addi	sp,sp,-32$/;"	l
a26	user/usertests.asm	/^     a26:	ec06                	sd	ra,24(sp)$/;"	l
a28	user/sh.asm	/^     a28:	00961e63          	bne	a2,s1,a44 <parsecmd+0x66>$/;"	l
a28	user/usertests.asm	/^     a28:	e822                	sd	s0,16(sp)$/;"	l
a2a	user/usertests.asm	/^     a2a:	e426                	sd	s1,8(sp)$/;"	l
a2c	user/sh.asm	/^     a2c:	854a                	mv	a0,s2$/;"	l
a2c	user/usertests.asm	/^     a2c:	1000                	addi	s0,sp,32$/;"	l
a2e	user/sh.asm	/^     a2e:	00000097          	auipc	ra,0x0$/;"	l
a2e	user/usertests.asm	/^     a2e:	84aa                	mv	s1,a0$/;"	l
a3	kernel/proc.h	/^  \/* 136 *\/ uint64 a3;$/;"	m	struct:trapframe
a30	user/usertests.asm	/^     a30:	00004517          	auipc	a0,0x4$/;"	l
a32	user/sh.asm	/^     a32:	f18080e7          	jalr	-232(ra) # 946 <nulterminate>$/;"	l
a34	user/usertests.asm	/^     a34:	57850513          	addi	a0,a0,1400 # 4fa8 <malloc+0x770>$/;"	l
a36	user/sh.asm	/^     a36:	854a                	mv	a0,s2$/;"	l
a38	user/sh.asm	/^     a38:	70a2                	ld	ra,40(sp)$/;"	l
a38	user/usertests.asm	/^     a38:	00004097          	auipc	ra,0x4$/;"	l
a3a	user/sh.asm	/^     a3a:	7402                	ld	s0,32(sp)$/;"	l
a3c	user/sh.asm	/^     a3c:	64e2                	ld	s1,24(sp)$/;"	l
a3c	user/usertests.asm	/^     a3c:	a10080e7          	jalr	-1520(ra) # 4448 <unlink>$/;"	l
a3e	user/sh.asm	/^     a3e:	6942                	ld	s2,16(sp)$/;"	l
a4	kernel/proc.h	/^  \/* 144 *\/ uint64 a4;$/;"	m	struct:trapframe
a4	user/cat.asm	/^  a4:	1982                	slli	s3,s3,0x20$/;"	l
a4	user/echo.asm	/^  a4:	0800                	addi	s0,sp,16$/;"	l
a4	user/forktest.asm	/^  a4:	4501                	li	a0,0$/;"	l
a4	user/grep.asm	/^  a4:	0005c683          	lbu	a3,0(a1)$/;"	l
a4	user/init.asm	/^  a4:	4505                	li	a0,1$/;"	l
a4	user/kthtest.asm	/^  a4:	0505                	addi	a0,a0,1$/;"	l
a4	user/mkdir.asm	/^  a4:	00f71b63          	bne	a4,a5,ba <strcmp+0x26>$/;"	l
a4	user/rm.asm	/^  a4:	00f71b63          	bne	a4,a5,ba <strcmp+0x26>$/;"	l
a4	user/stressfs.asm	/^  a4:	2a6080e7          	jalr	678(ra) # 346 <write>$/;"	l
a4	user/usertests.asm	/^      a4:	06054163          	bltz	a0,106 <iputtest+0xba>$/;"	l
a4	user/wc.asm	/^  a4:	996e                	add	s2,s2,s11$/;"	l
a4	user/zombie.asm	/^  a4:	1141                	addi	sp,sp,-16$/;"	l
a40	user/sh.asm	/^     a40:	6145                	addi	sp,sp,48$/;"	l
a40	user/usertests.asm	/^     a40:	00004097          	auipc	ra,0x4$/;"	l
a42	user/sh.asm	/^     a42:	8082                	ret$/;"	l
a44	user/sh.asm	/^     a44:	00001597          	auipc	a1,0x1$/;"	l
a44	user/usertests.asm	/^     a44:	9b0080e7          	jalr	-1616(ra) # 43f0 <fork>$/;"	l
a48	user/sh.asm	/^     a48:	97458593          	addi	a1,a1,-1676 # 13b8 <malloc+0x204>$/;"	l
a48	user/usertests.asm	/^     a48:	04054563          	bltz	a0,a92 <forkforkfork+0x6e>$/;"	l
a4c	user/sh.asm	/^     a4c:	4509                	li	a0,2$/;"	l
a4c	user/usertests.asm	/^     a4c:	c12d                	beqz	a0,aae <forkforkfork+0x8a>$/;"	l
a4e	user/sh.asm	/^     a4e:	00000097          	auipc	ra,0x0$/;"	l
a4e	user/usertests.asm	/^     a4e:	4551                	li	a0,20$/;"	l
a5	kernel/proc.h	/^  \/* 152 *\/ uint64 a5;$/;"	m	struct:trapframe
a50	user/usertests.asm	/^     a50:	00004097          	auipc	ra,0x4$/;"	l
a52	user/sh.asm	/^     a52:	678080e7          	jalr	1656(ra) # 10c6 <fprintf>$/;"	l
a54	user/usertests.asm	/^     a54:	a38080e7          	jalr	-1480(ra) # 4488 <sleep>$/;"	l
a56	user/sh.asm	/^     a56:	00001517          	auipc	a0,0x1$/;"	l
a58	user/usertests.asm	/^     a58:	20200593          	li	a1,514$/;"	l
a5a	user/sh.asm	/^     a5a:	8f250513          	addi	a0,a0,-1806 # 1348 <malloc+0x194>$/;"	l
a5c	user/usertests.asm	/^     a5c:	00004517          	auipc	a0,0x4$/;"	l
a5e	user/sh.asm	/^     a5e:	fffff097          	auipc	ra,0xfffff$/;"	l
a6	kernel/proc.h	/^  \/* 160 *\/ uint64 a6;$/;"	m	struct:trapframe
a6	user/cat.asm	/^  a6:	0209d993          	srli	s3,s3,0x20$/;"	l
a6	user/echo.asm	/^  a6:	00054783          	lbu	a5,0(a0)$/;"	l
a6	user/forktest.asm	/^  a6:	00000097          	auipc	ra,0x0$/;"	l
a6	user/init.asm	/^  a6:	00000097          	auipc	ra,0x0$/;"	l
a6	user/kill.asm	/^  a6:	0005c503          	lbu	a0,0(a1)$/;"	l
a6	user/kthtest.asm	/^  a6:	0585                	addi	a1,a1,1$/;"	l
a6	user/ln.asm	/^  a6:	40a7853b          	subw	a0,a5,a0$/;"	l
a6	user/ls.asm	/^  a6:	4639                	li	a2,14$/;"	l
a6	user/sh.asm	/^      a6:	fb4080e7          	jalr	-76(ra) # 56 <panic>$/;"	l
a6	user/wc.asm	/^  a6:	bf4d                	j	58 <wc+0x58>$/;"	l
a6	user/zombie.asm	/^  a6:	e422                	sd	s0,8(sp)$/;"	l
a60	user/usertests.asm	/^     a60:	54c50513          	addi	a0,a0,1356 # 4fa8 <malloc+0x770>$/;"	l
a62	user/sh.asm	/^     a62:	5f8080e7          	jalr	1528(ra) # 56 <panic>$/;"	l
a64	user/usertests.asm	/^     a64:	00004097          	auipc	ra,0x4$/;"	l
a66	user/sh.asm	/^     a66:	7139                	addi	sp,sp,-64$/;"	l
a68	user/sh.asm	/^     a68:	fc06                	sd	ra,56(sp)$/;"	l
a68	user/usertests.asm	/^     a68:	9d4080e7          	jalr	-1580(ra) # 4438 <open>$/;"	l
a6a	user/sh.asm	/^     a6a:	f822                	sd	s0,48(sp)$/;"	l
a6c	user/sh.asm	/^     a6c:	f426                	sd	s1,40(sp)$/;"	l
a6c	user/usertests.asm	/^     a6c:	00004097          	auipc	ra,0x4$/;"	l
a6e	user/sh.asm	/^     a6e:	f04a                	sd	s2,32(sp)$/;"	l
a7	kernel/proc.h	/^  \/* 168 *\/ uint64 a7;$/;"	m	struct:trapframe
a70	user/sh.asm	/^     a70:	ec4e                	sd	s3,24(sp)$/;"	l
a70	user/usertests.asm	/^     a70:	9b4080e7          	jalr	-1612(ra) # 4420 <close>$/;"	l
a72	user/sh.asm	/^     a72:	e852                	sd	s4,16(sp)$/;"	l
a74	user/sh.asm	/^     a74:	e456                	sd	s5,8(sp)$/;"	l
a74	user/usertests.asm	/^     a74:	4501                	li	a0,0$/;"	l
a76	user/sh.asm	/^     a76:	0080                	addi	s0,sp,64$/;"	l
a76	user/usertests.asm	/^     a76:	00004097          	auipc	ra,0x4$/;"	l
a78	user/sh.asm	/^     a78:	00001497          	auipc	s1,0x1$/;"	l
a7a	user/usertests.asm	/^     a7a:	98a080e7          	jalr	-1654(ra) # 4400 <wait>$/;"	l
a7c	user/sh.asm	/^     a7c:	95048493          	addi	s1,s1,-1712 # 13c8 <malloc+0x214>$/;"	l
a7e	user/usertests.asm	/^     a7e:	4529                	li	a0,10$/;"	l
a8	user/grep.asm	/^  a8:	fee9                	bnez	a3,82 <matchhere+0x34>$/;"	l
a8	user/kthtest.asm	/^  a8:	00054783          	lbu	a5,0(a0)$/;"	l
a8	user/ls.asm	/^  a8:	9e09                	subw	a2,a2,a0$/;"	l
a8	user/mkdir.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	user/rm.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	user/stressfs.asm	/^  a8:	34fd                	addiw	s1,s1,-1$/;"	l
a8	user/usertests.asm	/^      a8:	60e2                	ld	ra,24(sp)$/;"	l
a8	user/wc.asm	/^  a8:	02054e63          	bltz	a0,e4 <wc+0xe4>$/;"	l
a8	user/zombie.asm	/^  a8:	0800                	addi	s0,sp,16$/;"	l
a80	user/sh.asm	/^     a80:	4589                	li	a1,2$/;"	l
a80	user/usertests.asm	/^     a80:	00004097          	auipc	ra,0x4$/;"	l
a82	user/sh.asm	/^     a82:	8526                	mv	a0,s1$/;"	l
a84	user/sh.asm	/^     a84:	00000097          	auipc	ra,0x0$/;"	l
a84	user/usertests.asm	/^     a84:	a08080e7          	jalr	-1528(ra) # 4488 <sleep>$/;"	l
a88	user/sh.asm	/^     a88:	330080e7          	jalr	816(ra) # db4 <open>$/;"	l
a88	user/usertests.asm	/^     a88:	60e2                	ld	ra,24(sp)$/;"	l
a8a	user/usertests.asm	/^     a8a:	6442                	ld	s0,16(sp)$/;"	l
a8c	user/sh.asm	/^     a8c:	00054963          	bltz	a0,a9e <main+0x38>$/;"	l
a8c	user/usertests.asm	/^     a8c:	64a2                	ld	s1,8(sp)$/;"	l
a8e	user/usertests.asm	/^     a8e:	6105                	addi	sp,sp,32$/;"	l
a90	user/sh.asm	/^     a90:	4789                	li	a5,2$/;"	l
a90	user/usertests.asm	/^     a90:	8082                	ret$/;"	l
a92	user/sh.asm	/^     a92:	fea7d7e3          	bge	a5,a0,a80 <main+0x1a>$/;"	l
a92	user/usertests.asm	/^     a92:	85a6                	mv	a1,s1$/;"	l
a94	user/usertests.asm	/^     a94:	00004517          	auipc	a0,0x4$/;"	l
a96	user/sh.asm	/^     a96:	00000097          	auipc	ra,0x0$/;"	l
a98	user/usertests.asm	/^     a98:	37450513          	addi	a0,a0,884 # 4e08 <malloc+0x5d0>$/;"	l
a9a	user/sh.asm	/^     a9a:	306080e7          	jalr	774(ra) # d9c <close>$/;"	l
a9c	user/usertests.asm	/^     a9c:	00004097          	auipc	ra,0x4$/;"	l
a9e	user/sh.asm	/^     a9e:	00001497          	auipc	s1,0x1$/;"	l
aa	user/cat.asm	/^  aa:	098e                	slli	s3,s3,0x3$/;"	l
aa	user/echo.asm	/^  aa:	cf91                	beqz	a5,c6 <strcmp+0x26>$/;"	l
aa	user/forktest.asm	/^  aa:	29a080e7          	jalr	666(ra) # 340 <wait>$/;"	l
aa	user/grep.asm	/^  aa:	4501                	li	a0,0$/;"	l
aa	user/init.asm	/^  aa:	254080e7          	jalr	596(ra) # 2fa <exit>$/;"	l
aa	user/kill.asm	/^  aa:	40a7853b          	subw	a0,a5,a0$/;"	l
aa	user/ln.asm	/^  aa:	6422                	ld	s0,8(sp)$/;"	l
aa	user/ls.asm	/^  aa:	02000593          	li	a1,32$/;"	l
aa	user/mkdir.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	user/rm.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	user/sh.asm	/^      aa:	7179                	addi	sp,sp,-48$/;"	l
aa	user/stressfs.asm	/^  aa:	f4f5                	bnez	s1,96 <main+0x96>$/;"	l
aa	user/usertests.asm	/^      aa:	6442                	ld	s0,16(sp)$/;"	l
aa	user/zombie.asm	/^  aa:	ce09                	beqz	a2,c4 <memset+0x20>$/;"	l
aa0	user/usertests.asm	/^     aa0:	cdc080e7          	jalr	-804(ra) # 4778 <printf>$/;"	l
aa2	user/sh.asm	/^     aa2:	97a48493          	addi	s1,s1,-1670 # 1418 <buf.1147>$/;"	l
aa4	user/usertests.asm	/^     aa4:	4505                	li	a0,1$/;"	l
aa6	user/sh.asm	/^     aa6:	06300913          	li	s2,99$/;"	l
aa6	user/usertests.asm	/^     aa6:	00004097          	auipc	ra,0x4$/;"	l
aaa	user/sh.asm	/^     aaa:	02000993          	li	s3,32$/;"	l
aaa	user/usertests.asm	/^     aaa:	952080e7          	jalr	-1710(ra) # 43f8 <exit>$/;"	l
aae	user/sh.asm	/^     aae:	00001a17          	auipc	s4,0x1$/;"	l
aae	user/usertests.asm	/^     aae:	00004497          	auipc	s1,0x4$/;"	l
ab2	user/sh.asm	/^     ab2:	96da0a13          	addi	s4,s4,-1683 # 141b <buf.1147+0x3>$/;"	l
ab2	user/usertests.asm	/^     ab2:	4fa48493          	addi	s1,s1,1274 # 4fa8 <malloc+0x770>$/;"	l
ab6	user/sh.asm	/^     ab6:	00001a97          	auipc	s5,0x1$/;"	l
ab6	user/usertests.asm	/^     ab6:	4581                	li	a1,0$/;"	l
ab8	user/usertests.asm	/^     ab8:	8526                	mv	a0,s1$/;"	l
aba	user/sh.asm	/^     aba:	91aa8a93          	addi	s5,s5,-1766 # 13d0 <malloc+0x21c>$/;"	l
aba	user/usertests.asm	/^     aba:	00004097          	auipc	ra,0x4$/;"	l
abe	user/sh.asm	/^     abe:	a819                	j	ad4 <main+0x6e>$/;"	l
abe	user/usertests.asm	/^     abe:	97e080e7          	jalr	-1666(ra) # 4438 <open>$/;"	l
ac	user/cat.asm	/^  ac:	05c1                	addi	a1,a1,16$/;"	l
ac	user/echo.asm	/^  ac:	0005c703          	lbu	a4,0(a1)$/;"	l
ac	user/grep.asm	/^  ac:	bff1                	j	88 <matchhere+0x3a>$/;"	l
ac	user/kthtest.asm	/^  ac:	c789                	beqz	a5,b6 <strcmp+0x26>$/;"	l
ac	user/ln.asm	/^  ac:	0141                	addi	sp,sp,16$/;"	l
ac	user/mkdir.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	user/rm.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	user/sh.asm	/^      ac:	f406                	sd	ra,40(sp)$/;"	l
ac	user/stressfs.asm	/^  ac:	854a                	mv	a0,s2$/;"	l
ac	user/usertests.asm	/^      ac:	64a2                	ld	s1,8(sp)$/;"	l
ac	user/wc.asm	/^  ac:	f8043703          	ld	a4,-128(s0)$/;"	l
ac	user/zombie.asm	/^  ac:	87aa                	mv	a5,a0$/;"	l
ac0	user/sh.asm	/^     ac0:	fffff097          	auipc	ra,0xfffff$/;"	l
ac2	user/usertests.asm	/^     ac2:	02055463          	bgez	a0,aea <forkforkfork+0xc6>$/;"	l
ac4	user/sh.asm	/^     ac4:	5bc080e7          	jalr	1468(ra) # 7c <fork1>$/;"	l
ac6	user/usertests.asm	/^     ac6:	00004097          	auipc	ra,0x4$/;"	l
ac8	user/sh.asm	/^     ac8:	c925                	beqz	a0,b38 <main+0xd2>$/;"	l
aca	user/sh.asm	/^     aca:	4501                	li	a0,0$/;"	l
aca	user/usertests.asm	/^     aca:	92a080e7          	jalr	-1750(ra) # 43f0 <fork>$/;"	l
acc	user/sh.asm	/^     acc:	00000097          	auipc	ra,0x0$/;"	l
ace	user/usertests.asm	/^     ace:	fe0554e3          	bgez	a0,ab6 <forkforkfork+0x92>$/;"	l
acquire	kernel/spinlock.c	/^acquire(struct spinlock *lk)$/;"	f
acquiresleep	kernel/sleeplock.c	/^acquiresleep(struct sleeplock *lk)$/;"	f
ad0	user/sh.asm	/^     ad0:	2b0080e7          	jalr	688(ra) # d7c <wait>$/;"	l
ad2	user/usertests.asm	/^     ad2:	20200593          	li	a1,514$/;"	l
ad4	user/sh.asm	/^     ad4:	06400593          	li	a1,100$/;"	l
ad6	user/usertests.asm	/^     ad6:	8526                	mv	a0,s1$/;"	l
ad8	user/sh.asm	/^     ad8:	8526                	mv	a0,s1$/;"	l
ad8	user/usertests.asm	/^     ad8:	00004097          	auipc	ra,0x4$/;"	l
ada	user/sh.asm	/^     ada:	fffff097          	auipc	ra,0xfffff$/;"	l
adc	user/usertests.asm	/^     adc:	960080e7          	jalr	-1696(ra) # 4438 <open>$/;"	l
addr	kernel/kernel.asm	/^  addr = myproc()->sz;$/;"	d
addr	kernel/virtio.h	/^  uint64 addr;$/;"	m	struct:VRingDesc
addrs	kernel/file.h	/^  uint addrs[NDIRECT+1];$/;"	m	struct:inode
addrs	kernel/fs.h	/^  uint addrs[NDIRECT+1];   \/\/ Data block addresses$/;"	m	struct:dinode
ade	user/sh.asm	/^     ade:	526080e7          	jalr	1318(ra) # 0 <getcmd>$/;"	l
ae	user/cat.asm	/^  ae:	99ae                	add	s3,s3,a1$/;"	l
ae	user/forktest.asm	/^  ae:	57fd                	li	a5,-1$/;"	l
ae	user/grep.asm	/^  ae:	0005c503          	lbu	a0,0(a1)$/;"	l
ae	user/init.asm	/^  ae:	00000597          	auipc	a1,0x0$/;"	l
ae	user/kill.asm	/^  ae:	6422                	ld	s0,8(sp)$/;"	l
ae	user/kthtest.asm	/^  ae:	0005c703          	lbu	a4,0(a1)$/;"	l
ae	user/ln.asm	/^  ae:	8082                	ret$/;"	l
ae	user/ls.asm	/^  ae:	01390533          	add	a0,s2,s3$/;"	l
ae	user/sh.asm	/^      ae:	f022                	sd	s0,32(sp)$/;"	l
ae	user/stressfs.asm	/^  ae:	00000097          	auipc	ra,0x0$/;"	l
ae	user/usertests.asm	/^      ae:	6105                	addi	sp,sp,32$/;"	l
ae	user/zombie.asm	/^  ae:	fff6071b          	addiw	a4,a2,-1$/;"	l
ae0	user/usertests.asm	/^     ae0:	00004097          	auipc	ra,0x4$/;"	l
ae2	user/sh.asm	/^     ae2:	06054763          	bltz	a0,b50 <main+0xea>$/;"	l
ae4	user/usertests.asm	/^     ae4:	940080e7          	jalr	-1728(ra) # 4420 <close>$/;"	l
ae6	user/sh.asm	/^     ae6:	0004c783          	lbu	a5,0(s1)$/;"	l
ae8	user/usertests.asm	/^     ae8:	b7f9                	j	ab6 <forkforkfork+0x92>$/;"	l
aea	user/sh.asm	/^     aea:	fd279be3          	bne	a5,s2,ac0 <main+0x5a>$/;"	l
aea	user/usertests.asm	/^     aea:	4501                	li	a0,0$/;"	l
aec	user/usertests.asm	/^     aec:	00004097          	auipc	ra,0x4$/;"	l
aee	user/sh.asm	/^     aee:	0014c703          	lbu	a4,1(s1)$/;"	l
af0	user/usertests.asm	/^     af0:	90c080e7          	jalr	-1780(ra) # 43f8 <exit>$/;"	l
af2	user/sh.asm	/^     af2:	06400793          	li	a5,100$/;"	l
af4	user/usertests.asm	/^     af4:	7175                	addi	sp,sp,-144$/;"	l
af6	user/sh.asm	/^     af6:	fcf715e3          	bne	a4,a5,ac0 <main+0x5a>$/;"	l
af6	user/usertests.asm	/^     af6:	e506                	sd	ra,136(sp)$/;"	l
af8	user/usertests.asm	/^     af8:	e122                	sd	s0,128(sp)$/;"	l
afa	user/sh.asm	/^     afa:	0024c783          	lbu	a5,2(s1)$/;"	l
afa	user/usertests.asm	/^     afa:	fca6                	sd	s1,120(sp)$/;"	l
afc	user/usertests.asm	/^     afc:	f8ca                	sd	s2,112(sp)$/;"	l
afe	user/sh.asm	/^     afe:	fd3791e3          	bne	a5,s3,ac0 <main+0x5a>$/;"	l
afe	user/usertests.asm	/^     afe:	f4ce                	sd	s3,104(sp)$/;"	l
align	kernel/elf.h	/^  uint64 align;$/;"	m	struct:proghdr
alloc3_desc	kernel/virtio_disk.c	/^alloc3_desc(int *idx)$/;"	f	file:
alloc_desc	kernel/virtio_disk.c	/^alloc_desc()$/;"	f	file:
allocpid	kernel/proc.c	/^allocpid() {$/;"	f
allocproc	kernel/proc.c	/^allocproc(void)$/;"	f	file:
and_file	run-test.py	/^    and_file = ".\/ans\/kthtest%d.ans" % i$/;"	v
arg	kernel/proc.h	/^  void *arg;                   \/\/ argument of kthread  $/;"	m	struct:proc
argaddr	kernel/syscall.c	/^argaddr(int n, uint64 *ip)$/;"	f
argc	user/sh.asm	/^  argc = 0;$/;"	d
argfd	kernel/sysfile.c	/^argfd(int n, int *pfd, struct file **pf)$/;"	f	file:
argint	kernel/syscall.c	/^argint(int n, int *ip)$/;"	f
argptest	user/usertests.c	/^void argptest(char *s)$/;"	f
argraw	kernel/syscall.c	/^argraw(int n)$/;"	f	file:
argstr	kernel/syscall.c	/^argstr(int n, char *buf, int max)$/;"	f
argv	user/init.c	/^char *argv[] = { "sh", 0 };$/;"	v
argv	user/initcode.S	/^argv:$/;"	l
argv	user/sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
assigned_task	kernel/proc.c	/^struct proc *assigned_task[NCPU];$/;"	v	typeref:struct:proc
atoi	user/ulib.c	/^atoi(const char *s)$/;"	f
avail	kernel/virtio_disk.c	/^  uint16 *avail;$/;"	m	struct:disk	file:
b	kernel/kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	kernel/kthtest.c	/^  struct sleeplock b;$/;"	m	struct:slocks	typeref:struct:slocks::sleeplock	file:
b	kernel/virtio_disk.c	/^    struct buf *b;$/;"	m	struct:disk::__anon8	typeref:struct:disk::__anon8::buf	file:
b	user/usertests.asm	/^    b = sbrk(1);$/;"	d
b0	user/cat.asm	/^  b0:	4581                	li	a1,0$/;"	l
b0	user/echo.asm	/^  b0:	00f71b63          	bne	a4,a5,c6 <strcmp+0x26>$/;"	l
b0	user/forktest.asm	/^  b0:	02f51d63          	bne	a0,a5,ea <forktest+0xbc>$/;"	l
b0	user/kill.asm	/^  b0:	0141                	addi	sp,sp,16$/;"	l
b0	user/ln.asm	/^  b0:	1141                	addi	sp,sp,-16$/;"	l
b0	user/mkdir.asm	/^  b0:	c789                	beqz	a5,ba <strcmp+0x26>$/;"	l
b0	user/rm.asm	/^  b0:	c789                	beqz	a5,ba <strcmp+0x26>$/;"	l
b0	user/sh.asm	/^      b0:	ec26                	sd	s1,24(sp)$/;"	l
b0	user/usertests.asm	/^      b0:	8082                	ret$/;"	l
b0	user/wc.asm	/^  b0:	86ea                	mv	a3,s10$/;"	l
b00	user/usertests.asm	/^     b00:	f0d2                	sd	s4,96(sp)$/;"	l
b02	user/sh.asm	/^     b02:	8526                	mv	a0,s1$/;"	l
b02	user/usertests.asm	/^     b02:	ecd6                	sd	s5,88(sp)$/;"	l
b04	user/sh.asm	/^     b04:	00000097          	auipc	ra,0x0$/;"	l
b04	user/usertests.asm	/^     b04:	e8da                	sd	s6,80(sp)$/;"	l
b06	user/usertests.asm	/^     b06:	e4de                	sd	s7,72(sp)$/;"	l
b08	user/sh.asm	/^     b08:	0a6080e7          	jalr	166(ra) # baa <strlen>$/;"	l
b08	user/usertests.asm	/^     b08:	e0e2                	sd	s8,64(sp)$/;"	l
b0a	user/usertests.asm	/^     b0a:	fc66                	sd	s9,56(sp)$/;"	l
b0c	user/sh.asm	/^     b0c:	fff5079b          	addiw	a5,a0,-1$/;"	l
b0c	user/usertests.asm	/^     b0c:	0900                	addi	s0,sp,144$/;"	l
b0e	user/usertests.asm	/^     b0e:	8caa                	mv	s9,a0$/;"	l
b10	user/sh.asm	/^     b10:	1782                	slli	a5,a5,0x20$/;"	l
b10	user/usertests.asm	/^     b10:	4901                	li	s2,0$/;"	l
b12	user/sh.asm	/^     b12:	9381                	srli	a5,a5,0x20$/;"	l
b12	user/usertests.asm	/^     b12:	4991                	li	s3,4$/;"	l
b14	user/sh.asm	/^     b14:	97a6                	add	a5,a5,s1$/;"	l
b14	user/usertests.asm	/^     b14:	00004097          	auipc	ra,0x4$/;"	l
b16	user/sh.asm	/^     b16:	00078023          	sb	zero,0(a5)$/;"	l
b18	user/usertests.asm	/^     b18:	8dc080e7          	jalr	-1828(ra) # 43f0 <fork>$/;"	l
b1a	user/sh.asm	/^     b1a:	8552                	mv	a0,s4$/;"	l
b1c	user/sh.asm	/^     b1c:	00000097          	auipc	ra,0x0$/;"	l
b1c	user/usertests.asm	/^     b1c:	84aa                	mv	s1,a0$/;"	l
b1e	user/usertests.asm	/^     b1e:	02054f63          	bltz	a0,b5c <createdelete+0x68>$/;"	l
b2	user/cat.asm	/^  b2:	6088                	ld	a0,0(s1)$/;"	l
b2	user/grep.asm	/^  b2:	00153513          	seqz	a0,a0$/;"	l
b2	user/init.asm	/^  b2:	7ea58593          	addi	a1,a1,2026 # 898 <argv>$/;"	l
b2	user/kill.asm	/^  b2:	8082                	ret$/;"	l
b2	user/kthtest.asm	/^  b2:	fef709e3          	beq	a4,a5,a4 <strcmp+0x14>$/;"	l
b2	user/ln.asm	/^  b2:	e422                	sd	s0,8(sp)$/;"	l
b2	user/ls.asm	/^  b2:	00000097          	auipc	ra,0x0$/;"	l
b2	user/mkdir.asm	/^  b2:	0005c703          	lbu	a4,0(a1)$/;"	l
b2	user/rm.asm	/^  b2:	0005c703          	lbu	a4,0(a1)$/;"	l
b2	user/sh.asm	/^      b2:	1800                	addi	s0,sp,48$/;"	l
b2	user/stressfs.asm	/^  b2:	2a0080e7          	jalr	672(ra) # 34e <close>$/;"	l
b2	user/usertests.asm	/^      b2:	85a6                	mv	a1,s1$/;"	l
b2	user/wc.asm	/^  b2:	8666                	mv	a2,s9$/;"	l
b2	user/zombie.asm	/^  b2:	1702                	slli	a4,a4,0x20$/;"	l
b20	user/sh.asm	/^     b20:	2c8080e7          	jalr	712(ra) # de4 <chdir>$/;"	l
b22	user/usertests.asm	/^     b22:	c939                	beqz	a0,b78 <createdelete+0x84>$/;"	l
b24	user/sh.asm	/^     b24:	fa0558e3          	bgez	a0,ad4 <main+0x6e>$/;"	l
b24	user/usertests.asm	/^     b24:	2905                	addiw	s2,s2,1$/;"	l
b26	user/usertests.asm	/^     b26:	ff3917e3          	bne	s2,s3,b14 <createdelete+0x20>$/;"	l
b28	user/sh.asm	/^     b28:	8652                	mv	a2,s4$/;"	l
b2a	user/sh.asm	/^     b2a:	85d6                	mv	a1,s5$/;"	l
b2a	user/usertests.asm	/^     b2a:	4491                	li	s1,4$/;"	l
b2c	user/sh.asm	/^     b2c:	4509                	li	a0,2$/;"	l
b2c	user/usertests.asm	/^     b2c:	f7c40513          	addi	a0,s0,-132$/;"	l
b2e	user/sh.asm	/^     b2e:	00000097          	auipc	ra,0x0$/;"	l
b30	user/usertests.asm	/^     b30:	00004097          	auipc	ra,0x4$/;"	l
b32	user/sh.asm	/^     b32:	598080e7          	jalr	1432(ra) # 10c6 <fprintf>$/;"	l
b34	user/usertests.asm	/^     b34:	8d0080e7          	jalr	-1840(ra) # 4400 <wait>$/;"	l
b36	user/sh.asm	/^     b36:	bf79                	j	ad4 <main+0x6e>$/;"	l
b38	user/sh.asm	/^     b38:	00001517          	auipc	a0,0x1$/;"	l
b38	user/usertests.asm	/^     b38:	f7c42903          	lw	s2,-132(s0)$/;"	l
b3c	user/sh.asm	/^     b3c:	8e050513          	addi	a0,a0,-1824 # 1418 <buf.1147>$/;"	l
b3c	user/usertests.asm	/^     b3c:	0e091263          	bnez	s2,c20 <createdelete+0x12c>$/;"	l
b4	user/cat.asm	/^  b4:	00000097          	auipc	ra,0x0$/;"	l
b4	user/echo.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	user/forktest.asm	/^  b4:	00000517          	auipc	a0,0x0$/;"	l
b4	user/kill.asm	/^  b4:	1141                	addi	sp,sp,-16$/;"	l
b4	user/ln.asm	/^  b4:	0800                	addi	s0,sp,16$/;"	l
b4	user/sh.asm	/^      b4:	c10d                	beqz	a0,d6 <runcmd+0x2c>$/;"	l
b4	user/usertests.asm	/^      b4:	00005517          	auipc	a0,0x5$/;"	l
b4	user/wc.asm	/^  b4:	85e2                	mv	a1,s8$/;"	l
b4	user/zombie.asm	/^  b4:	9301                	srli	a4,a4,0x20$/;"	l
b40	user/sh.asm	/^     b40:	00000097          	auipc	ra,0x0$/;"	l
b40	user/usertests.asm	/^     b40:	34fd                	addiw	s1,s1,-1$/;"	l
b42	user/usertests.asm	/^     b42:	f4ed                	bnez	s1,b2c <createdelete+0x38>$/;"	l
b44	user/sh.asm	/^     b44:	e9e080e7          	jalr	-354(ra) # 9de <parsecmd>$/;"	l
b44	user/usertests.asm	/^     b44:	f8040123          	sb	zero,-126(s0)$/;"	l
b48	user/sh.asm	/^     b48:	fffff097          	auipc	ra,0xfffff$/;"	l
b48	user/usertests.asm	/^     b48:	03000993          	li	s3,48$/;"	l
b4c	user/sh.asm	/^     b4c:	562080e7          	jalr	1378(ra) # aa <runcmd>$/;"	l
b4c	user/usertests.asm	/^     b4c:	5a7d                	li	s4,-1$/;"	l
b4e	user/usertests.asm	/^     b4e:	07000c13          	li	s8,112$/;"	l
b50	user/sh.asm	/^     b50:	4501                	li	a0,0$/;"	l
b52	user/sh.asm	/^     b52:	00000097          	auipc	ra,0x0$/;"	l
b52	user/usertests.asm	/^     b52:	4b21                	li	s6,8$/;"	l
b54	user/usertests.asm	/^     b54:	4ba5                	li	s7,9$/;"	l
b56	user/sh.asm	/^     b56:	222080e7          	jalr	546(ra) # d74 <exit>$/;"	l
b56	user/usertests.asm	/^     b56:	07400a93          	li	s5,116$/;"	l
b5a	user/sh.asm	/^     b5a:	1141                	addi	sp,sp,-16$/;"	l
b5a	user/usertests.asm	/^     b5a:	a29d                	j	cc0 <createdelete+0x1cc>$/;"	l
b5c	user/sh.asm	/^     b5c:	e422                	sd	s0,8(sp)$/;"	l
b5c	user/usertests.asm	/^     b5c:	85e6                	mv	a1,s9$/;"	l
b5e	user/sh.asm	/^     b5e:	0800                	addi	s0,sp,16$/;"	l
b5e	user/usertests.asm	/^     b5e:	00005517          	auipc	a0,0x5$/;"	l
b6	user/echo.asm	/^  b6:	0585                	addi	a1,a1,1$/;"	l
b6	user/grep.asm	/^  b6:	bfc9                	j	88 <matchhere+0x3a>$/;"	l
b6	user/init.asm	/^  b6:	00000517          	auipc	a0,0x0$/;"	l
b6	user/kill.asm	/^  b6:	e422                	sd	s0,8(sp)$/;"	l
b6	user/kthtest.asm	/^  b6:	0005c503          	lbu	a0,0(a1)$/;"	l
b6	user/ln.asm	/^  b6:	00054783          	lbu	a5,0(a0)$/;"	l
b6	user/ls.asm	/^  b6:	2a4080e7          	jalr	676(ra) # 356 <memset>$/;"	l
b6	user/mkdir.asm	/^  b6:	fef709e3          	beq	a4,a5,a8 <strcmp+0x14>$/;"	l
b6	user/rm.asm	/^  b6:	fef709e3          	beq	a4,a5,a8 <strcmp+0x14>$/;"	l
b6	user/sh.asm	/^      b6:	84aa                	mv	s1,a0$/;"	l
b6	user/stressfs.asm	/^  b6:	00000517          	auipc	a0,0x0$/;"	l
b6	user/wc.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b6	user/zombie.asm	/^  b6:	0705                	addi	a4,a4,1$/;"	l
b60	user/sh.asm	/^     b60:	87aa                	mv	a5,a0$/;"	l
b62	user/sh.asm	/^     b62:	0585                	addi	a1,a1,1$/;"	l
b62	user/usertests.asm	/^     b62:	b6250513          	addi	a0,a0,-1182 # 56c0 <malloc+0xe88>$/;"	l
b64	user/sh.asm	/^     b64:	0785                	addi	a5,a5,1$/;"	l
b66	user/sh.asm	/^     b66:	fff5c703          	lbu	a4,-1(a1)$/;"	l
b66	user/usertests.asm	/^     b66:	00004097          	auipc	ra,0x4$/;"	l
b6a	user/sh.asm	/^     b6a:	fee78fa3          	sb	a4,-1(a5)$/;"	l
b6a	user/usertests.asm	/^     b6a:	c12080e7          	jalr	-1006(ra) # 4778 <printf>$/;"	l
b6e	user/sh.asm	/^     b6e:	fb75                	bnez	a4,b62 <strcpy+0x8>$/;"	l
b6e	user/usertests.asm	/^     b6e:	4505                	li	a0,1$/;"	l
b70	user/sh.asm	/^     b70:	6422                	ld	s0,8(sp)$/;"	l
b70	user/usertests.asm	/^     b70:	00004097          	auipc	ra,0x4$/;"	l
b72	user/sh.asm	/^     b72:	0141                	addi	sp,sp,16$/;"	l
b74	user/sh.asm	/^     b74:	8082                	ret$/;"	l
b74	user/usertests.asm	/^     b74:	888080e7          	jalr	-1912(ra) # 43f8 <exit>$/;"	l
b76	user/sh.asm	/^     b76:	1141                	addi	sp,sp,-16$/;"	l
b78	user/sh.asm	/^     b78:	e422                	sd	s0,8(sp)$/;"	l
b78	user/usertests.asm	/^     b78:	0709091b          	addiw	s2,s2,112$/;"	l
b7a	user/sh.asm	/^     b7a:	0800                	addi	s0,sp,16$/;"	l
b7c	user/sh.asm	/^     b7c:	00054783          	lbu	a5,0(a0)$/;"	l
b7c	user/usertests.asm	/^     b7c:	f9240023          	sb	s2,-128(s0)$/;"	l
b8	user/cat.asm	/^  b8:	2ba080e7          	jalr	698(ra) # 36e <open>$/;"	l
b8	user/echo.asm	/^  b8:	00054783          	lbu	a5,0(a0)$/;"	l
b8	user/forktest.asm	/^  b8:	38c50513          	addi	a0,a0,908 # 440 <kthtest+0x68>$/;"	l
b8	user/grep.asm	/^  b8:	0585                	addi	a1,a1,1$/;"	l
b8	user/kill.asm	/^  b8:	0800                	addi	s0,sp,16$/;"	l
b8	user/sh.asm	/^      b8:	4118                	lw	a4,0(a0)$/;"	l
b8	user/usertests.asm	/^      b8:	b7c50513          	addi	a0,a0,-1156 # 4c30 <malloc+0x3f8>$/;"	l
b8	user/zombie.asm	/^  b8:	972a                	add	a4,a4,a0$/;"	l
b80	user/sh.asm	/^     b80:	cf91                	beqz	a5,b9c <strcmp+0x26>$/;"	l
b80	user/usertests.asm	/^     b80:	f8040123          	sb	zero,-126(s0)$/;"	l
b82	user/sh.asm	/^     b82:	0005c703          	lbu	a4,0(a1)$/;"	l
b84	user/usertests.asm	/^     b84:	4951                	li	s2,20$/;"	l
b86	user/sh.asm	/^     b86:	00f71b63          	bne	a4,a5,b9c <strcmp+0x26>$/;"	l
b86	user/usertests.asm	/^     b86:	a015                	j	baa <createdelete+0xb6>$/;"	l
b88	user/usertests.asm	/^     b88:	85e6                	mv	a1,s9$/;"	l
b8a	user/sh.asm	/^     b8a:	0505                	addi	a0,a0,1$/;"	l
b8a	user/usertests.asm	/^     b8a:	00004517          	auipc	a0,0x4$/;"	l
b8c	user/sh.asm	/^     b8c:	0585                	addi	a1,a1,1$/;"	l
b8e	user/sh.asm	/^     b8e:	00054783          	lbu	a5,0(a0)$/;"	l
b8e	user/usertests.asm	/^     b8e:	42e50513          	addi	a0,a0,1070 # 4fb8 <malloc+0x780>$/;"	l
b92	user/sh.asm	/^     b92:	c789                	beqz	a5,b9c <strcmp+0x26>$/;"	l
b92	user/usertests.asm	/^     b92:	00004097          	auipc	ra,0x4$/;"	l
b94	user/sh.asm	/^     b94:	0005c703          	lbu	a4,0(a1)$/;"	l
b96	user/usertests.asm	/^     b96:	be6080e7          	jalr	-1050(ra) # 4778 <printf>$/;"	l
b98	user/sh.asm	/^     b98:	fef709e3          	beq	a4,a5,b8a <strcmp+0x14>$/;"	l
b9a	user/usertests.asm	/^     b9a:	4505                	li	a0,1$/;"	l
b9c	user/sh.asm	/^     b9c:	0005c503          	lbu	a0,0(a1)$/;"	l
b9c	user/usertests.asm	/^     b9c:	00004097          	auipc	ra,0x4$/;"	l
ba	user/grep.asm	/^  ba:	00178513          	addi	a0,a5,1$/;"	l
ba	user/init.asm	/^  ba:	7a250513          	addi	a0,a0,1954 # 858 <malloc+0x11e>$/;"	l
ba	user/kill.asm	/^  ba:	00054783          	lbu	a5,0(a0)$/;"	l
ba	user/kthtest.asm	/^  ba:	40a7853b          	subw	a0,a5,a0$/;"	l
ba	user/ln.asm	/^  ba:	cf91                	beqz	a5,d6 <strlen+0x26>$/;"	l
ba	user/ls.asm	/^  ba:	84ca                	mv	s1,s2$/;"	l
ba	user/mkdir.asm	/^  ba:	0005c503          	lbu	a0,0(a1)$/;"	l
ba	user/rm.asm	/^  ba:	0005c503          	lbu	a0,0(a1)$/;"	l
ba	user/sh.asm	/^      ba:	4795                	li	a5,5$/;"	l
ba	user/stressfs.asm	/^  ba:	7c250513          	addi	a0,a0,1986 # 878 <malloc+0x112>$/;"	l
ba	user/wc.asm	/^  ba:	83a50513          	addi	a0,a0,-1990 # 8f0 <malloc+0x100>$/;"	l
ba	user/zombie.asm	/^  ba:	00b78023          	sb	a1,0(a5)$/;"	l
ba0	user/sh.asm	/^     ba0:	40a7853b          	subw	a0,a5,a0$/;"	l
ba0	user/usertests.asm	/^     ba0:	85c080e7          	jalr	-1956(ra) # 43f8 <exit>$/;"	l
ba4	user/sh.asm	/^     ba4:	6422                	ld	s0,8(sp)$/;"	l
ba4	user/usertests.asm	/^     ba4:	2485                	addiw	s1,s1,1$/;"	l
ba6	user/sh.asm	/^     ba6:	0141                	addi	sp,sp,16$/;"	l
ba6	user/usertests.asm	/^     ba6:	07248863          	beq	s1,s2,c16 <createdelete+0x122>$/;"	l
ba8	user/sh.asm	/^     ba8:	8082                	ret$/;"	l
baa	user/sh.asm	/^     baa:	1141                	addi	sp,sp,-16$/;"	l
baa	user/usertests.asm	/^     baa:	0304879b          	addiw	a5,s1,48$/;"	l
bac	user/sh.asm	/^     bac:	e422                	sd	s0,8(sp)$/;"	l
backcmd	user/sh.c	/^backcmd(struct cmd *subcmd)$/;"	f
backcmd	user/sh.c	/^struct backcmd {$/;"	s	file:
bad	kernel/kernel.asm	/^ bad:$/;"	l
badarg	user/usertests.c	/^badarg(char *s)$/;"	f
badwrite	user/usertests.c	/^badwrite(char *s)$/;"	f
bae	user/sh.asm	/^     bae:	0800                	addi	s0,sp,16$/;"	l
bae	user/usertests.asm	/^     bae:	f8f400a3          	sb	a5,-127(s0)$/;"	l
balloc	kernel/fs.c	/^balloc(uint dev)$/;"	f	file:
balloc	mkfs/mkfs.c	/^balloc(int used)$/;"	f
base	user/umalloc.c	/^static Header base;$/;"	v	file:
bb0	user/sh.asm	/^     bb0:	00054783          	lbu	a5,0(a0)$/;"	l
bb2	user/usertests.asm	/^     bb2:	20200593          	li	a1,514$/;"	l
bb4	user/sh.asm	/^     bb4:	cf91                	beqz	a5,bd0 <strlen+0x26>$/;"	l
bb6	user/sh.asm	/^     bb6:	0505                	addi	a0,a0,1$/;"	l
bb6	user/usertests.asm	/^     bb6:	f8040513          	addi	a0,s0,-128$/;"	l
bb8	user/sh.asm	/^     bb8:	87aa                	mv	a5,a0$/;"	l
bba	user/sh.asm	/^     bba:	4685                	li	a3,1$/;"	l
bba	user/usertests.asm	/^     bba:	00004097          	auipc	ra,0x4$/;"	l
bbc	user/sh.asm	/^     bbc:	9e89                	subw	a3,a3,a0$/;"	l
bbe	user/sh.asm	/^     bbe:	00f6853b          	addw	a0,a3,a5$/;"	l
bbe	user/usertests.asm	/^     bbe:	87e080e7          	jalr	-1922(ra) # 4438 <open>$/;"	l
bc	user/cat.asm	/^  bc:	892a                	mv	s2,a0$/;"	l
bc	user/echo.asm	/^  bc:	c789                	beqz	a5,c6 <strcmp+0x26>$/;"	l
bc	user/forktest.asm	/^  bc:	00000097          	auipc	ra,0x0$/;"	l
bc	user/ln.asm	/^  bc:	0505                	addi	a0,a0,1$/;"	l
bc	user/ls.asm	/^  bc:	bf69                	j	56 <fmtname+0x56>$/;"	l
bc	user/sh.asm	/^      bc:	02e7e263          	bltu	a5,a4,e0 <runcmd+0x36>$/;"	l
bc	user/usertests.asm	/^      bc:	00004097          	auipc	ra,0x4$/;"	l
bc2	user/sh.asm	/^     bc2:	0785                	addi	a5,a5,1$/;"	l
bc2	user/usertests.asm	/^     bc2:	fc0543e3          	bltz	a0,b88 <createdelete+0x94>$/;"	l
bc4	user/sh.asm	/^     bc4:	fff7c703          	lbu	a4,-1(a5)$/;"	l
bc6	user/usertests.asm	/^     bc6:	00004097          	auipc	ra,0x4$/;"	l
bc8	user/sh.asm	/^     bc8:	fb7d                	bnez	a4,bbe <strlen+0x14>$/;"	l
bca	user/sh.asm	/^     bca:	6422                	ld	s0,8(sp)$/;"	l
bca	user/usertests.asm	/^     bca:	85a080e7          	jalr	-1958(ra) # 4420 <close>$/;"	l
bcache	kernel/bio.c	/^} bcache;$/;"	v	typeref:struct:__anon1
bcc	user/sh.asm	/^     bcc:	0141                	addi	sp,sp,16$/;"	l
bce	user/sh.asm	/^     bce:	8082                	ret$/;"	l
bce	user/usertests.asm	/^     bce:	fc905be3          	blez	s1,ba4 <createdelete+0xb0>$/;"	l
bcmd	user/sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd0	user/sh.asm	/^     bd0:	4501                	li	a0,0$/;"	l
bd2	user/sh.asm	/^     bd2:	bfe5                	j	bca <strlen+0x20>$/;"	l
bd2	user/usertests.asm	/^     bd2:	0014f793          	andi	a5,s1,1$/;"	l
bd4	user/sh.asm	/^     bd4:	1141                	addi	sp,sp,-16$/;"	l
bd6	user/sh.asm	/^     bd6:	e422                	sd	s0,8(sp)$/;"	l
bd6	user/usertests.asm	/^     bd6:	f7f9                	bnez	a5,ba4 <createdelete+0xb0>$/;"	l
bd8	user/sh.asm	/^     bd8:	0800                	addi	s0,sp,16$/;"	l
bd8	user/usertests.asm	/^     bd8:	01f4d79b          	srliw	a5,s1,0x1f$/;"	l
bda	user/sh.asm	/^     bda:	ce09                	beqz	a2,bf4 <memset+0x20>$/;"	l
bdc	user/sh.asm	/^     bdc:	87aa                	mv	a5,a0$/;"	l
bdc	user/usertests.asm	/^     bdc:	9fa5                	addw	a5,a5,s1$/;"	l
bde	user/sh.asm	/^     bde:	fff6071b          	addiw	a4,a2,-1$/;"	l
bde	user/usertests.asm	/^     bde:	4017d79b          	sraiw	a5,a5,0x1$/;"	l
be	user/cat.asm	/^  be:	02054d63          	bltz	a0,f8 <main+0x72>$/;"	l
be	user/echo.asm	/^  be:	0005c703          	lbu	a4,0(a1)$/;"	l
be	user/grep.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/init.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/kill.asm	/^  be:	cf91                	beqz	a5,da <strlen+0x26>$/;"	l
be	user/kthtest.asm	/^  be:	6422                	ld	s0,8(sp)$/;"	l
be	user/ln.asm	/^  be:	87aa                	mv	a5,a0$/;"	l
be	user/ls.asm	/^  be:	d9010113          	addi	sp,sp,-624$/;"	l
be	user/mkdir.asm	/^  be:	40a7853b          	subw	a0,a5,a0$/;"	l
be	user/rm.asm	/^  be:	40a7853b          	subw	a0,a5,a0$/;"	l
be	user/stressfs.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/wc.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/zombie.asm	/^  be:	0785                	addi	a5,a5,1$/;"	l
be2	user/sh.asm	/^     be2:	1702                	slli	a4,a4,0x20$/;"	l
be2	user/usertests.asm	/^     be2:	0307879b          	addiw	a5,a5,48$/;"	l
be4	user/sh.asm	/^     be4:	9301                	srli	a4,a4,0x20$/;"	l
be6	user/sh.asm	/^     be6:	0705                	addi	a4,a4,1$/;"	l
be6	user/usertests.asm	/^     be6:	f8f400a3          	sb	a5,-127(s0)$/;"	l
be8	user/sh.asm	/^     be8:	972a                	add	a4,a4,a0$/;"	l
bea	user/sh.asm	/^     bea:	00b78023          	sb	a1,0(a5)$/;"	l
bea	user/usertests.asm	/^     bea:	f8040513          	addi	a0,s0,-128$/;"	l
bee	user/sh.asm	/^     bee:	0785                	addi	a5,a5,1$/;"	l
bee	user/usertests.asm	/^     bee:	00004097          	auipc	ra,0x4$/;"	l
begin_op	kernel/log.c	/^begin_op(void)$/;"	f
bf0	user/sh.asm	/^     bf0:	fee79de3          	bne	a5,a4,bea <memset+0x16>$/;"	l
bf2	user/usertests.asm	/^     bf2:	85a080e7          	jalr	-1958(ra) # 4448 <unlink>$/;"	l
bf4	user/sh.asm	/^     bf4:	6422                	ld	s0,8(sp)$/;"	l
bf6	user/sh.asm	/^     bf6:	0141                	addi	sp,sp,16$/;"	l
bf6	user/usertests.asm	/^     bf6:	fa0557e3          	bgez	a0,ba4 <createdelete+0xb0>$/;"	l
bf8	user/sh.asm	/^     bf8:	8082                	ret$/;"	l
bfa	user/sh.asm	/^     bfa:	1141                	addi	sp,sp,-16$/;"	l
bfa	user/usertests.asm	/^     bfa:	85e6                	mv	a1,s9$/;"	l
bfc	user/sh.asm	/^     bfc:	e422                	sd	s0,8(sp)$/;"	l
bfc	user/usertests.asm	/^     bfc:	00004517          	auipc	a0,0x4$/;"	l
bfe	user/sh.asm	/^     bfe:	0800                	addi	s0,sp,16$/;"	l
bfree	kernel/fs.c	/^bfree(int dev, uint b)$/;"	f	file:
bget	kernel/bio.c	/^bget(uint dev, uint blockno)$/;"	f	file:
bi	kernel/kernel.asm	/^  bi = b % BPB;$/;"	d
bigargtest	user/usertests.c	/^bigargtest(char *s)$/;"	f
bigdir	user/usertests.c	/^bigdir(char *s)$/;"	f
bigfile	user/usertests.c	/^bigfile(char *s)$/;"	f
bigwrite	user/usertests.c	/^bigwrite(char *s)$/;"	f
binit	kernel/bio.c	/^binit(void)$/;"	f
block	kernel/log.c	/^  int block[LOGSIZE];$/;"	m	struct:logheader	file:
blockno	kernel/buf.h	/^  uint blockno;$/;"	m	struct:buf
bmap	kernel/fs.c	/^bmap(struct inode *ip, uint bn)$/;"	f	file:
bmapstart	kernel/fs.h	/^  uint bmapstart;    \/\/ Block number of first free map block$/;"	m	struct:superblock
bp	kernel/kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, addr);$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, bmap(ip, off\/BSIZE));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	user/cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/kthtest.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bpin	kernel/bio.c	/^bpin(struct buf *b) {$/;"	f
bprio	kernel/proc.h	/^  int bprio;                   \/\/ base priority$/;"	m	struct:proc
bread	kernel/bio.c	/^bread(uint dev, uint blockno)$/;"	f
brelse	kernel/bio.c	/^brelse(struct buf *b)$/;"	f
bsstest	user/usertests.c	/^bsstest(char *s)$/;"	f
buf	kernel/bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon1	typeref:struct:__anon1::buf	file:
buf	kernel/buf.h	/^struct buf {$/;"	s
buf	kernel/console.c	/^  char buf[INPUT_BUF];$/;"	m	struct:__anon2	file:
buf	user/cat.c	/^char buf[512];$/;"	v
buf	user/grep.c	/^char buf[1024];$/;"	v
buf	user/usertests.c	/^char buf[BUFSZ];$/;"	v
buf	user/wc.c	/^char buf[512];$/;"	v
bunpin	kernel/bio.c	/^bunpin(struct buf *b) {$/;"	f
bwrite	kernel/bio.c	/^bwrite(struct buf *b)$/;"	f
bzero	kernel/fs.c	/^bzero(int dev, int bno)$/;"	f	file:
c	kernel/kernel.asm	/^      c = (c == '\\r') ? '\\n' : c;$/;"	d
c	kernel/kernel.asm	/^    c = cons.buf[cons.r++ % INPUT_BUF];$/;"	d
c	kernel/kernel.asm	/^    c = fmt[++i] & 0xff;$/;"	d
c	user/cat.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/cat.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/echo.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/echo.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	user/forktest.asm	/^   c:	00000097          	auipc	ra,0x0$/;"	l
c	user/grep.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/grep.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	user/init.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/init.asm	/^   c:	4589                	li	a1,2$/;"	l
c	user/initcode.asm	/^   c:	00058593          	mv	a1,a1$/;"	l
c	user/kill.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/kill.asm	/^   c:	4785                	li	a5,1$/;"	l
c	user/kthtest.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/ln.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/ln.asm	/^   c:	02f50063          	beq	a0,a5,2c <main+0x2c>$/;"	l
c	user/ls.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/ls.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/mkdir.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/mkdir.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/rm.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/rm.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/sh.asm	/^       c:	84aa                	mv	s1,a0$/;"	l
c	user/sh.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/stressfs.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/stressfs.asm	/^   c:	20913c23          	sd	s1,536(sp)$/;"	l
c	user/usertests.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	user/usertests.asm	/^  c = sbrk(-PGSIZE);$/;"	d
c	user/usertests.asm	/^  c = sbrk(0);$/;"	d
c	user/usertests.asm	/^  c = sbrk(1);$/;"	d
c	user/usertests.asm	/^  c = sbrk(PGSIZE);$/;"	d
c	user/wc.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/wc.asm	/^   c:	e8d2                	sd	s4,80(sp)$/;"	l
c	user/zombie.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/zombie.asm	/^   c:	234080e7          	jalr	564(ra) # 23c <fork>$/;"	l
c0	user/forktest.asm	/^  c0:	f44080e7          	jalr	-188(ra) # 0 <print>$/;"	l
c0	user/kill.asm	/^  c0:	0505                	addi	a0,a0,1$/;"	l
c0	user/kthtest.asm	/^  c0:	0141                	addi	sp,sp,16$/;"	l
c0	user/ln.asm	/^  c0:	4685                	li	a3,1$/;"	l
c0	user/sh.asm	/^      c0:	00056783          	lwu	a5,0(a0)$/;"	l
c0	user/usertests.asm	/^      c0:	6bc080e7          	jalr	1724(ra) # 4778 <printf>$/;"	l
c0	user/zombie.asm	/^  c0:	fee79de3          	bne	a5,a4,ba <memset+0x16>$/;"	l
c00	user/sh.asm	/^     c00:	00054783          	lbu	a5,0(a0)$/;"	l
c00	user/usertests.asm	/^     c00:	33c50513          	addi	a0,a0,828 # 4f38 <malloc+0x700>$/;"	l
c04	user/sh.asm	/^     c04:	cf91                	beqz	a5,c20 <strchr+0x26>$/;"	l
c04	user/usertests.asm	/^     c04:	00004097          	auipc	ra,0x4$/;"	l
c06	user/sh.asm	/^     c06:	00f58a63          	beq	a1,a5,c1a <strchr+0x20>$/;"	l
c08	user/usertests.asm	/^     c08:	b74080e7          	jalr	-1164(ra) # 4778 <printf>$/;"	l
c0a	user/sh.asm	/^     c0a:	0505                	addi	a0,a0,1$/;"	l
c0c	user/sh.asm	/^     c0c:	00054783          	lbu	a5,0(a0)$/;"	l
c0c	user/usertests.asm	/^     c0c:	4505                	li	a0,1$/;"	l
c0e	user/usertests.asm	/^     c0e:	00003097          	auipc	ra,0x3$/;"	l
c10	user/sh.asm	/^     c10:	c781                	beqz	a5,c18 <strchr+0x1e>$/;"	l
c12	user/sh.asm	/^     c12:	feb79ce3          	bne	a5,a1,c0a <strchr+0x10>$/;"	l
c12	user/usertests.asm	/^     c12:	7ea080e7          	jalr	2026(ra) # 43f8 <exit>$/;"	l
c16	user/sh.asm	/^     c16:	a011                	j	c1a <strchr+0x20>$/;"	l
c16	user/usertests.asm	/^     c16:	4501                	li	a0,0$/;"	l
c18	user/sh.asm	/^     c18:	4501                	li	a0,0$/;"	l
c18	user/usertests.asm	/^     c18:	00003097          	auipc	ra,0x3$/;"	l
c1a	user/sh.asm	/^     c1a:	6422                	ld	s0,8(sp)$/;"	l
c1c	user/sh.asm	/^     c1c:	0141                	addi	sp,sp,16$/;"	l
c1c	user/usertests.asm	/^     c1c:	7e0080e7          	jalr	2016(ra) # 43f8 <exit>$/;"	l
c1e	user/sh.asm	/^     c1e:	8082                	ret$/;"	l
c2	user/cat.asm	/^  c2:	00000097          	auipc	ra,0x0$/;"	l
c2	user/echo.asm	/^  c2:	fef709e3          	beq	a4,a5,b4 <strcmp+0x14>$/;"	l
c2	user/grep.asm	/^  c2:	f90080e7          	jalr	-112(ra) # 4e <matchhere>$/;"	l
c2	user/init.asm	/^  c2:	274080e7          	jalr	628(ra) # 332 <exec>$/;"	l
c2	user/kill.asm	/^  c2:	87aa                	mv	a5,a0$/;"	l
c2	user/kthtest.asm	/^  c2:	8082                	ret$/;"	l
c2	user/ln.asm	/^  c2:	9e89                	subw	a3,a3,a0$/;"	l
c2	user/ls.asm	/^  c2:	26113423          	sd	ra,616(sp)$/;"	l
c2	user/mkdir.asm	/^  c2:	6422                	ld	s0,8(sp)$/;"	l
c2	user/rm.asm	/^  c2:	6422                	ld	s0,8(sp)$/;"	l
c2	user/stressfs.asm	/^  c2:	5e8080e7          	jalr	1512(ra) # 6a6 <printf>$/;"	l
c2	user/wc.asm	/^  c2:	672080e7          	jalr	1650(ra) # 730 <printf>$/;"	l
c20	user/sh.asm	/^     c20:	4501                	li	a0,0$/;"	l
c20	user/usertests.asm	/^     c20:	4505                	li	a0,1$/;"	l
c22	user/sh.asm	/^     c22:	bfe5                	j	c1a <strchr+0x20>$/;"	l
c22	user/usertests.asm	/^     c22:	00003097          	auipc	ra,0x3$/;"	l
c24	user/sh.asm	/^     c24:	711d                	addi	sp,sp,-96$/;"	l
c26	user/sh.asm	/^     c26:	ec86                	sd	ra,88(sp)$/;"	l
c26	user/usertests.asm	/^     c26:	7d6080e7          	jalr	2006(ra) # 43f8 <exit>$/;"	l
c28	user/sh.asm	/^     c28:	e8a2                	sd	s0,80(sp)$/;"	l
c2a	user/sh.asm	/^     c2a:	e4a6                	sd	s1,72(sp)$/;"	l
c2a	user/usertests.asm	/^     c2a:	f8040613          	addi	a2,s0,-128$/;"	l
c2c	user/sh.asm	/^     c2c:	e0ca                	sd	s2,64(sp)$/;"	l
c2e	user/sh.asm	/^     c2e:	fc4e                	sd	s3,56(sp)$/;"	l
c2e	user/usertests.asm	/^     c2e:	85e6                	mv	a1,s9$/;"	l
c30	user/sh.asm	/^     c30:	f852                	sd	s4,48(sp)$/;"	l
c30	user/usertests.asm	/^     c30:	00004517          	auipc	a0,0x4$/;"	l
c32	user/sh.asm	/^     c32:	f456                	sd	s5,40(sp)$/;"	l
c34	user/sh.asm	/^     c34:	f05a                	sd	s6,32(sp)$/;"	l
c34	user/usertests.asm	/^     c34:	3a050513          	addi	a0,a0,928 # 4fd0 <malloc+0x798>$/;"	l
c36	user/sh.asm	/^     c36:	ec5e                	sd	s7,24(sp)$/;"	l
c38	user/sh.asm	/^     c38:	1080                	addi	s0,sp,96$/;"	l
c38	user/usertests.asm	/^     c38:	00004097          	auipc	ra,0x4$/;"	l
c3a	user/sh.asm	/^     c3a:	8baa                	mv	s7,a0$/;"	l
c3c	user/sh.asm	/^     c3c:	8a2e                	mv	s4,a1$/;"	l
c3c	user/usertests.asm	/^     c3c:	b40080e7          	jalr	-1216(ra) # 4778 <printf>$/;"	l
c3e	user/sh.asm	/^     c3e:	892a                	mv	s2,a0$/;"	l
c4	user/forktest.asm	/^  c4:	60e2                	ld	ra,24(sp)$/;"	l
c4	user/kill.asm	/^  c4:	4685                	li	a3,1$/;"	l
c4	user/kthtest.asm	/^  c4:	1141                	addi	sp,sp,-16$/;"	l
c4	user/ln.asm	/^  c4:	00f6853b          	addw	a0,a3,a5$/;"	l
c4	user/mkdir.asm	/^  c4:	0141                	addi	sp,sp,16$/;"	l
c4	user/rm.asm	/^  c4:	0141                	addi	sp,sp,16$/;"	l
c4	user/sh.asm	/^      c4:	078a                	slli	a5,a5,0x2$/;"	l
c4	user/usertests.asm	/^      c4:	4505                	li	a0,1$/;"	l
c4	user/zombie.asm	/^  c4:	6422                	ld	s0,8(sp)$/;"	l
c40	user/sh.asm	/^     c40:	4981                	li	s3,0$/;"	l
c40	user/usertests.asm	/^     c40:	4505                	li	a0,1$/;"	l
c42	user/sh.asm	/^     c42:	4aa9                	li	s5,10$/;"	l
c42	user/usertests.asm	/^     c42:	00003097          	auipc	ra,0x3$/;"	l
c44	user/sh.asm	/^     c44:	4b35                	li	s6,13$/;"	l
c46	user/sh.asm	/^     c46:	0019849b          	addiw	s1,s3,1$/;"	l
c46	user/usertests.asm	/^     c46:	7b6080e7          	jalr	1974(ra) # 43f8 <exit>$/;"	l
c4a	user/sh.asm	/^     c4a:	0344d863          	bge	s1,s4,c7a <gets+0x56>$/;"	l
c4a	user/usertests.asm	/^     c4a:	054b7163          	bgeu	s6,s4,c8c <createdelete+0x198>$/;"	l
c4e	user/sh.asm	/^     c4e:	4605                	li	a2,1$/;"	l
c4e	user/usertests.asm	/^     c4e:	02055a63          	bgez	a0,c82 <createdelete+0x18e>$/;"	l
c50	user/sh.asm	/^     c50:	faf40593          	addi	a1,s0,-81$/;"	l
c52	user/usertests.asm	/^     c52:	2485                	addiw	s1,s1,1$/;"	l
c54	user/sh.asm	/^     c54:	4501                	li	a0,0$/;"	l
c54	user/usertests.asm	/^     c54:	0ff4f493          	andi	s1,s1,255$/;"	l
c56	user/sh.asm	/^     c56:	00000097          	auipc	ra,0x0$/;"	l
c58	user/usertests.asm	/^     c58:	05548c63          	beq	s1,s5,cb0 <createdelete+0x1bc>$/;"	l
c5a	user/sh.asm	/^     c5a:	136080e7          	jalr	310(ra) # d8c <read>$/;"	l
c5c	user/usertests.asm	/^     c5c:	f8940023          	sb	s1,-128(s0)$/;"	l
c5e	user/sh.asm	/^     c5e:	00a05e63          	blez	a0,c7a <gets+0x56>$/;"	l
c6	user/cat.asm	/^  c6:	f3e080e7          	jalr	-194(ra) # 0 <cat>$/;"	l
c6	user/echo.asm	/^  c6:	0005c503          	lbu	a0,0(a1)$/;"	l
c6	user/forktest.asm	/^  c6:	6442                	ld	s0,16(sp)$/;"	l
c6	user/grep.asm	/^  c6:	b7c9                	j	88 <matchhere+0x3a>$/;"	l
c6	user/init.asm	/^  c6:	00000517          	auipc	a0,0x0$/;"	l
c6	user/kill.asm	/^  c6:	9e89                	subw	a3,a3,a0$/;"	l
c6	user/kthtest.asm	/^  c6:	e422                	sd	s0,8(sp)$/;"	l
c6	user/ls.asm	/^  c6:	26813023          	sd	s0,608(sp)$/;"	l
c6	user/mkdir.asm	/^  c6:	8082                	ret$/;"	l
c6	user/rm.asm	/^  c6:	8082                	ret$/;"	l
c6	user/sh.asm	/^      c6:	00001717          	auipc	a4,0x1$/;"	l
c6	user/stressfs.asm	/^  c6:	4581                	li	a1,0$/;"	l
c6	user/usertests.asm	/^      c6:	00004097          	auipc	ra,0x4$/;"	l
c6	user/wc.asm	/^  c6:	70e6                	ld	ra,120(sp)$/;"	l
c6	user/zombie.asm	/^  c6:	0141                	addi	sp,sp,16$/;"	l
c60	user/usertests.asm	/^     c60:	f93400a3          	sb	s3,-127(s0)$/;"	l
c62	user/sh.asm	/^     c62:	faf44783          	lbu	a5,-81(s0)$/;"	l
c64	user/usertests.asm	/^     c64:	4581                	li	a1,0$/;"	l
c66	user/sh.asm	/^     c66:	00f90023          	sb	a5,0(s2)$/;"	l
c66	user/usertests.asm	/^     c66:	f8040513          	addi	a0,s0,-128$/;"	l
c6a	user/sh.asm	/^     c6a:	01578763          	beq	a5,s5,c78 <gets+0x54>$/;"	l
c6a	user/usertests.asm	/^     c6a:	00003097          	auipc	ra,0x3$/;"	l
c6e	user/sh.asm	/^     c6e:	0905                	addi	s2,s2,1$/;"	l
c6e	user/usertests.asm	/^     c6e:	7ce080e7          	jalr	1998(ra) # 4438 <open>$/;"	l
c70	user/sh.asm	/^     c70:	89a6                	mv	s3,s1$/;"	l
c72	user/sh.asm	/^     c72:	fd679ae3          	bne	a5,s6,c46 <gets+0x22>$/;"	l
c72	user/usertests.asm	/^     c72:	00090463          	beqz	s2,c7a <createdelete+0x186>$/;"	l
c76	user/sh.asm	/^     c76:	a011                	j	c7a <gets+0x56>$/;"	l
c76	user/usertests.asm	/^     c76:	fd2bdae3          	bge	s7,s2,c4a <createdelete+0x156>$/;"	l
c78	user/sh.asm	/^     c78:	89a6                	mv	s3,s1$/;"	l
c7a	user/sh.asm	/^     c7a:	99de                	add	s3,s3,s7$/;"	l
c7a	user/usertests.asm	/^     c7a:	fa0548e3          	bltz	a0,c2a <createdelete+0x136>$/;"	l
c7c	user/sh.asm	/^     c7c:	00098023          	sb	zero,0(s3)$/;"	l
c7e	user/usertests.asm	/^     c7e:	014b7963          	bgeu	s6,s4,c90 <createdelete+0x19c>$/;"	l
c8	user/forktest.asm	/^  c8:	64a2                	ld	s1,8(sp)$/;"	l
c8	user/grep.asm	/^  c8:	4505                	li	a0,1$/;"	l
c8	user/kill.asm	/^  c8:	00f6853b          	addw	a0,a3,a5$/;"	l
c8	user/kthtest.asm	/^  c8:	0800                	addi	s0,sp,16$/;"	l
c8	user/ln.asm	/^  c8:	0785                	addi	a5,a5,1$/;"	l
c8	user/mkdir.asm	/^  c8:	1141                	addi	sp,sp,-16$/;"	l
c8	user/rm.asm	/^  c8:	1141                	addi	sp,sp,-16$/;"	l
c8	user/stressfs.asm	/^  c8:	fd040513          	addi	a0,s0,-48$/;"	l
c8	user/wc.asm	/^  c8:	7446                	ld	s0,112(sp)$/;"	l
c8	user/zombie.asm	/^  c8:	8082                	ret$/;"	l
c80	user/sh.asm	/^     c80:	855e                	mv	a0,s7$/;"	l
c82	user/sh.asm	/^     c82:	60e6                	ld	ra,88(sp)$/;"	l
c82	user/usertests.asm	/^     c82:	00003097          	auipc	ra,0x3$/;"	l
c84	user/sh.asm	/^     c84:	6446                	ld	s0,80(sp)$/;"	l
c86	user/sh.asm	/^     c86:	64a6                	ld	s1,72(sp)$/;"	l
c86	user/usertests.asm	/^     c86:	79e080e7          	jalr	1950(ra) # 4420 <close>$/;"	l
c88	user/sh.asm	/^     c88:	6906                	ld	s2,64(sp)$/;"	l
c8a	user/sh.asm	/^     c8a:	79e2                	ld	s3,56(sp)$/;"	l
c8a	user/usertests.asm	/^     c8a:	b7e1                	j	c52 <createdelete+0x15e>$/;"	l
c8c	user/sh.asm	/^     c8c:	7a42                	ld	s4,48(sp)$/;"	l
c8c	user/usertests.asm	/^     c8c:	fc0543e3          	bltz	a0,c52 <createdelete+0x15e>$/;"	l
c8e	user/sh.asm	/^     c8e:	7aa2                	ld	s5,40(sp)$/;"	l
c90	user/sh.asm	/^     c90:	7b02                	ld	s6,32(sp)$/;"	l
c90	user/usertests.asm	/^     c90:	f8040613          	addi	a2,s0,-128$/;"	l
c92	user/sh.asm	/^     c92:	6be2                	ld	s7,24(sp)$/;"	l
c94	user/sh.asm	/^     c94:	6125                	addi	sp,sp,96$/;"	l
c94	user/usertests.asm	/^     c94:	85e6                	mv	a1,s9$/;"	l
c96	user/sh.asm	/^     c96:	8082                	ret$/;"	l
c96	user/usertests.asm	/^     c96:	00004517          	auipc	a0,0x4$/;"	l
c98	user/sh.asm	/^     c98:	1101                	addi	sp,sp,-32$/;"	l
c9a	user/sh.asm	/^     c9a:	ec06                	sd	ra,24(sp)$/;"	l
c9a	user/usertests.asm	/^     c9a:	36250513          	addi	a0,a0,866 # 4ff8 <malloc+0x7c0>$/;"	l
c9c	user/sh.asm	/^     c9c:	e822                	sd	s0,16(sp)$/;"	l
c9e	user/sh.asm	/^     c9e:	e426                	sd	s1,8(sp)$/;"	l
c9e	user/usertests.asm	/^     c9e:	00004097          	auipc	ra,0x4$/;"	l
ca	user/cat.asm	/^  ca:	854a                	mv	a0,s2$/;"	l
ca	user/echo.asm	/^  ca:	40a7853b          	subw	a0,a5,a0$/;"	l
ca	user/forktest.asm	/^  ca:	6902                	ld	s2,0(sp)$/;"	l
ca	user/grep.asm	/^  ca:	8082                	ret$/;"	l
ca	user/init.asm	/^  ca:	79a50513          	addi	a0,a0,1946 # 860 <malloc+0x126>$/;"	l
ca	user/kthtest.asm	/^  ca:	00054783          	lbu	a5,0(a0)$/;"	l
ca	user/ln.asm	/^  ca:	fff7c703          	lbu	a4,-1(a5)$/;"	l
ca	user/ls.asm	/^  ca:	24913c23          	sd	s1,600(sp)$/;"	l
ca	user/mkdir.asm	/^  ca:	e422                	sd	s0,8(sp)$/;"	l
ca	user/rm.asm	/^  ca:	e422                	sd	s0,8(sp)$/;"	l
ca	user/sh.asm	/^      ca:	1da70713          	addi	a4,a4,474 # 12a0 <malloc+0xec>$/;"	l
ca	user/usertests.asm	/^      ca:	332080e7          	jalr	818(ra) # 43f8 <exit>$/;"	l
ca	user/wc.asm	/^  ca:	74a6                	ld	s1,104(sp)$/;"	l
ca	user/zombie.asm	/^  ca:	1141                	addi	sp,sp,-16$/;"	l
ca0	user/sh.asm	/^     ca0:	e04a                	sd	s2,0(sp)$/;"	l
ca2	user/sh.asm	/^     ca2:	1000                	addi	s0,sp,32$/;"	l
ca2	user/usertests.asm	/^     ca2:	ada080e7          	jalr	-1318(ra) # 4778 <printf>$/;"	l
ca4	user/sh.asm	/^     ca4:	892e                	mv	s2,a1$/;"	l
ca6	user/sh.asm	/^     ca6:	4581                	li	a1,0$/;"	l
ca6	user/usertests.asm	/^     ca6:	4505                	li	a0,1$/;"	l
ca8	user/sh.asm	/^     ca8:	00000097          	auipc	ra,0x0$/;"	l
ca8	user/usertests.asm	/^     ca8:	00003097          	auipc	ra,0x3$/;"	l
cac	user/sh.asm	/^     cac:	10c080e7          	jalr	268(ra) # db4 <open>$/;"	l
cac	user/usertests.asm	/^     cac:	750080e7          	jalr	1872(ra) # 43f8 <exit>$/;"	l
cat	user/cat.c	/^cat(int fd)$/;"	f
cb0	user/sh.asm	/^     cb0:	02054563          	bltz	a0,cda <stat+0x42>$/;"	l
cb0	user/usertests.asm	/^     cb0:	2905                	addiw	s2,s2,1$/;"	l
cb2	user/usertests.asm	/^     cb2:	2a05                	addiw	s4,s4,1$/;"	l
cb4	user/sh.asm	/^     cb4:	84aa                	mv	s1,a0$/;"	l
cb4	user/usertests.asm	/^     cb4:	2985                	addiw	s3,s3,1$/;"	l
cb6	user/sh.asm	/^     cb6:	85ca                	mv	a1,s2$/;"	l
cb6	user/usertests.asm	/^     cb6:	0ff9f993          	andi	s3,s3,255$/;"	l
cb8	user/sh.asm	/^     cb8:	00000097          	auipc	ra,0x0$/;"	l
cba	user/usertests.asm	/^     cba:	47d1                	li	a5,20$/;"	l
cbc	user/sh.asm	/^     cbc:	114080e7          	jalr	276(ra) # dcc <fstat>$/;"	l
cbc	user/usertests.asm	/^     cbc:	02f90a63          	beq	s2,a5,cf0 <createdelete+0x1fc>$/;"	l
cbuf	kernel/kernel.asm	/^    cbuf = c;$/;"	d
cc	user/cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/cat.asm	/^  cc:	00000097          	auipc	ra,0x0$/;"	l
cc	user/echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/forktest.asm	/^  cc:	6105                	addi	sp,sp,32$/;"	l
cc	user/grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/grep.asm	/^  cc:	1101                	addi	sp,sp,-32$/;"	l
cc	user/init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/kill.asm	/^  cc:	0785                	addi	a5,a5,1$/;"	l
cc	user/kthtest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/mkdir.asm	/^  cc:	0800                	addi	s0,sp,16$/;"	l
cc	user/rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/rm.asm	/^  cc:	0800                	addi	s0,sp,16$/;"	l
cc	user/sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^  cc:	00000097          	auipc	ra,0x0$/;"	l
cc	user/usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	user/usertests.asm	/^      cc = cc * 2;$/;"	d
cc	user/usertests.asm	/^    cc = 1;$/;"	d
cc	user/usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/usertests.asm	/^    cc = read(fd, buf, SZ\/2);$/;"	d
cc	user/usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	user/wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/wc.asm	/^  cc:	7906                	ld	s2,96(sp)$/;"	l
cc	user/zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/zombie.asm	/^  cc:	e422                	sd	s0,8(sp)$/;"	l
cc0	user/sh.asm	/^     cc0:	892a                	mv	s2,a0$/;"	l
cc0	user/usertests.asm	/^     cc0:	84e2                	mv	s1,s8$/;"	l
cc2	user/sh.asm	/^     cc2:	8526                	mv	a0,s1$/;"	l
cc2	user/usertests.asm	/^     cc2:	bf69                	j	c5c <createdelete+0x168>$/;"	l
cc4	user/sh.asm	/^     cc4:	00000097          	auipc	ra,0x0$/;"	l
cc4	user/usertests.asm	/^     cc4:	2905                	addiw	s2,s2,1$/;"	l
cc6	user/usertests.asm	/^     cc6:	0ff97913          	andi	s2,s2,255$/;"	l
cc8	user/sh.asm	/^     cc8:	0d8080e7          	jalr	216(ra) # d9c <close>$/;"	l
cca	user/usertests.asm	/^     cca:	2985                	addiw	s3,s3,1$/;"	l
ccc	user/sh.asm	/^     ccc:	854a                	mv	a0,s2$/;"	l
ccc	user/usertests.asm	/^     ccc:	0ff9f993          	andi	s3,s3,255$/;"	l
cce	user/sh.asm	/^     cce:	60e2                	ld	ra,24(sp)$/;"	l
cd0	user/sh.asm	/^     cd0:	6442                	ld	s0,16(sp)$/;"	l
cd0	user/usertests.asm	/^     cd0:	03490863          	beq	s2,s4,d00 <createdelete+0x20c>$/;"	l
cd2	user/sh.asm	/^     cd2:	64a2                	ld	s1,8(sp)$/;"	l
cd4	user/sh.asm	/^     cd4:	6902                	ld	s2,0(sp)$/;"	l
cd4	user/usertests.asm	/^     cd4:	84d6                	mv	s1,s5$/;"	l
cd6	user/sh.asm	/^     cd6:	6105                	addi	sp,sp,32$/;"	l
cd6	user/usertests.asm	/^     cd6:	f9240023          	sb	s2,-128(s0)$/;"	l
cd8	user/sh.asm	/^     cd8:	8082                	ret$/;"	l
cda	user/sh.asm	/^     cda:	597d                	li	s2,-1$/;"	l
cda	user/usertests.asm	/^     cda:	f93400a3          	sb	s3,-127(s0)$/;"	l
cdc	user/sh.asm	/^     cdc:	bfc5                	j	ccc <stat+0x34>$/;"	l
cde	user/sh.asm	/^     cde:	1141                	addi	sp,sp,-16$/;"	l
cde	user/usertests.asm	/^     cde:	f8040513          	addi	a0,s0,-128$/;"	l
ce	user/echo.asm	/^  ce:	6422                	ld	s0,8(sp)$/;"	l
ce	user/forktest.asm	/^  ce:	8082                	ret$/;"	l
ce	user/grep.asm	/^  ce:	ec06                	sd	ra,24(sp)$/;"	l
ce	user/init.asm	/^  ce:	00000097          	auipc	ra,0x0$/;"	l
ce	user/kill.asm	/^  ce:	fff7c703          	lbu	a4,-1(a5)$/;"	l
ce	user/kthtest.asm	/^  ce:	cf91                	beqz	a5,ea <strlen+0x26>$/;"	l
ce	user/ln.asm	/^  ce:	fb7d                	bnez	a4,c4 <strlen+0x14>$/;"	l
ce	user/ls.asm	/^  ce:	25213823          	sd	s2,592(sp)$/;"	l
ce	user/mkdir.asm	/^  ce:	00054783          	lbu	a5,0(a0)$/;"	l
ce	user/rm.asm	/^  ce:	00054783          	lbu	a5,0(a0)$/;"	l
ce	user/sh.asm	/^      ce:	97ba                	add	a5,a5,a4$/;"	l
ce	user/usertests.asm	/^      ce:	85a6                	mv	a1,s1$/;"	l
ce	user/wc.asm	/^  ce:	69e6                	ld	s3,88(sp)$/;"	l
ce	user/zombie.asm	/^  ce:	0800                	addi	s0,sp,16$/;"	l
ce0	user/sh.asm	/^     ce0:	e422                	sd	s0,8(sp)$/;"	l
ce2	user/sh.asm	/^     ce2:	0800                	addi	s0,sp,16$/;"	l
ce2	user/usertests.asm	/^     ce2:	00003097          	auipc	ra,0x3$/;"	l
ce4	user/sh.asm	/^     ce4:	00054703          	lbu	a4,0(a0)$/;"	l
ce6	user/usertests.asm	/^     ce6:	766080e7          	jalr	1894(ra) # 4448 <unlink>$/;"	l
ce8	user/sh.asm	/^     ce8:	02d00793          	li	a5,45$/;"	l
cea	user/usertests.asm	/^     cea:	34fd                	addiw	s1,s1,-1$/;"	l
cec	user/sh.asm	/^     cec:	4805                	li	a6,1$/;"	l
cec	user/usertests.asm	/^     cec:	f4ed                	bnez	s1,cd6 <createdelete+0x1e2>$/;"	l
cee	user/sh.asm	/^     cee:	04f70363          	beq	a4,a5,d34 <atoi+0x56>$/;"	l
cee	user/usertests.asm	/^     cee:	bfd9                	j	cc4 <createdelete+0x1d0>$/;"	l
cf0	user/usertests.asm	/^     cf0:	03000993          	li	s3,48$/;"	l
cf2	user/sh.asm	/^     cf2:	00054683          	lbu	a3,0(a0)$/;"	l
cf4	user/usertests.asm	/^     cf4:	07000913          	li	s2,112$/;"	l
cf6	user/sh.asm	/^     cf6:	fd06879b          	addiw	a5,a3,-48$/;"	l
cf8	user/usertests.asm	/^     cf8:	4a91                	li	s5,4$/;"	l
cfa	user/sh.asm	/^     cfa:	0ff7f793          	andi	a5,a5,255$/;"	l
cfa	user/usertests.asm	/^     cfa:	08400a13          	li	s4,132$/;"	l
cfe	user/sh.asm	/^     cfe:	4725                	li	a4,9$/;"	l
cfe	user/usertests.asm	/^     cfe:	bfd9                	j	cd4 <createdelete+0x1e0>$/;"	l
ch	kernel/kernel.asm	/^    ch = pi->data[pi->nread++ % PIPESIZE];$/;"	d
chan	kernel/proc.h	/^  void *chan;                  \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc
char	user/cat.asm	/^char buf[512];$/;"	l
char	user/init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	user/sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	user/sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	user/wc.asm	/^char buf[512];$/;"	l
chdir	user/cat.asm	/^chdir:$/;"	l
chdir	user/echo.asm	/^chdir:$/;"	l
chdir	user/forktest.asm	/^chdir:$/;"	l
chdir	user/grep.asm	/^chdir:$/;"	l
chdir	user/init.asm	/^chdir:$/;"	l
chdir	user/kill.asm	/^chdir:$/;"	l
chdir	user/kthtest.asm	/^chdir:$/;"	l
chdir	user/ln.asm	/^chdir:$/;"	l
chdir	user/ls.asm	/^chdir:$/;"	l
chdir	user/mkdir.asm	/^chdir:$/;"	l
chdir	user/rm.asm	/^chdir:$/;"	l
chdir	user/sh.asm	/^chdir:$/;"	l
chdir	user/stressfs.asm	/^chdir:$/;"	l
chdir	user/usertests.asm	/^chdir:$/;"	l
chdir	user/usys.S	/^chdir:$/;"	l
chdir	user/wc.asm	/^chdir:$/;"	l
chdir	user/zombie.asm	/^chdir:$/;"	l
chosen_proc	kernel/kernel.asm	/^                chosen_proc = p;$/;"	d
chosen_proc	kernel/kernel.asm	/^  chosen_proc = &proc[NPROC-1];$/;"	d
clockintr	kernel/trap.c	/^clockintr()$/;"	f
close	user/cat.asm	/^close:$/;"	l
close	user/echo.asm	/^close:$/;"	l
close	user/forktest.asm	/^close:$/;"	l
close	user/grep.asm	/^close:$/;"	l
close	user/init.asm	/^close:$/;"	l
close	user/kill.asm	/^close:$/;"	l
close	user/kthtest.asm	/^close:$/;"	l
close	user/ln.asm	/^close:$/;"	l
close	user/ls.asm	/^close:$/;"	l
close	user/mkdir.asm	/^close:$/;"	l
close	user/rm.asm	/^close:$/;"	l
close	user/sh.asm	/^close:$/;"	l
close	user/stressfs.asm	/^close:$/;"	l
close	user/usertests.asm	/^close:$/;"	l
close	user/usys.S	/^close:$/;"	l
close	user/wc.asm	/^close:$/;"	l
close	user/zombie.asm	/^close:$/;"	l
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	user/sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	user/sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	user/sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	user/sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	user/sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	user/sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	user/sh.c	/^struct cmd {$/;"	s	file:
collect_orphans	kernel/sleeplock.c	/^collect_orphans(struct sleeplock *lk) {$/;"	f
commit	kernel/log.c	/^commit()$/;"	f	file:
committing	kernel/log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	file:
concreate	user/usertests.c	/^concreate(char *s)$/;"	f
cons	kernel/console.c	/^} cons;$/;"	v	typeref:struct:__anon2
consoleinit	kernel/console.c	/^consoleinit(void)$/;"	f
consoleintr	kernel/console.c	/^consoleintr(int c)$/;"	f
consoleread	kernel/console.c	/^consoleread(int user_dst, uint64 dst, int n)$/;"	f
consolewrite	kernel/console.c	/^consolewrite(int user_src, uint64 src, int n)$/;"	f
consputc	kernel/console.c	/^consputc(int c)$/;"	f
context	kernel/proc.h	/^  struct context context;      \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:proc::context
context	kernel/proc.h	/^struct context {$/;"	s
copyin	kernel/vm.c	/^copyin(pagetable_t pagetable, char *dst, uint64 srcva, uint64 len)$/;"	f
copyinstr	kernel/vm.c	/^copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)$/;"	f
copyout	kernel/vm.c	/^copyout(pagetable_t pagetable, uint64 dstva, char *src, uint64 len)$/;"	f
count	user/alarmtest.c	/^volatile static int count;$/;"	v	file:
cpu	kernel/proc.h	/^struct cpu {$/;"	s
cpu	kernel/spinlock.h	/^  struct cpu *cpu;   \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu
cpuid	kernel/proc.c	/^cpuid()$/;"	f
cpus	kernel/proc.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu
create	kernel/sysfile.c	/^create(char *path, short type, short major, short minor)$/;"	f	file:
createdelete	user/usertests.c	/^createdelete(char *s)$/;"	f
createtest	user/usertests.c	/^createtest(char *s)$/;"	f
curr	kernel/kernel.asm	/^      curr = next;$/;"	d
curr	kernel/kernel.asm	/^  curr = p;$/;"	d
cwd	kernel/proc.h	/^  struct inode *cwd;           \/\/ Current directory$/;"	m	struct:proc	typeref:struct:proc::inode
d	kernel/kernel.asm	/^  d = dst;$/;"	d
d0	user/cat.asm	/^  d0:	28a080e7          	jalr	650(ra) # 356 <close>$/;"	l
d0	user/echo.asm	/^  d0:	0141                	addi	sp,sp,16$/;"	l
d0	user/forktest.asm	/^  d0:	00000517          	auipc	a0,0x0$/;"	l
d0	user/grep.asm	/^  d0:	e822                	sd	s0,16(sp)$/;"	l
d0	user/kthtest.asm	/^  d0:	0505                	addi	a0,a0,1$/;"	l
d0	user/ln.asm	/^  d0:	6422                	ld	s0,8(sp)$/;"	l
d0	user/sh.asm	/^      d0:	439c                	lw	a5,0(a5)$/;"	l
d0	user/stressfs.asm	/^  d0:	29a080e7          	jalr	666(ra) # 366 <open>$/;"	l
d0	user/usertests.asm	/^      d0:	00005517          	auipc	a0,0x5$/;"	l
d0	user/wc.asm	/^  d0:	6a46                	ld	s4,80(sp)$/;"	l
d0	user/zombie.asm	/^  d0:	00054783          	lbu	a5,0(a0)$/;"	l
d00	user/sh.asm	/^     d00:	02f76d63          	bltu	a4,a5,d3a <atoi+0x5c>$/;"	l
d00	user/usertests.asm	/^     d00:	60aa                	ld	ra,136(sp)$/;"	l
d02	user/usertests.asm	/^     d02:	640a                	ld	s0,128(sp)$/;"	l
d04	user/sh.asm	/^     d04:	4601                	li	a2,0$/;"	l
d04	user/usertests.asm	/^     d04:	74e6                	ld	s1,120(sp)$/;"	l
d06	user/sh.asm	/^     d06:	45a5                	li	a1,9$/;"	l
d06	user/usertests.asm	/^     d06:	7946                	ld	s2,112(sp)$/;"	l
d08	user/sh.asm	/^     d08:	0505                	addi	a0,a0,1$/;"	l
d08	user/usertests.asm	/^     d08:	79a6                	ld	s3,104(sp)$/;"	l
d0a	user/sh.asm	/^     d0a:	0026179b          	slliw	a5,a2,0x2$/;"	l
d0a	user/usertests.asm	/^     d0a:	7a06                	ld	s4,96(sp)$/;"	l
d0c	user/usertests.asm	/^     d0c:	6ae6                	ld	s5,88(sp)$/;"	l
d0e	user/sh.asm	/^     d0e:	9fb1                	addw	a5,a5,a2$/;"	l
d0e	user/usertests.asm	/^     d0e:	6b46                	ld	s6,80(sp)$/;"	l
d10	user/sh.asm	/^     d10:	0017979b          	slliw	a5,a5,0x1$/;"	l
d10	user/usertests.asm	/^     d10:	6ba6                	ld	s7,72(sp)$/;"	l
d12	user/usertests.asm	/^     d12:	6c06                	ld	s8,64(sp)$/;"	l
d14	user/sh.asm	/^     d14:	9fb5                	addw	a5,a5,a3$/;"	l
d14	user/usertests.asm	/^     d14:	7ce2                	ld	s9,56(sp)$/;"	l
d16	user/sh.asm	/^     d16:	fd07861b          	addiw	a2,a5,-48$/;"	l
d16	user/usertests.asm	/^     d16:	6149                	addi	sp,sp,144$/;"	l
d18	user/usertests.asm	/^     d18:	8082                	ret$/;"	l
d1a	user/sh.asm	/^     d1a:	00054683          	lbu	a3,0(a0)$/;"	l
d1a	user/usertests.asm	/^     d1a:	1101                	addi	sp,sp,-32$/;"	l
d1c	user/usertests.asm	/^     d1c:	ec06                	sd	ra,24(sp)$/;"	l
d1e	user/sh.asm	/^     d1e:	fd06871b          	addiw	a4,a3,-48$/;"	l
d1e	user/usertests.asm	/^     d1e:	e822                	sd	s0,16(sp)$/;"	l
d2	user/echo.asm	/^  d2:	8082                	ret$/;"	l
d2	user/grep.asm	/^  d2:	e426                	sd	s1,8(sp)$/;"	l
d2	user/init.asm	/^  d2:	5ac080e7          	jalr	1452(ra) # 67a <printf>$/;"	l
d2	user/kill.asm	/^  d2:	fb7d                	bnez	a4,c8 <strlen+0x14>$/;"	l
d2	user/kthtest.asm	/^  d2:	87aa                	mv	a5,a0$/;"	l
d2	user/ln.asm	/^  d2:	0141                	addi	sp,sp,16$/;"	l
d2	user/ls.asm	/^  d2:	25313423          	sd	s3,584(sp)$/;"	l
d2	user/mkdir.asm	/^  d2:	cf91                	beqz	a5,ee <strlen+0x26>$/;"	l
d2	user/rm.asm	/^  d2:	cf91                	beqz	a5,ee <strlen+0x26>$/;"	l
d2	user/sh.asm	/^      d2:	97ba                	add	a5,a5,a4$/;"	l
d2	user/wc.asm	/^  d2:	6aa6                	ld	s5,72(sp)$/;"	l
d20	user/usertests.asm	/^     d20:	e426                	sd	s1,8(sp)$/;"	l
d22	user/sh.asm	/^     d22:	0ff77713          	andi	a4,a4,255$/;"	l
d22	user/usertests.asm	/^     d22:	1000                	addi	s0,sp,32$/;"	l
d24	user/usertests.asm	/^     d24:	84aa                	mv	s1,a0$/;"	l
d26	user/sh.asm	/^     d26:	fee5f1e3          	bgeu	a1,a4,d08 <atoi+0x2a>$/;"	l
d26	user/usertests.asm	/^     d26:	00004517          	auipc	a0,0x4$/;"	l
d2a	user/sh.asm	/^     d2a:	02c8053b          	mulw	a0,a6,a2$/;"	l
d2a	user/usertests.asm	/^     d2a:	4ca50513          	addi	a0,a0,1226 # 51f0 <malloc+0x9b8>$/;"	l
d2e	user/sh.asm	/^     d2e:	6422                	ld	s0,8(sp)$/;"	l
d2e	user/usertests.asm	/^     d2e:	00003097          	auipc	ra,0x3$/;"	l
d30	user/sh.asm	/^     d30:	0141                	addi	sp,sp,16$/;"	l
d32	user/sh.asm	/^     d32:	8082                	ret$/;"	l
d32	user/usertests.asm	/^     d32:	732080e7          	jalr	1842(ra) # 4460 <mkdir>$/;"	l
d34	user/sh.asm	/^     d34:	0505                	addi	a0,a0,1$/;"	l
d36	user/sh.asm	/^     d36:	587d                	li	a6,-1$/;"	l
d36	user/usertests.asm	/^     d36:	e141                	bnez	a0,db6 <fourteen+0x9c>$/;"	l
d38	user/sh.asm	/^     d38:	bf6d                	j	cf2 <atoi+0x14>$/;"	l
d38	user/usertests.asm	/^     d38:	00004517          	auipc	a0,0x4$/;"	l
d3a	user/sh.asm	/^     d3a:	4601                	li	a2,0$/;"	l
d3c	user/sh.asm	/^     d3c:	b7fd                	j	d2a <atoi+0x4c>$/;"	l
d3c	user/usertests.asm	/^     d3c:	31050513          	addi	a0,a0,784 # 5048 <malloc+0x810>$/;"	l
d3e	user/sh.asm	/^     d3e:	1141                	addi	sp,sp,-16$/;"	l
d4	user/cat.asm	/^  d4:	04a1                	addi	s1,s1,8$/;"	l
d4	user/echo.asm	/^  d4:	1141                	addi	sp,sp,-16$/;"	l
d4	user/forktest.asm	/^  d4:	34050513          	addi	a0,a0,832 # 410 <kthtest+0x38>$/;"	l
d4	user/grep.asm	/^  d4:	e04a                	sd	s2,0(sp)$/;"	l
d4	user/kill.asm	/^  d4:	6422                	ld	s0,8(sp)$/;"	l
d4	user/kthtest.asm	/^  d4:	4685                	li	a3,1$/;"	l
d4	user/ln.asm	/^  d4:	8082                	ret$/;"	l
d4	user/mkdir.asm	/^  d4:	0505                	addi	a0,a0,1$/;"	l
d4	user/rm.asm	/^  d4:	0505                	addi	a0,a0,1$/;"	l
d4	user/sh.asm	/^      d4:	8782                	jr	a5$/;"	l
d4	user/stressfs.asm	/^  d4:	892a                	mv	s2,a0$/;"	l
d4	user/usertests.asm	/^      d4:	b7850513          	addi	a0,a0,-1160 # 4c48 <malloc+0x410>$/;"	l
d4	user/wc.asm	/^  d4:	6b06                	ld	s6,64(sp)$/;"	l
d4	user/zombie.asm	/^  d4:	cf91                	beqz	a5,f0 <strchr+0x26>$/;"	l
d40	user/sh.asm	/^     d40:	e422                	sd	s0,8(sp)$/;"	l
d40	user/usertests.asm	/^     d40:	00003097          	auipc	ra,0x3$/;"	l
d42	user/sh.asm	/^     d42:	0800                	addi	s0,sp,16$/;"	l
d44	user/sh.asm	/^     d44:	02c05163          	blez	a2,d66 <memmove+0x28>$/;"	l
d44	user/usertests.asm	/^     d44:	720080e7          	jalr	1824(ra) # 4460 <mkdir>$/;"	l
d48	user/sh.asm	/^     d48:	fff6071b          	addiw	a4,a2,-1$/;"	l
d48	user/usertests.asm	/^     d48:	e549                	bnez	a0,dd2 <fourteen+0xb8>$/;"	l
d4a	user/usertests.asm	/^     d4a:	20000593          	li	a1,512$/;"	l
d4c	user/sh.asm	/^     d4c:	1702                	slli	a4,a4,0x20$/;"	l
d4e	user/sh.asm	/^     d4e:	9301                	srli	a4,a4,0x20$/;"	l
d4e	user/usertests.asm	/^     d4e:	00004517          	auipc	a0,0x4$/;"	l
d50	user/sh.asm	/^     d50:	0705                	addi	a4,a4,1$/;"	l
d52	user/sh.asm	/^     d52:	972a                	add	a4,a4,a0$/;"	l
d52	user/usertests.asm	/^     d52:	35250513          	addi	a0,a0,850 # 50a0 <malloc+0x868>$/;"	l
d54	user/sh.asm	/^     d54:	87aa                	mv	a5,a0$/;"	l
d56	user/sh.asm	/^     d56:	0585                	addi	a1,a1,1$/;"	l
d56	user/usertests.asm	/^     d56:	00003097          	auipc	ra,0x3$/;"	l
d58	user/sh.asm	/^     d58:	0785                	addi	a5,a5,1$/;"	l
d5a	user/sh.asm	/^     d5a:	fff5c683          	lbu	a3,-1(a1)$/;"	l
d5a	user/usertests.asm	/^     d5a:	6e2080e7          	jalr	1762(ra) # 4438 <open>$/;"	l
d5e	user/sh.asm	/^     d5e:	fed78fa3          	sb	a3,-1(a5)$/;"	l
d5e	user/usertests.asm	/^     d5e:	08054863          	bltz	a0,dee <fourteen+0xd4>$/;"	l
d6	user/cat.asm	/^  d6:	fd349de3          	bne	s1,s3,b0 <main+0x2a>$/;"	l
d6	user/echo.asm	/^  d6:	e422                	sd	s0,8(sp)$/;"	l
d6	user/grep.asm	/^  d6:	1000                	addi	s0,sp,32$/;"	l
d6	user/init.asm	/^  d6:	4505                	li	a0,1$/;"	l
d6	user/kill.asm	/^  d6:	0141                	addi	sp,sp,16$/;"	l
d6	user/kthtest.asm	/^  d6:	9e89                	subw	a3,a3,a0$/;"	l
d6	user/ln.asm	/^  d6:	4501                	li	a0,0$/;"	l
d6	user/ls.asm	/^  d6:	25413023          	sd	s4,576(sp)$/;"	l
d6	user/mkdir.asm	/^  d6:	87aa                	mv	a5,a0$/;"	l
d6	user/rm.asm	/^  d6:	87aa                	mv	a5,a0$/;"	l
d6	user/sh.asm	/^      d6:	4505                	li	a0,1$/;"	l
d6	user/stressfs.asm	/^  d6:	44d1                	li	s1,20$/;"	l
d6	user/wc.asm	/^  d6:	7be2                	ld	s7,56(sp)$/;"	l
d6	user/zombie.asm	/^  d6:	00f58a63          	beq	a1,a5,ea <strchr+0x20>$/;"	l
d62	user/sh.asm	/^     d62:	fee79ae3          	bne	a5,a4,d56 <memmove+0x18>$/;"	l
d62	user/usertests.asm	/^     d62:	00003097          	auipc	ra,0x3$/;"	l
d66	user/sh.asm	/^     d66:	6422                	ld	s0,8(sp)$/;"	l
d66	user/usertests.asm	/^     d66:	6be080e7          	jalr	1726(ra) # 4420 <close>$/;"	l
d68	user/sh.asm	/^     d68:	0141                	addi	sp,sp,16$/;"	l
d6a	user/sh.asm	/^     d6a:	8082                	ret$/;"	l
d6a	user/usertests.asm	/^     d6a:	4581                	li	a1,0$/;"	l
d6c	user/sh.asm	/^     d6c:	4885                	li	a7,1$/;"	l
d6c	user/usertests.asm	/^     d6c:	00004517          	auipc	a0,0x4$/;"	l
d6e	user/sh.asm	/^     d6e:	00000073          	ecall$/;"	l
d70	user/usertests.asm	/^     d70:	3ac50513          	addi	a0,a0,940 # 5118 <malloc+0x8e0>$/;"	l
d72	user/sh.asm	/^     d72:	8082                	ret$/;"	l
d74	user/sh.asm	/^     d74:	4889                	li	a7,2$/;"	l
d74	user/usertests.asm	/^     d74:	00003097          	auipc	ra,0x3$/;"	l
d76	user/sh.asm	/^     d76:	00000073          	ecall$/;"	l
d78	user/usertests.asm	/^     d78:	6c4080e7          	jalr	1732(ra) # 4438 <open>$/;"	l
d7a	user/sh.asm	/^     d7a:	8082                	ret$/;"	l
d7c	user/sh.asm	/^     d7c:	488d                	li	a7,3$/;"	l
d7c	user/usertests.asm	/^     d7c:	08054763          	bltz	a0,e0a <fourteen+0xf0>$/;"	l
d7e	user/sh.asm	/^     d7e:	00000073          	ecall$/;"	l
d8	user/echo.asm	/^  d8:	0800                	addi	s0,sp,16$/;"	l
d8	user/forktest.asm	/^  d8:	00000097          	auipc	ra,0x0$/;"	l
d8	user/grep.asm	/^  d8:	892a                	mv	s2,a0$/;"	l
d8	user/init.asm	/^  d8:	00000097          	auipc	ra,0x0$/;"	l
d8	user/kill.asm	/^  d8:	8082                	ret$/;"	l
d8	user/kthtest.asm	/^  d8:	00f6853b          	addw	a0,a3,a5$/;"	l
d8	user/ln.asm	/^  d8:	bfe5                	j	d0 <strlen+0x20>$/;"	l
d8	user/mkdir.asm	/^  d8:	4685                	li	a3,1$/;"	l
d8	user/rm.asm	/^  d8:	4685                	li	a3,1$/;"	l
d8	user/sh.asm	/^      d8:	00001097          	auipc	ra,0x1$/;"	l
d8	user/stressfs.asm	/^  d8:	20000613          	li	a2,512$/;"	l
d8	user/usertests.asm	/^      d8:	00004097          	auipc	ra,0x4$/;"	l
d8	user/wc.asm	/^  d8:	7c42                	ld	s8,48(sp)$/;"	l
d80	user/usertests.asm	/^     d80:	00003097          	auipc	ra,0x3$/;"	l
d82	user/sh.asm	/^     d82:	8082                	ret$/;"	l
d84	user/sh.asm	/^     d84:	4891                	li	a7,4$/;"	l
d84	user/usertests.asm	/^     d84:	6a0080e7          	jalr	1696(ra) # 4420 <close>$/;"	l
d86	user/sh.asm	/^     d86:	00000073          	ecall$/;"	l
d88	user/usertests.asm	/^     d88:	00004517          	auipc	a0,0x4$/;"	l
d8a	user/sh.asm	/^     d8a:	8082                	ret$/;"	l
d8c	user/sh.asm	/^     d8c:	4895                	li	a7,5$/;"	l
d8c	user/usertests.asm	/^     d8c:	40050513          	addi	a0,a0,1024 # 5188 <malloc+0x950>$/;"	l
d8e	user/sh.asm	/^     d8e:	00000073          	ecall$/;"	l
d90	user/usertests.asm	/^     d90:	00003097          	auipc	ra,0x3$/;"	l
d92	user/sh.asm	/^     d92:	8082                	ret$/;"	l
d94	user/sh.asm	/^     d94:	48c1                	li	a7,16$/;"	l
d94	user/usertests.asm	/^     d94:	6d0080e7          	jalr	1744(ra) # 4460 <mkdir>$/;"	l
d96	user/sh.asm	/^     d96:	00000073          	ecall$/;"	l
d98	user/usertests.asm	/^     d98:	c559                	beqz	a0,e26 <fourteen+0x10c>$/;"	l
d9a	user/sh.asm	/^     d9a:	8082                	ret$/;"	l
d9a	user/usertests.asm	/^     d9a:	00004517          	auipc	a0,0x4$/;"	l
d9c	user/sh.asm	/^     d9c:	48d5                	li	a7,21$/;"	l
d9e	user/sh.asm	/^     d9e:	00000073          	ecall$/;"	l
d9e	user/usertests.asm	/^     d9e:	44650513          	addi	a0,a0,1094 # 51e0 <malloc+0x9a8>$/;"	l
da	user/cat.asm	/^  da:	4501                	li	a0,0$/;"	l
da	user/echo.asm	/^  da:	00054783          	lbu	a5,0(a0)$/;"	l
da	user/grep.asm	/^  da:	84ae                	mv	s1,a1$/;"	l
da	user/kill.asm	/^  da:	4501                	li	a0,0$/;"	l
da	user/ln.asm	/^  da:	1141                	addi	sp,sp,-16$/;"	l
da	user/ls.asm	/^  da:	23513c23          	sd	s5,568(sp)$/;"	l
da	user/mkdir.asm	/^  da:	9e89                	subw	a3,a3,a0$/;"	l
da	user/rm.asm	/^  da:	9e89                	subw	a3,a3,a0$/;"	l
da	user/wc.asm	/^  da:	7ca2                	ld	s9,40(sp)$/;"	l
da	user/zombie.asm	/^  da:	0505                	addi	a0,a0,1$/;"	l
da2	user/sh.asm	/^     da2:	8082                	ret$/;"	l
da2	user/usertests.asm	/^     da2:	00003097          	auipc	ra,0x3$/;"	l
da4	user/sh.asm	/^     da4:	4899                	li	a7,6$/;"	l
da6	user/sh.asm	/^     da6:	00000073          	ecall$/;"	l
da6	user/usertests.asm	/^     da6:	6be080e7          	jalr	1726(ra) # 4460 <mkdir>$/;"	l
daa	user/sh.asm	/^     daa:	8082                	ret$/;"	l
daa	user/usertests.asm	/^     daa:	cd41                	beqz	a0,e42 <fourteen+0x128>$/;"	l
dac	user/sh.asm	/^     dac:	489d                	li	a7,7$/;"	l
dac	user/usertests.asm	/^     dac:	60e2                	ld	ra,24(sp)$/;"	l
dae	user/sh.asm	/^     dae:	00000073          	ecall$/;"	l
dae	user/usertests.asm	/^     dae:	6442                	ld	s0,16(sp)$/;"	l
data	kernel/buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf
data	kernel/pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	file:
day	kernel/date.h	/^  uint day;$/;"	m	struct:rtcdate
db0	user/usertests.asm	/^     db0:	64a2                	ld	s1,8(sp)$/;"	l
db2	user/sh.asm	/^     db2:	8082                	ret$/;"	l
db2	user/usertests.asm	/^     db2:	6105                	addi	sp,sp,32$/;"	l
db4	user/sh.asm	/^     db4:	48bd                	li	a7,15$/;"	l
db4	user/usertests.asm	/^     db4:	8082                	ret$/;"	l
db6	user/sh.asm	/^     db6:	00000073          	ecall$/;"	l
db6	user/usertests.asm	/^     db6:	85a6                	mv	a1,s1$/;"	l
db8	user/usertests.asm	/^     db8:	00004517          	auipc	a0,0x4$/;"	l
dba	user/sh.asm	/^     dba:	8082                	ret$/;"	l
dbc	user/sh.asm	/^     dbc:	48c5                	li	a7,17$/;"	l
dbc	user/usertests.asm	/^     dbc:	26850513          	addi	a0,a0,616 # 5020 <malloc+0x7e8>$/;"	l
dbe	user/sh.asm	/^     dbe:	00000073          	ecall$/;"	l
dc	user/cat.asm	/^  dc:	00000097          	auipc	ra,0x0$/;"	l
dc	user/forktest.asm	/^  dc:	f28080e7          	jalr	-216(ra) # 0 <print>$/;"	l
dc	user/grep.asm	/^  dc:	00054703          	lbu	a4,0(a0)$/;"	l
dc	user/init.asm	/^  dc:	222080e7          	jalr	546(ra) # 2fa <exit>$/;"	l
dc	user/kill.asm	/^  dc:	bfe5                	j	d4 <strlen+0x20>$/;"	l
dc	user/kthtest.asm	/^  dc:	0785                	addi	a5,a5,1$/;"	l
dc	user/ln.asm	/^  dc:	e422                	sd	s0,8(sp)$/;"	l
dc	user/mkdir.asm	/^  dc:	00f6853b          	addw	a0,a3,a5$/;"	l
dc	user/rm.asm	/^  dc:	00f6853b          	addw	a0,a3,a5$/;"	l
dc	user/sh.asm	/^      dc:	c9c080e7          	jalr	-868(ra) # d74 <exit>$/;"	l
dc	user/stressfs.asm	/^  dc:	dd040593          	addi	a1,s0,-560$/;"	l
dc	user/usertests.asm	/^      dc:	6a0080e7          	jalr	1696(ra) # 4778 <printf>$/;"	l
dc	user/wc.asm	/^  dc:	7d02                	ld	s10,32(sp)$/;"	l
dc	user/zombie.asm	/^  dc:	00054783          	lbu	a5,0(a0)$/;"	l
dc0	user/usertests.asm	/^     dc0:	00004097          	auipc	ra,0x4$/;"	l
dc2	user/sh.asm	/^     dc2:	8082                	ret$/;"	l
dc4	user/sh.asm	/^     dc4:	48c9                	li	a7,18$/;"	l
dc4	user/usertests.asm	/^     dc4:	9b8080e7          	jalr	-1608(ra) # 4778 <printf>$/;"	l
dc6	user/sh.asm	/^     dc6:	00000073          	ecall$/;"	l
dc8	user/usertests.asm	/^     dc8:	4505                	li	a0,1$/;"	l
dca	user/sh.asm	/^     dca:	8082                	ret$/;"	l
dca	user/usertests.asm	/^     dca:	00003097          	auipc	ra,0x3$/;"	l
dcc	user/sh.asm	/^     dcc:	48a1                	li	a7,8$/;"	l
dce	user/sh.asm	/^     dce:	00000073          	ecall$/;"	l
dce	user/usertests.asm	/^     dce:	62e080e7          	jalr	1582(ra) # 43f8 <exit>$/;"	l
dd2	user/sh.asm	/^     dd2:	8082                	ret$/;"	l
dd2	user/usertests.asm	/^     dd2:	85a6                	mv	a1,s1$/;"	l
dd4	user/sh.asm	/^     dd4:	48cd                	li	a7,19$/;"	l
dd4	user/usertests.asm	/^     dd4:	00004517          	auipc	a0,0x4$/;"	l
dd6	user/sh.asm	/^     dd6:	00000073          	ecall$/;"	l
dd8	user/usertests.asm	/^     dd8:	29450513          	addi	a0,a0,660 # 5068 <malloc+0x830>$/;"	l
dda	user/sh.asm	/^     dda:	8082                	ret$/;"	l
ddc	user/sh.asm	/^     ddc:	48d1                	li	a7,20$/;"	l
ddc	user/usertests.asm	/^     ddc:	00004097          	auipc	ra,0x4$/;"	l
dde	user/sh.asm	/^     dde:	00000073          	ecall$/;"	l
de	user/echo.asm	/^  de:	cf91                	beqz	a5,fa <strlen+0x26>$/;"	l
de	user/kill.asm	/^  de:	1141                	addi	sp,sp,-16$/;"	l
de	user/kthtest.asm	/^  de:	fff7c703          	lbu	a4,-1(a5)$/;"	l
de	user/ln.asm	/^  de:	0800                	addi	s0,sp,16$/;"	l
de	user/ls.asm	/^  de:	1c80                	addi	s0,sp,624$/;"	l
de	user/wc.asm	/^  de:	6de2                	ld	s11,24(sp)$/;"	l
de0	user/usertests.asm	/^     de0:	99c080e7          	jalr	-1636(ra) # 4778 <printf>$/;"	l
de2	user/sh.asm	/^     de2:	8082                	ret$/;"	l
de4	user/sh.asm	/^     de4:	48a5                	li	a7,9$/;"	l
de4	user/usertests.asm	/^     de4:	4505                	li	a0,1$/;"	l
de6	user/sh.asm	/^     de6:	00000073          	ecall$/;"	l
de6	user/usertests.asm	/^     de6:	00003097          	auipc	ra,0x3$/;"	l
dea	user/sh.asm	/^     dea:	8082                	ret$/;"	l
dea	user/usertests.asm	/^     dea:	612080e7          	jalr	1554(ra) # 43f8 <exit>$/;"	l
dec	user/sh.asm	/^     dec:	48a9                	li	a7,10$/;"	l
dee	user/sh.asm	/^     dee:	00000073          	ecall$/;"	l
dee	user/usertests.asm	/^     dee:	85a6                	mv	a1,s1$/;"	l
default	kernel/kernel.asm	/^  default:$/;"	l
desc	kernel/virtio_disk.c	/^  struct VRingDesc *desc;$/;"	m	struct:disk	typeref:struct:disk::VRingDesc	file:
dev	kernel/buf.h	/^  uint dev;$/;"	m	struct:buf
dev	kernel/file.h	/^  uint dev;           \/\/ Device number$/;"	m	struct:inode
dev	kernel/log.c	/^  int dev;$/;"	m	struct:log	file:
dev	kernel/stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat
devintr	kernel/trap.c	/^devintr()$/;"	f
devsw	kernel/file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw
devsw	kernel/file.h	/^struct devsw {$/;"	s
df0	user/usertests.asm	/^     df0:	00004517          	auipc	a0,0x4$/;"	l
df2	user/sh.asm	/^     df2:	8082                	ret$/;"	l
df4	user/sh.asm	/^     df4:	48ad                	li	a7,11$/;"	l
df4	user/usertests.asm	/^     df4:	2e050513          	addi	a0,a0,736 # 50d0 <malloc+0x898>$/;"	l
df6	user/sh.asm	/^     df6:	00000073          	ecall$/;"	l
df8	user/usertests.asm	/^     df8:	00004097          	auipc	ra,0x4$/;"	l
dfa	user/sh.asm	/^     dfa:	8082                	ret$/;"	l
dfc	user/sh.asm	/^     dfc:	48b1                	li	a7,12$/;"	l
dfc	user/usertests.asm	/^     dfc:	980080e7          	jalr	-1664(ra) # 4778 <printf>$/;"	l
dfe	user/sh.asm	/^     dfe:	00000073          	ecall$/;"	l
digits	kernel/printf.c	/^static char digits[] = "0123456789abcdef";$/;"	v	file:
digits	user/printf.c	/^static char digits[] = "0123456789ABCDEF";$/;"	v	file:
dinode	kernel/fs.h	/^struct dinode {$/;"	s
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^  dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dirent	kernel/fs.h	/^struct dirent {$/;"	s
dirfile	user/usertests.c	/^dirfile(char *s)$/;"	f
dirlink	kernel/fs.c	/^dirlink(struct inode *dp, char *name, uint inum)$/;"	f
dirlookup	kernel/fs.c	/^dirlookup(struct inode *dp, char *name, uint *poff)$/;"	f
dirtest	user/usertests.c	/^void dirtest(char *s)$/;"	f
disk	kernel/buf.h	/^  int disk;    \/\/ does disk "own" buf?$/;"	m	struct:buf
disk	kernel/virtio_disk.c	/^static struct disk {$/;"	s	file:
disk	kernel/virtio_disk.c	/^} __attribute__ ((aligned (PGSIZE))) disk;$/;"	v	typeref:struct:disk	file:
do_commit	kernel/kernel.asm	/^    do_commit = 1;$/;"	d
dona_list	kernel/proc.h	/^  struct proc *dona_list;        \/\/ point to the list of children, $/;"	m	struct:proc	typeref:struct:proc::proc
dona_next	kernel/proc.h	/^  struct proc *dona_next;        \/\/ point to a sibling,'next' in a linked list.$/;"	m	struct:proc	typeref:struct:proc::proc
dst	user/cat.asm	/^  dst = vdst;$/;"	d
dst	user/echo.asm	/^  dst = vdst;$/;"	d
dst	user/forktest.asm	/^  dst = vdst;$/;"	d
dst	user/grep.asm	/^  dst = vdst;$/;"	d
dst	user/init.asm	/^  dst = vdst;$/;"	d
dst	user/kill.asm	/^  dst = vdst;$/;"	d
dst	user/kthtest.asm	/^  dst = vdst;$/;"	d
dst	user/ln.asm	/^  dst = vdst;$/;"	d
dst	user/ls.asm	/^  dst = vdst;$/;"	d
dst	user/mkdir.asm	/^  dst = vdst;$/;"	d
dst	user/rm.asm	/^  dst = vdst;$/;"	d
dst	user/sh.asm	/^  dst = vdst;$/;"	d
dst	user/stressfs.asm	/^  dst = vdst;$/;"	d
dst	user/usertests.asm	/^  dst = vdst;$/;"	d
dst	user/wc.asm	/^  dst = vdst;$/;"	d
dst	user/zombie.asm	/^  dst = vdst;$/;"	d
dstva	kernel/kernel.asm	/^    dstva = va0 + PGSIZE;$/;"	d
dup	user/cat.asm	/^dup:$/;"	l
dup	user/echo.asm	/^dup:$/;"	l
dup	user/forktest.asm	/^dup:$/;"	l
dup	user/grep.asm	/^dup:$/;"	l
dup	user/init.asm	/^dup:$/;"	l
dup	user/kill.asm	/^dup:$/;"	l
dup	user/kthtest.asm	/^dup:$/;"	l
dup	user/ln.asm	/^dup:$/;"	l
dup	user/ls.asm	/^dup:$/;"	l
dup	user/mkdir.asm	/^dup:$/;"	l
dup	user/rm.asm	/^dup:$/;"	l
dup	user/sh.asm	/^dup:$/;"	l
dup	user/stressfs.asm	/^dup:$/;"	l
dup	user/usertests.asm	/^dup:$/;"	l
dup	user/usys.S	/^dup:$/;"	l
dup	user/wc.asm	/^dup:$/;"	l
dup	user/zombie.asm	/^dup:$/;"	l
e	kernel/console.c	/^  uint e;  \/\/ Edit index$/;"	m	struct:__anon2	file:
e	user/cat.asm	/^   e:	89aa                	mv	s3,a0$/;"	l
e	user/echo.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	user/grep.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	user/init.asm	/^   e:	00001517          	auipc	a0,0x1$/;"	l
e	user/kill.asm	/^   e:	02a7dd63          	bge	a5,a0,48 <main+0x48>$/;"	l
e	user/kthtest.asm	/^   e:	00000517          	auipc	a0,0x0$/;"	l
e	user/ls.asm	/^   e:	84aa                	mv	s1,a0$/;"	l
e	user/mkdir.asm	/^   e:	4785                	li	a5,1$/;"	l
e	user/rm.asm	/^   e:	4785                	li	a5,1$/;"	l
e	user/sh.asm	/^       e:	892e                	mv	s2,a1$/;"	l
e	user/usertests.asm	/^       e:	adf78793          	addi	a5,a5,-1313 # 6ae9 <uninit+0x1>$/;"	l
e	user/wc.asm	/^   e:	e4d6                	sd	s5,72(sp)$/;"	l
e0	user/cat.asm	/^  e0:	252080e7          	jalr	594(ra) # 32e <exit>$/;"	l
e0	user/echo.asm	/^  e0:	0505                	addi	a0,a0,1$/;"	l
e0	user/forktest.asm	/^  e0:	4505                	li	a0,1$/;"	l
e0	user/grep.asm	/^  e0:	05e00793          	li	a5,94$/;"	l
e0	user/init.asm	/^  e0:	1141                	addi	sp,sp,-16$/;"	l
e0	user/kill.asm	/^  e0:	e422                	sd	s0,8(sp)$/;"	l
e0	user/ln.asm	/^  e0:	ce09                	beqz	a2,fa <memset+0x20>$/;"	l
e0	user/ls.asm	/^  e0:	892a                	mv	s2,a0$/;"	l
e0	user/mkdir.asm	/^  e0:	0785                	addi	a5,a5,1$/;"	l
e0	user/rm.asm	/^  e0:	0785                	addi	a5,a5,1$/;"	l
e0	user/sh.asm	/^      e0:	00001517          	auipc	a0,0x1$/;"	l
e0	user/stressfs.asm	/^  e0:	854a                	mv	a0,s2$/;"	l
e0	user/usertests.asm	/^      e0:	4505                	li	a0,1$/;"	l
e0	user/wc.asm	/^  e0:	6109                	addi	sp,sp,128$/;"	l
e0	user/zombie.asm	/^  e0:	c781                	beqz	a5,e8 <strchr+0x1e>$/;"	l
e00	user/usertests.asm	/^     e00:	4505                	li	a0,1$/;"	l
e02	user/sh.asm	/^     e02:	8082                	ret$/;"	l
e02	user/usertests.asm	/^     e02:	00003097          	auipc	ra,0x3$/;"	l
e04	user/sh.asm	/^     e04:	48b5                	li	a7,13$/;"	l
e06	user/sh.asm	/^     e06:	00000073          	ecall$/;"	l
e06	user/usertests.asm	/^     e06:	5f6080e7          	jalr	1526(ra) # 43f8 <exit>$/;"	l
e0a	user/sh.asm	/^     e0a:	8082                	ret$/;"	l
e0a	user/usertests.asm	/^     e0a:	85a6                	mv	a1,s1$/;"	l
e0c	user/sh.asm	/^     e0c:	48b9                	li	a7,14$/;"	l
e0c	user/usertests.asm	/^     e0c:	00004517          	auipc	a0,0x4$/;"	l
e0e	user/sh.asm	/^     e0e:	00000073          	ecall$/;"	l
e10	user/usertests.asm	/^     e10:	33c50513          	addi	a0,a0,828 # 5148 <malloc+0x910>$/;"	l
e12	user/sh.asm	/^     e12:	8082                	ret$/;"	l
e14	user/sh.asm	/^     e14:	48d9                	li	a7,22$/;"	l
e14	user/usertests.asm	/^     e14:	00004097          	auipc	ra,0x4$/;"	l
e16	user/sh.asm	/^     e16:	00000073          	ecall$/;"	l
e18	user/usertests.asm	/^     e18:	964080e7          	jalr	-1692(ra) # 4778 <printf>$/;"	l
e1a	user/sh.asm	/^     e1a:	8082                	ret$/;"	l
e1c	user/sh.asm	/^     e1c:	1101                	addi	sp,sp,-32$/;"	l
e1c	user/usertests.asm	/^     e1c:	4505                	li	a0,1$/;"	l
e1e	user/sh.asm	/^     e1e:	ec06                	sd	ra,24(sp)$/;"	l
e1e	user/usertests.asm	/^     e1e:	00003097          	auipc	ra,0x3$/;"	l
e2	user/echo.asm	/^  e2:	87aa                	mv	a5,a0$/;"	l
e2	user/forktest.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	user/init.asm	/^  e2:	e422                	sd	s0,8(sp)$/;"	l
e2	user/kill.asm	/^  e2:	0800                	addi	s0,sp,16$/;"	l
e2	user/kthtest.asm	/^  e2:	fb7d                	bnez	a4,d8 <strlen+0x14>$/;"	l
e2	user/ln.asm	/^  e2:	87aa                	mv	a5,a0$/;"	l
e2	user/ls.asm	/^  e2:	4581                	li	a1,0$/;"	l
e2	user/mkdir.asm	/^  e2:	fff7c703          	lbu	a4,-1(a5)$/;"	l
e2	user/rm.asm	/^  e2:	fff7c703          	lbu	a4,-1(a5)$/;"	l
e2	user/stressfs.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	user/usertests.asm	/^      e2:	00004097          	auipc	ra,0x4$/;"	l
e2	user/wc.asm	/^  e2:	8082                	ret$/;"	l
e2	user/zombie.asm	/^  e2:	feb79ce3          	bne	a5,a1,da <strchr+0x10>$/;"	l
e20	user/sh.asm	/^     e20:	e822                	sd	s0,16(sp)$/;"	l
e22	user/sh.asm	/^     e22:	1000                	addi	s0,sp,32$/;"	l
e22	user/usertests.asm	/^     e22:	5da080e7          	jalr	1498(ra) # 43f8 <exit>$/;"	l
e24	user/sh.asm	/^     e24:	feb407a3          	sb	a1,-17(s0)$/;"	l
e26	user/usertests.asm	/^     e26:	85a6                	mv	a1,s1$/;"	l
e28	user/sh.asm	/^     e28:	4605                	li	a2,1$/;"	l
e28	user/usertests.asm	/^     e28:	00004517          	auipc	a0,0x4$/;"	l
e2a	user/sh.asm	/^     e2a:	fef40593          	addi	a1,s0,-17$/;"	l
e2c	user/usertests.asm	/^     e2c:	38050513          	addi	a0,a0,896 # 51a8 <malloc+0x970>$/;"	l
e2e	user/sh.asm	/^     e2e:	00000097          	auipc	ra,0x0$/;"	l
e30	user/usertests.asm	/^     e30:	00004097          	auipc	ra,0x4$/;"	l
e32	user/sh.asm	/^     e32:	f66080e7          	jalr	-154(ra) # d94 <write>$/;"	l
e34	user/usertests.asm	/^     e34:	948080e7          	jalr	-1720(ra) # 4778 <printf>$/;"	l
e36	user/sh.asm	/^     e36:	60e2                	ld	ra,24(sp)$/;"	l
e38	user/sh.asm	/^     e38:	6442                	ld	s0,16(sp)$/;"	l
e38	user/usertests.asm	/^     e38:	4505                	li	a0,1$/;"	l
e3a	user/sh.asm	/^     e3a:	6105                	addi	sp,sp,32$/;"	l
e3a	user/usertests.asm	/^     e3a:	00003097          	auipc	ra,0x3$/;"	l
e3c	user/sh.asm	/^     e3c:	8082                	ret$/;"	l
e3e	user/sh.asm	/^     e3e:	7139                	addi	sp,sp,-64$/;"	l
e3e	user/usertests.asm	/^     e3e:	5be080e7          	jalr	1470(ra) # 43f8 <exit>$/;"	l
e4	user/cat.asm	/^  e4:	4501                	li	a0,0$/;"	l
e4	user/echo.asm	/^  e4:	4685                	li	a3,1$/;"	l
e4	user/grep.asm	/^  e4:	00f70e63          	beq	a4,a5,100 <match+0x34>$/;"	l
e4	user/init.asm	/^  e4:	0800                	addi	s0,sp,16$/;"	l
e4	user/kill.asm	/^  e4:	ce09                	beqz	a2,fe <memset+0x20>$/;"	l
e4	user/kthtest.asm	/^  e4:	6422                	ld	s0,8(sp)$/;"	l
e4	user/ln.asm	/^  e4:	fff6071b          	addiw	a4,a2,-1$/;"	l
e4	user/ls.asm	/^  e4:	00000097          	auipc	ra,0x0$/;"	l
e4	user/sh.asm	/^      e4:	20850513          	addi	a0,a0,520 # 12e8 <malloc+0x134>$/;"	l
e4	user/wc.asm	/^  e4:	00000517          	auipc	a0,0x0$/;"	l
e40	user/sh.asm	/^     e40:	fc06                	sd	ra,56(sp)$/;"	l
e42	user/sh.asm	/^     e42:	f822                	sd	s0,48(sp)$/;"	l
e42	user/usertests.asm	/^     e42:	85a6                	mv	a1,s1$/;"	l
e44	user/sh.asm	/^     e44:	f426                	sd	s1,40(sp)$/;"	l
e44	user/usertests.asm	/^     e44:	00004517          	auipc	a0,0x4$/;"	l
e46	user/sh.asm	/^     e46:	f04a                	sd	s2,32(sp)$/;"	l
e48	user/sh.asm	/^     e48:	ec4e                	sd	s3,24(sp)$/;"	l
e48	user/usertests.asm	/^     e48:	3bc50513          	addi	a0,a0,956 # 5200 <malloc+0x9c8>$/;"	l
e4a	user/sh.asm	/^     e4a:	0080                	addi	s0,sp,64$/;"	l
e4c	user/sh.asm	/^     e4c:	c299                	beqz	a3,e52 <printint+0x14>$/;"	l
e4c	user/usertests.asm	/^     e4c:	00004097          	auipc	ra,0x4$/;"	l
e4e	user/sh.asm	/^     e4e:	0005cd63          	bltz	a1,e68 <printint+0x2a>$/;"	l
e50	user/usertests.asm	/^     e50:	92c080e7          	jalr	-1748(ra) # 4778 <printf>$/;"	l
e52	user/sh.asm	/^     e52:	2581                	sext.w	a1,a1$/;"	l
e54	user/sh.asm	/^     e54:	4301                	li	t1,0$/;"	l
e54	user/usertests.asm	/^     e54:	4505                	li	a0,1$/;"	l
e56	user/sh.asm	/^     e56:	fc040713          	addi	a4,s0,-64$/;"	l
e56	user/usertests.asm	/^     e56:	00003097          	auipc	ra,0x3$/;"	l
e5a	user/sh.asm	/^     e5a:	4801                	li	a6,0$/;"	l
e5a	user/usertests.asm	/^     e5a:	5a2080e7          	jalr	1442(ra) # 43f8 <exit>$/;"	l
e5c	user/sh.asm	/^     e5c:	2601                	sext.w	a2,a2$/;"	l
e5e	user/sh.asm	/^     e5e:	00000897          	auipc	a7,0x0$/;"	l
e5e	user/usertests.asm	/^     e5e:	715d                	addi	sp,sp,-80$/;"	l
e6	user/cat.asm	/^  e6:	00000097          	auipc	ra,0x0$/;"	l
e6	user/echo.asm	/^  e6:	9e89                	subw	a3,a3,a0$/;"	l
e6	user/forktest.asm	/^  e6:	256080e7          	jalr	598(ra) # 338 <exit>$/;"	l
e6	user/init.asm	/^  e6:	87aa                	mv	a5,a0$/;"	l
e6	user/kill.asm	/^  e6:	87aa                	mv	a5,a0$/;"	l
e6	user/kthtest.asm	/^  e6:	0141                	addi	sp,sp,16$/;"	l
e6	user/mkdir.asm	/^  e6:	fb7d                	bnez	a4,dc <strlen+0x14>$/;"	l
e6	user/rm.asm	/^  e6:	fb7d                	bnez	a4,dc <strlen+0x14>$/;"	l
e6	user/stressfs.asm	/^  e6:	25c080e7          	jalr	604(ra) # 33e <read>$/;"	l
e6	user/usertests.asm	/^      e6:	316080e7          	jalr	790(ra) # 43f8 <exit>$/;"	l
e6	user/zombie.asm	/^  e6:	a011                	j	ea <strchr+0x20>$/;"	l
e60	user/usertests.asm	/^     e60:	e486                	sd	ra,72(sp)$/;"	l
e62	user/sh.asm	/^     e62:	58288893          	addi	a7,a7,1410 # 13e0 <digits>$/;"	l
e62	user/usertests.asm	/^     e62:	e0a2                	sd	s0,64(sp)$/;"	l
e64	user/usertests.asm	/^     e64:	fc26                	sd	s1,56(sp)$/;"	l
e66	user/sh.asm	/^     e66:	a801                	j	e76 <printint+0x38>$/;"	l
e66	user/usertests.asm	/^     e66:	f84a                	sd	s2,48(sp)$/;"	l
e68	user/sh.asm	/^     e68:	40b005bb          	negw	a1,a1$/;"	l
e68	user/usertests.asm	/^     e68:	f44e                	sd	s3,40(sp)$/;"	l
e6a	user/usertests.asm	/^     e6a:	f052                	sd	s4,32(sp)$/;"	l
e6c	user/sh.asm	/^     e6c:	2581                	sext.w	a1,a1$/;"	l
e6c	user/usertests.asm	/^     e6c:	ec56                	sd	s5,24(sp)$/;"	l
e6e	user/sh.asm	/^     e6e:	4305                	li	t1,1$/;"	l
e6e	user/usertests.asm	/^     e6e:	e85a                	sd	s6,16(sp)$/;"	l
e70	user/sh.asm	/^     e70:	b7dd                	j	e56 <printint+0x18>$/;"	l
e70	user/usertests.asm	/^     e70:	e45e                	sd	s7,8(sp)$/;"	l
e72	user/sh.asm	/^     e72:	85be                	mv	a1,a5$/;"	l
e72	user/usertests.asm	/^     e72:	0880                	addi	s0,sp,80$/;"	l
e74	user/sh.asm	/^     e74:	8836                	mv	a6,a3$/;"	l
e74	user/usertests.asm	/^     e74:	8baa                	mv	s7,a0$/;"	l
e76	user/sh.asm	/^     e76:	0018069b          	addiw	a3,a6,1$/;"	l
e76	user/usertests.asm	/^     e76:	00004517          	auipc	a0,0x4$/;"	l
e7a	user/sh.asm	/^     e7a:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
e7a	user/usertests.asm	/^     e7a:	3c250513          	addi	a0,a0,962 # 5238 <malloc+0xa00>$/;"	l
e7e	user/sh.asm	/^     e7e:	1782                	slli	a5,a5,0x20$/;"	l
e7e	user/usertests.asm	/^     e7e:	00003097          	auipc	ra,0x3$/;"	l
e8	user/echo.asm	/^  e8:	00f6853b          	addw	a0,a3,a5$/;"	l
e8	user/grep.asm	/^  e8:	85a6                	mv	a1,s1$/;"	l
e8	user/init.asm	/^  e8:	0585                	addi	a1,a1,1$/;"	l
e8	user/kill.asm	/^  e8:	fff6071b          	addiw	a4,a2,-1$/;"	l
e8	user/kthtest.asm	/^  e8:	8082                	ret$/;"	l
e8	user/ln.asm	/^  e8:	1702                	slli	a4,a4,0x20$/;"	l
e8	user/ls.asm	/^  e8:	452080e7          	jalr	1106(ra) # 536 <open>$/;"	l
e8	user/mkdir.asm	/^  e8:	6422                	ld	s0,8(sp)$/;"	l
e8	user/rm.asm	/^  e8:	6422                	ld	s0,8(sp)$/;"	l
e8	user/sh.asm	/^      e8:	00000097          	auipc	ra,0x0$/;"	l
e8	user/wc.asm	/^  e8:	7fc50513          	addi	a0,a0,2044 # 8e0 <malloc+0xf0>$/;"	l
e8	user/zombie.asm	/^  e8:	4501                	li	a0,0$/;"	l
e80	user/sh.asm	/^     e80:	9381                	srli	a5,a5,0x20$/;"	l
e82	user/sh.asm	/^     e82:	97c6                	add	a5,a5,a7$/;"	l
e82	user/usertests.asm	/^     e82:	5ca080e7          	jalr	1482(ra) # 4448 <unlink>$/;"	l
e84	user/sh.asm	/^     e84:	0007c783          	lbu	a5,0(a5)$/;"	l
e86	user/usertests.asm	/^     e86:	1f300493          	li	s1,499$/;"	l
e88	user/sh.asm	/^     e88:	00f70023          	sb	a5,0(a4)$/;"	l
e8a	user/usertests.asm	/^     e8a:	00004a17          	auipc	s4,0x4$/;"	l
e8c	user/sh.asm	/^     e8c:	0705                	addi	a4,a4,1$/;"	l
e8e	user/sh.asm	/^     e8e:	02c5d7bb          	divuw	a5,a1,a2$/;"	l
e8e	user/usertests.asm	/^     e8e:	3aea0a13          	addi	s4,s4,942 # 5238 <malloc+0xa00>$/;"	l
e92	user/sh.asm	/^     e92:	fec5f0e3          	bgeu	a1,a2,e72 <printint+0x34>$/;"	l
e92	user/usertests.asm	/^     e92:	00008997          	auipc	s3,0x8$/;"	l
e96	user/sh.asm	/^     e96:	00030b63          	beqz	t1,eac <printint+0x6e>$/;"	l
e96	user/usertests.asm	/^     e96:	36698993          	addi	s3,s3,870 # 91f8 <buf>$/;"	l
e9a	user/sh.asm	/^     e9a:	fd040793          	addi	a5,s0,-48$/;"	l
e9a	user/usertests.asm	/^     e9a:	6b0d                	lui	s6,0x3$/;"	l
e9c	user/usertests.asm	/^     e9c:	1c9b0b13          	addi	s6,s6,457 # 31c9 <dirfile+0xd>$/;"	l
e9e	user/sh.asm	/^     e9e:	96be                	add	a3,a3,a5$/;"	l
ea	user/cat.asm	/^  ea:	f1a080e7          	jalr	-230(ra) # 0 <cat>$/;"	l
ea	user/forktest.asm	/^  ea:	00000517          	auipc	a0,0x0$/;"	l
ea	user/grep.asm	/^  ea:	854a                	mv	a0,s2$/;"	l
ea	user/init.asm	/^  ea:	0785                	addi	a5,a5,1$/;"	l
ea	user/kthtest.asm	/^  ea:	4501                	li	a0,0$/;"	l
ea	user/ln.asm	/^  ea:	9301                	srli	a4,a4,0x20$/;"	l
ea	user/mkdir.asm	/^  ea:	0141                	addi	sp,sp,16$/;"	l
ea	user/rm.asm	/^  ea:	0141                	addi	sp,sp,16$/;"	l
ea	user/stressfs.asm	/^  ea:	34fd                	addiw	s1,s1,-1$/;"	l
ea	user/usertests.asm	/^      ea:	85a6                	mv	a1,s1$/;"	l
ea	user/zombie.asm	/^  ea:	6422                	ld	s0,8(sp)$/;"	l
ea0	user/sh.asm	/^     ea0:	02d00793          	li	a5,45$/;"	l
ea0	user/usertests.asm	/^     ea0:	20200593          	li	a1,514$/;"	l
ea4	user/sh.asm	/^     ea4:	fef68823          	sb	a5,-16(a3)$/;"	l
ea4	user/usertests.asm	/^     ea4:	8552                	mv	a0,s4$/;"	l
ea6	user/usertests.asm	/^     ea6:	00003097          	auipc	ra,0x3$/;"	l
ea8	user/sh.asm	/^     ea8:	0028069b          	addiw	a3,a6,2$/;"	l
eaa	user/usertests.asm	/^     eaa:	592080e7          	jalr	1426(ra) # 4438 <open>$/;"	l
eac	user/sh.asm	/^     eac:	02d05963          	blez	a3,ede <printint+0xa0>$/;"	l
eae	user/usertests.asm	/^     eae:	892a                	mv	s2,a0$/;"	l
eargv	user/sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eb0	user/sh.asm	/^     eb0:	89aa                	mv	s3,a0$/;"	l
eb0	user/usertests.asm	/^     eb0:	04054d63          	bltz	a0,f0a <bigwrite+0xac>$/;"	l
eb2	user/sh.asm	/^     eb2:	fc040793          	addi	a5,s0,-64$/;"	l
eb4	user/usertests.asm	/^     eb4:	8626                	mv	a2,s1$/;"	l
eb6	user/sh.asm	/^     eb6:	00d784b3          	add	s1,a5,a3$/;"	l
eb6	user/usertests.asm	/^     eb6:	85ce                	mv	a1,s3$/;"	l
eb8	user/usertests.asm	/^     eb8:	00003097          	auipc	ra,0x3$/;"	l
eba	user/sh.asm	/^     eba:	fff78913          	addi	s2,a5,-1$/;"	l
ebc	user/usertests.asm	/^     ebc:	560080e7          	jalr	1376(ra) # 4418 <write>$/;"	l
ebe	user/sh.asm	/^     ebe:	9936                	add	s2,s2,a3$/;"	l
ec	user/echo.asm	/^  ec:	0785                	addi	a5,a5,1$/;"	l
ec	user/grep.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/init.asm	/^  ec:	fff5c703          	lbu	a4,-1(a1)$/;"	l
ec	user/kill.asm	/^  ec:	1702                	slli	a4,a4,0x20$/;"	l
ec	user/kthtest.asm	/^  ec:	bfe5                	j	e4 <strlen+0x20>$/;"	l
ec	user/ln.asm	/^  ec:	0705                	addi	a4,a4,1$/;"	l
ec	user/ls.asm	/^  ec:	06054f63          	bltz	a0,16a <ls+0xac>$/;"	l
ec	user/mkdir.asm	/^  ec:	8082                	ret$/;"	l
ec	user/rm.asm	/^  ec:	8082                	ret$/;"	l
ec	user/sh.asm	/^      ec:	f6e080e7          	jalr	-146(ra) # 56 <panic>$/;"	l
ec	user/stressfs.asm	/^  ec:	f4f5                	bnez	s1,d8 <main+0xd8>$/;"	l
ec	user/usertests.asm	/^      ec:	00005517          	auipc	a0,0x5$/;"	l
ec	user/wc.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/zombie.asm	/^  ec:	0141                	addi	sp,sp,16$/;"	l
ec0	user/sh.asm	/^     ec0:	36fd                	addiw	a3,a3,-1$/;"	l
ec0	user/usertests.asm	/^     ec0:	8aaa                	mv	s5,a0$/;"	l
ec2	user/sh.asm	/^     ec2:	1682                	slli	a3,a3,0x20$/;"	l
ec2	user/usertests.asm	/^     ec2:	06a49463          	bne	s1,a0,f2a <bigwrite+0xcc>$/;"	l
ec4	user/sh.asm	/^     ec4:	9281                	srli	a3,a3,0x20$/;"	l
ec6	user/sh.asm	/^     ec6:	40d90933          	sub	s2,s2,a3$/;"	l
ec6	user/usertests.asm	/^     ec6:	8626                	mv	a2,s1$/;"	l
ec8	user/usertests.asm	/^     ec8:	85ce                	mv	a1,s3$/;"	l
eca	user/sh.asm	/^     eca:	fff4c583          	lbu	a1,-1(s1)$/;"	l
eca	user/usertests.asm	/^     eca:	854a                	mv	a0,s2$/;"	l
ecc	user/usertests.asm	/^     ecc:	00003097          	auipc	ra,0x3$/;"	l
ece	user/sh.asm	/^     ece:	854e                	mv	a0,s3$/;"	l
ecmd	user/sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ed0	user/sh.asm	/^     ed0:	00000097          	auipc	ra,0x0$/;"	l
ed0	user/usertests.asm	/^     ed0:	54c080e7          	jalr	1356(ra) # 4418 <write>$/;"	l
ed4	user/sh.asm	/^     ed4:	f4c080e7          	jalr	-180(ra) # e1c <putc>$/;"	l
ed4	user/usertests.asm	/^     ed4:	04951963          	bne	a0,s1,f26 <bigwrite+0xc8>$/;"	l
ed8	user/sh.asm	/^     ed8:	14fd                	addi	s1,s1,-1$/;"	l
ed8	user/usertests.asm	/^     ed8:	854a                	mv	a0,s2$/;"	l
eda	user/sh.asm	/^     eda:	ff2498e3          	bne	s1,s2,eca <printint+0x8c>$/;"	l
eda	user/usertests.asm	/^     eda:	00003097          	auipc	ra,0x3$/;"	l
ede	user/sh.asm	/^     ede:	70e2                	ld	ra,56(sp)$/;"	l
ede	user/usertests.asm	/^     ede:	546080e7          	jalr	1350(ra) # 4420 <close>$/;"	l
ee	user/cat.asm	/^  ee:	4505                	li	a0,1$/;"	l
ee	user/echo.asm	/^  ee:	fff7c703          	lbu	a4,-1(a5)$/;"	l
ee	user/forktest.asm	/^  ee:	33e50513          	addi	a0,a0,830 # 428 <kthtest+0x50>$/;"	l
ee	user/kill.asm	/^  ee:	9301                	srli	a4,a4,0x20$/;"	l
ee	user/kthtest.asm	/^  ee:	1141                	addi	sp,sp,-16$/;"	l
ee	user/ln.asm	/^  ee:	972a                	add	a4,a4,a0$/;"	l
ee	user/mkdir.asm	/^  ee:	4501                	li	a0,0$/;"	l
ee	user/rm.asm	/^  ee:	4501                	li	a0,0$/;"	l
ee	user/stressfs.asm	/^  ee:	854a                	mv	a0,s2$/;"	l
ee	user/zombie.asm	/^  ee:	8082                	ret$/;"	l
ee0	user/sh.asm	/^     ee0:	7442                	ld	s0,48(sp)$/;"	l
ee2	user/sh.asm	/^     ee2:	74a2                	ld	s1,40(sp)$/;"	l
ee2	user/usertests.asm	/^     ee2:	8552                	mv	a0,s4$/;"	l
ee4	user/sh.asm	/^     ee4:	7902                	ld	s2,32(sp)$/;"	l
ee4	user/usertests.asm	/^     ee4:	00003097          	auipc	ra,0x3$/;"	l
ee6	user/sh.asm	/^     ee6:	69e2                	ld	s3,24(sp)$/;"	l
ee8	user/sh.asm	/^     ee8:	6121                	addi	sp,sp,64$/;"	l
ee8	user/usertests.asm	/^     ee8:	564080e7          	jalr	1380(ra) # 4448 <unlink>$/;"	l
eea	user/sh.asm	/^     eea:	8082                	ret$/;"	l
eec	user/sh.asm	/^     eec:	7119                	addi	sp,sp,-128$/;"	l
eec	user/usertests.asm	/^     eec:	1d74849b          	addiw	s1,s1,471$/;"	l
eee	user/sh.asm	/^     eee:	fc86                	sd	ra,120(sp)$/;"	l
ef0	user/sh.asm	/^     ef0:	f8a2                	sd	s0,112(sp)$/;"	l
ef0	user/usertests.asm	/^     ef0:	fb6498e3          	bne	s1,s6,ea0 <bigwrite+0x42>$/;"	l
ef2	user/sh.asm	/^     ef2:	f4a6                	sd	s1,104(sp)$/;"	l
ef4	user/sh.asm	/^     ef4:	f0ca                	sd	s2,96(sp)$/;"	l
ef4	user/usertests.asm	/^     ef4:	60a6                	ld	ra,72(sp)$/;"	l
ef6	user/sh.asm	/^     ef6:	ecce                	sd	s3,88(sp)$/;"	l
ef6	user/usertests.asm	/^     ef6:	6406                	ld	s0,64(sp)$/;"	l
ef8	user/sh.asm	/^     ef8:	e8d2                	sd	s4,80(sp)$/;"	l
ef8	user/usertests.asm	/^     ef8:	74e2                	ld	s1,56(sp)$/;"	l
efa	user/sh.asm	/^     efa:	e4d6                	sd	s5,72(sp)$/;"	l
efa	user/usertests.asm	/^     efa:	7942                	ld	s2,48(sp)$/;"	l
efc	user/sh.asm	/^     efc:	e0da                	sd	s6,64(sp)$/;"	l
efc	user/usertests.asm	/^     efc:	79a2                	ld	s3,40(sp)$/;"	l
efe	user/sh.asm	/^     efe:	fc5e                	sd	s7,56(sp)$/;"	l
efe	user/usertests.asm	/^     efe:	7a02                	ld	s4,32(sp)$/;"	l
efile	user/sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
ehsize	kernel/elf.h	/^  ushort ehsize;$/;"	m	struct:elfhdr
either_copyin	kernel/proc.c	/^either_copyin(void *dst, int user_src, uint64 src, uint64 len)$/;"	f
either_copyout	kernel/proc.c	/^either_copyout(int user_dst, uint64 dst, void *src, uint64 len)$/;"	f
elems	kernel/virtio.h	/^  struct VRingUsedElem elems[NUM];$/;"	m	struct:UsedArea	typeref:struct:UsedArea::VRingUsedElem
elf	kernel/elf.h	/^  uchar elf[12];$/;"	m	struct:elfhdr
elfhdr	kernel/elf.h	/^struct elfhdr {$/;"	s
empty	kernel/kernel.asm	/^  empty = 0;$/;"	d
end_op	kernel/log.c	/^end_op(void)$/;"	f
entry	kernel/elf.h	/^  uint64 entry;$/;"	m	struct:elfhdr
entry	user/usys.pl	/^sub entry {$/;"	s
epc	kernel/proc.h	/^  \/*  24 *\/ uint64 epc;           \/\/ saved user program counter$/;"	m	struct:trapframe
eprio	kernel/kernel.asm	/^  eprio = p->eprio;$/;"	d
eprio	kernel/proc.h	/^  int eprio;                   \/\/ effective priority$/;"	m	struct:proc
err	kernel/kernel.asm	/^ err:$/;"	l
es	user/sh.asm	/^  es = s + strlen(s);$/;"	d
exec	kernel/exec.c	/^exec(char *path, char **argv)$/;"	f
exec	user/cat.asm	/^exec:$/;"	l
exec	user/echo.asm	/^exec:$/;"	l
exec	user/forktest.asm	/^exec:$/;"	l
exec	user/grep.asm	/^exec:$/;"	l
exec	user/init.asm	/^exec:$/;"	l
exec	user/kill.asm	/^exec:$/;"	l
exec	user/kthtest.asm	/^exec:$/;"	l
exec	user/ln.asm	/^exec:$/;"	l
exec	user/ls.asm	/^exec:$/;"	l
exec	user/mkdir.asm	/^exec:$/;"	l
exec	user/rm.asm	/^exec:$/;"	l
exec	user/sh.asm	/^exec:$/;"	l
exec	user/stressfs.asm	/^exec:$/;"	l
exec	user/usertests.asm	/^exec:$/;"	l
exec	user/usys.S	/^exec:$/;"	l
exec	user/wc.asm	/^exec:$/;"	l
exec	user/zombie.asm	/^exec:$/;"	l
execcmd	user/sh.c	/^execcmd(void)$/;"	f
execcmd	user/sh.c	/^struct execcmd {$/;"	s	file:
exectest	user/usertests.c	/^exectest(char *s)$/;"	f
exit	kernel/proc.c	/^exit(int status)$/;"	f
exit	user/cat.asm	/^exit:$/;"	l
exit	user/echo.asm	/^exit:$/;"	l
exit	user/forktest.asm	/^exit:$/;"	l
exit	user/grep.asm	/^exit:$/;"	l
exit	user/init.asm	/^exit:$/;"	l
exit	user/initcode.S	/^exit:$/;"	l
exit	user/initcode.asm	/^exit:$/;"	l
exit	user/kill.asm	/^exit:$/;"	l
exit	user/kthtest.asm	/^exit:$/;"	l
exit	user/ln.asm	/^exit:$/;"	l
exit	user/ls.asm	/^exit:$/;"	l
exit	user/mkdir.asm	/^exit:$/;"	l
exit	user/rm.asm	/^exit:$/;"	l
exit	user/sh.asm	/^exit:$/;"	l
exit	user/stressfs.asm	/^exit:$/;"	l
exit	user/usertests.asm	/^exit:$/;"	l
exit	user/usys.S	/^exit:$/;"	l
exit	user/wc.asm	/^exit:$/;"	l
exit	user/zombie.asm	/^exit:$/;"	l
exitiputtest	user/usertests.c	/^exitiputtest(char *s)$/;"	f
exitwait	user/usertests.c	/^exitwait(char *s)$/;"	f
extern	kernel/kernel.asm	/^extern int devintr();$/;"	l
f0	user/cat.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	user/grep.asm	/^  f0:	f62080e7          	jalr	-158(ra) # 4e <matchhere>$/;"	l
f0	user/init.asm	/^  f0:	fee78fa3          	sb	a4,-1(a5)$/;"	l
f0	user/kill.asm	/^  f0:	0705                	addi	a4,a4,1$/;"	l
f0	user/kthtest.asm	/^  f0:	e422                	sd	s0,8(sp)$/;"	l
f0	user/ln.asm	/^  f0:	00b78023          	sb	a1,0(a5)$/;"	l
f0	user/ls.asm	/^  f0:	84aa                	mv	s1,a0$/;"	l
f0	user/mkdir.asm	/^  f0:	bfe5                	j	e8 <strlen+0x20>$/;"	l
f0	user/rm.asm	/^  f0:	bfe5                	j	e8 <strlen+0x20>$/;"	l
f0	user/sh.asm	/^      f0:	6508                	ld	a0,8(a0)$/;"	l
f0	user/stressfs.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	user/usertests.asm	/^      f0:	b8c50513          	addi	a0,a0,-1140 # 4c78 <malloc+0x440>$/;"	l
f0	user/wc.asm	/^  f0:	644080e7          	jalr	1604(ra) # 730 <printf>$/;"	l
f0	user/zombie.asm	/^  f0:	4501                	li	a0,0$/;"	l
f00	user/sh.asm	/^     f00:	f862                	sd	s8,48(sp)$/;"	l
f00	user/usertests.asm	/^     f00:	6ae2                	ld	s5,24(sp)$/;"	l
f02	user/sh.asm	/^     f02:	f466                	sd	s9,40(sp)$/;"	l
f02	user/usertests.asm	/^     f02:	6b42                	ld	s6,16(sp)$/;"	l
f04	user/sh.asm	/^     f04:	f06a                	sd	s10,32(sp)$/;"	l
f04	user/usertests.asm	/^     f04:	6ba2                	ld	s7,8(sp)$/;"	l
f06	user/sh.asm	/^     f06:	ec6e                	sd	s11,24(sp)$/;"	l
f06	user/usertests.asm	/^     f06:	6161                	addi	sp,sp,80$/;"	l
f08	user/sh.asm	/^     f08:	0100                	addi	s0,sp,128$/;"	l
f08	user/usertests.asm	/^     f08:	8082                	ret$/;"	l
f0a	user/sh.asm	/^     f0a:	0005c483          	lbu	s1,0(a1)$/;"	l
f0a	user/usertests.asm	/^     f0a:	85de                	mv	a1,s7$/;"	l
f0c	user/usertests.asm	/^     f0c:	00004517          	auipc	a0,0x4$/;"	l
f0e	user/sh.asm	/^     f0e:	18048d63          	beqz	s1,10a8 <vprintf+0x1bc>$/;"	l
f10	user/usertests.asm	/^     f10:	33c50513          	addi	a0,a0,828 # 5248 <malloc+0xa10>$/;"	l
f12	user/sh.asm	/^     f12:	8aaa                	mv	s5,a0$/;"	l
f14	user/sh.asm	/^     f14:	8b32                	mv	s6,a2$/;"	l
f14	user/usertests.asm	/^     f14:	00004097          	auipc	ra,0x4$/;"	l
f16	user/sh.asm	/^     f16:	00158913          	addi	s2,a1,1$/;"	l
f18	user/usertests.asm	/^     f18:	864080e7          	jalr	-1948(ra) # 4778 <printf>$/;"	l
f1a	user/sh.asm	/^     f1a:	4981                	li	s3,0$/;"	l
f1c	user/sh.asm	/^     f1c:	02500a13          	li	s4,37$/;"	l
f1c	user/usertests.asm	/^     f1c:	4505                	li	a0,1$/;"	l
f1e	user/usertests.asm	/^     f1e:	00003097          	auipc	ra,0x3$/;"	l
f2	user/echo.asm	/^  f2:	fb7d                	bnez	a4,e8 <strlen+0x14>$/;"	l
f2	user/forktest.asm	/^  f2:	00000097          	auipc	ra,0x0$/;"	l
f2	user/kill.asm	/^  f2:	972a                	add	a4,a4,a0$/;"	l
f2	user/kthtest.asm	/^  f2:	0800                	addi	s0,sp,16$/;"	l
f2	user/ls.asm	/^  f2:	d9840593          	addi	a1,s0,-616$/;"	l
f2	user/mkdir.asm	/^  f2:	1141                	addi	sp,sp,-16$/;"	l
f2	user/rm.asm	/^  f2:	1141                	addi	sp,sp,-16$/;"	l
f2	user/sh.asm	/^      f2:	c515                	beqz	a0,11e <runcmd+0x74>$/;"	l
f2	user/zombie.asm	/^  f2:	bfe5                	j	ea <strchr+0x20>$/;"	l
f20	user/sh.asm	/^     f20:	06400c13          	li	s8,100$/;"	l
f22	user/usertests.asm	/^     f22:	4da080e7          	jalr	1242(ra) # 43f8 <exit>$/;"	l
f24	user/sh.asm	/^     f24:	06c00c93          	li	s9,108$/;"	l
f26	user/usertests.asm	/^     f26:	84d6                	mv	s1,s5$/;"	l
f28	user/sh.asm	/^     f28:	07800d13          	li	s10,120$/;"	l
f28	user/usertests.asm	/^     f28:	8aaa                	mv	s5,a0$/;"	l
f2a	user/usertests.asm	/^     f2a:	86d6                	mv	a3,s5$/;"	l
f2c	user/sh.asm	/^     f2c:	07000d93          	li	s11,112$/;"	l
f2c	user/usertests.asm	/^     f2c:	8626                	mv	a2,s1$/;"	l
f2e	user/usertests.asm	/^     f2e:	85de                	mv	a1,s7$/;"	l
f30	user/sh.asm	/^     f30:	00000b97          	auipc	s7,0x0$/;"	l
f30	user/usertests.asm	/^     f30:	00004517          	auipc	a0,0x4$/;"	l
f34	user/sh.asm	/^     f34:	4b0b8b93          	addi	s7,s7,1200 # 13e0 <digits>$/;"	l
f34	user/usertests.asm	/^     f34:	33850513          	addi	a0,a0,824 # 5268 <malloc+0xa30>$/;"	l
f38	user/sh.asm	/^     f38:	a839                	j	f56 <vprintf+0x6a>$/;"	l
f38	user/usertests.asm	/^     f38:	00004097          	auipc	ra,0x4$/;"	l
f3a	user/sh.asm	/^     f3a:	85a6                	mv	a1,s1$/;"	l
f3c	user/sh.asm	/^     f3c:	8556                	mv	a0,s5$/;"	l
f3c	user/usertests.asm	/^     f3c:	840080e7          	jalr	-1984(ra) # 4778 <printf>$/;"	l
f3e	user/sh.asm	/^     f3e:	00000097          	auipc	ra,0x0$/;"	l
f4	user/cat.asm	/^  f4:	23e080e7          	jalr	574(ra) # 32e <exit>$/;"	l
f4	user/echo.asm	/^  f4:	6422                	ld	s0,8(sp)$/;"	l
f4	user/grep.asm	/^  f4:	ed01                	bnez	a0,10c <match+0x40>$/;"	l
f4	user/init.asm	/^  f4:	fb75                	bnez	a4,e8 <strcpy+0x8>$/;"	l
f4	user/kill.asm	/^  f4:	00b78023          	sb	a1,0(a5)$/;"	l
f4	user/kthtest.asm	/^  f4:	ce09                	beqz	a2,10e <memset+0x20>$/;"	l
f4	user/ln.asm	/^  f4:	0785                	addi	a5,a5,1$/;"	l
f4	user/mkdir.asm	/^  f4:	e422                	sd	s0,8(sp)$/;"	l
f4	user/rm.asm	/^  f4:	e422                	sd	s0,8(sp)$/;"	l
f4	user/sh.asm	/^      f4:	00848593          	addi	a1,s1,8$/;"	l
f4	user/stressfs.asm	/^  f4:	25e080e7          	jalr	606(ra) # 34e <close>$/;"	l
f4	user/usertests.asm	/^      f4:	00004097          	auipc	ra,0x4$/;"	l
f4	user/wc.asm	/^  f4:	4505                	li	a0,1$/;"	l
f4	user/zombie.asm	/^  f4:	711d                	addi	sp,sp,-96$/;"	l
f40	user/usertests.asm	/^     f40:	4505                	li	a0,1$/;"	l
f42	user/sh.asm	/^     f42:	ede080e7          	jalr	-290(ra) # e1c <putc>$/;"	l
f42	user/usertests.asm	/^     f42:	00003097          	auipc	ra,0x3$/;"	l
f46	user/sh.asm	/^     f46:	a019                	j	f4c <vprintf+0x60>$/;"	l
f46	user/usertests.asm	/^     f46:	4b6080e7          	jalr	1206(ra) # 43f8 <exit>$/;"	l
f48	user/sh.asm	/^     f48:	01498f63          	beq	s3,s4,f66 <vprintf+0x7a>$/;"	l
f4a	user/usertests.asm	/^     f4a:	7139                	addi	sp,sp,-64$/;"	l
f4c	user/sh.asm	/^     f4c:	0905                	addi	s2,s2,1$/;"	l
f4c	user/usertests.asm	/^     f4c:	fc06                	sd	ra,56(sp)$/;"	l
f4e	user/sh.asm	/^     f4e:	fff94483          	lbu	s1,-1(s2)$/;"	l
f4e	user/usertests.asm	/^     f4e:	f822                	sd	s0,48(sp)$/;"	l
f50	user/usertests.asm	/^     f50:	f426                	sd	s1,40(sp)$/;"	l
f52	user/sh.asm	/^     f52:	14048b63          	beqz	s1,10a8 <vprintf+0x1bc>$/;"	l
f52	user/usertests.asm	/^     f52:	f04a                	sd	s2,32(sp)$/;"	l
f54	user/usertests.asm	/^     f54:	ec4e                	sd	s3,24(sp)$/;"	l
f56	user/sh.asm	/^     f56:	0004879b          	sext.w	a5,s1$/;"	l
f56	user/usertests.asm	/^     f56:	e852                	sd	s4,16(sp)$/;"	l
f58	user/usertests.asm	/^     f58:	e456                	sd	s5,8(sp)$/;"	l
f5a	user/sh.asm	/^     f5a:	fe0997e3          	bnez	s3,f48 <vprintf+0x5c>$/;"	l
f5a	user/usertests.asm	/^     f5a:	e05a                	sd	s6,0(sp)$/;"	l
f5c	user/usertests.asm	/^     f5c:	0080                	addi	s0,sp,64$/;"	l
f5e	user/sh.asm	/^     f5e:	fd479ee3          	bne	a5,s4,f3a <vprintf+0x4e>$/;"	l
f5e	user/usertests.asm	/^     f5e:	8b2a                	mv	s6,a0$/;"	l
f6	user/echo.asm	/^  f6:	0141                	addi	sp,sp,16$/;"	l
f6	user/forktest.asm	/^  f6:	f0e080e7          	jalr	-242(ra) # 0 <print>$/;"	l
f6	user/grep.asm	/^  f6:	0485                	addi	s1,s1,1$/;"	l
f6	user/init.asm	/^  f6:	6422                	ld	s0,8(sp)$/;"	l
f6	user/kthtest.asm	/^  f6:	87aa                	mv	a5,a0$/;"	l
f6	user/ln.asm	/^  f6:	fee79de3          	bne	a5,a4,f0 <memset+0x16>$/;"	l
f6	user/ls.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	user/mkdir.asm	/^  f6:	0800                	addi	s0,sp,16$/;"	l
f6	user/rm.asm	/^  f6:	0800                	addi	s0,sp,16$/;"	l
f6	user/wc.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	user/zombie.asm	/^  f6:	ec86                	sd	ra,88(sp)$/;"	l
f60	user/usertests.asm	/^     f60:	20200593          	li	a1,514$/;"	l
f62	user/sh.asm	/^     f62:	89be                	mv	s3,a5$/;"	l
f64	user/sh.asm	/^     f64:	b7e5                	j	f4c <vprintf+0x60>$/;"	l
f64	user/usertests.asm	/^     f64:	00004517          	auipc	a0,0x4$/;"	l
f66	user/sh.asm	/^     f66:	05878063          	beq	a5,s8,fa6 <vprintf+0xba>$/;"	l
f68	user/usertests.asm	/^     f68:	31c50513          	addi	a0,a0,796 # 5280 <malloc+0xa48>$/;"	l
f6a	user/sh.asm	/^     f6a:	05978c63          	beq	a5,s9,fc2 <vprintf+0xd6>$/;"	l
f6c	user/usertests.asm	/^     f6c:	00003097          	auipc	ra,0x3$/;"	l
f6e	user/sh.asm	/^     f6e:	07a78863          	beq	a5,s10,fde <vprintf+0xf2>$/;"	l
f70	user/usertests.asm	/^     f70:	4cc080e7          	jalr	1228(ra) # 4438 <open>$/;"	l
f72	user/sh.asm	/^     f72:	09b78463          	beq	a5,s11,ffa <vprintf+0x10e>$/;"	l
f74	user/usertests.asm	/^     f74:	0a054d63          	bltz	a0,102e <writetest+0xe4>$/;"	l
f76	user/sh.asm	/^     f76:	07300713          	li	a4,115$/;"	l
f78	user/usertests.asm	/^     f78:	892a                	mv	s2,a0$/;"	l
f7a	user/sh.asm	/^     f7a:	0ce78563          	beq	a5,a4,1044 <vprintf+0x158>$/;"	l
f7a	user/usertests.asm	/^     f7a:	4481                	li	s1,0$/;"	l
f7c	user/usertests.asm	/^     f7c:	00004997          	auipc	s3,0x4$/;"	l
f7e	user/sh.asm	/^     f7e:	06300713          	li	a4,99$/;"	l
f8	user/cat.asm	/^  f8:	608c                	ld	a1,0(s1)$/;"	l
f8	user/echo.asm	/^  f8:	8082                	ret$/;"	l
f8	user/grep.asm	/^  f8:	fff4c783          	lbu	a5,-1(s1)$/;"	l
f8	user/init.asm	/^  f8:	0141                	addi	sp,sp,16$/;"	l
f8	user/kill.asm	/^  f8:	0785                	addi	a5,a5,1$/;"	l
f8	user/kthtest.asm	/^  f8:	fff6071b          	addiw	a4,a2,-1$/;"	l
f8	user/mkdir.asm	/^  f8:	ce09                	beqz	a2,112 <memset+0x20>$/;"	l
f8	user/rm.asm	/^  f8:	ce09                	beqz	a2,112 <memset+0x20>$/;"	l
f8	user/sh.asm	/^      f8:	00001097          	auipc	ra,0x1$/;"	l
f8	user/stressfs.asm	/^  f8:	4501                	li	a0,0$/;"	l
f8	user/usertests.asm	/^      f8:	684080e7          	jalr	1668(ra) # 4778 <printf>$/;"	l
f8	user/zombie.asm	/^  f8:	e8a2                	sd	s0,80(sp)$/;"	l
f80	user/usertests.asm	/^     f80:	32c98993          	addi	s3,s3,812 # 52a8 <malloc+0xa70>$/;"	l
f82	user/sh.asm	/^     f82:	0ee78c63          	beq	a5,a4,107a <vprintf+0x18e>$/;"	l
f84	user/usertests.asm	/^     f84:	00004a97          	auipc	s5,0x4$/;"	l
f86	user/sh.asm	/^     f86:	11478663          	beq	a5,s4,1092 <vprintf+0x1a6>$/;"	l
f88	user/usertests.asm	/^     f88:	35ca8a93          	addi	s5,s5,860 # 52e0 <malloc+0xaa8>$/;"	l
f8a	user/sh.asm	/^     f8a:	85d2                	mv	a1,s4$/;"	l
f8c	user/sh.asm	/^     f8c:	8556                	mv	a0,s5$/;"	l
f8c	user/usertests.asm	/^     f8c:	06400a13          	li	s4,100$/;"	l
f8e	user/sh.asm	/^     f8e:	00000097          	auipc	ra,0x0$/;"	l
f90	user/usertests.asm	/^     f90:	4629                	li	a2,10$/;"	l
f92	user/sh.asm	/^     f92:	e8e080e7          	jalr	-370(ra) # e1c <putc>$/;"	l
f92	user/usertests.asm	/^     f92:	85ce                	mv	a1,s3$/;"	l
f94	user/usertests.asm	/^     f94:	854a                	mv	a0,s2$/;"	l
f96	user/sh.asm	/^     f96:	85a6                	mv	a1,s1$/;"	l
f96	user/usertests.asm	/^     f96:	00003097          	auipc	ra,0x3$/;"	l
f98	user/sh.asm	/^     f98:	8556                	mv	a0,s5$/;"	l
f9a	user/sh.asm	/^     f9a:	00000097          	auipc	ra,0x0$/;"	l
f9a	user/usertests.asm	/^     f9a:	482080e7          	jalr	1154(ra) # 4418 <write>$/;"	l
f9e	user/sh.asm	/^     f9e:	e82080e7          	jalr	-382(ra) # e1c <putc>$/;"	l
f9e	user/usertests.asm	/^     f9e:	47a9                	li	a5,10$/;"	l
fa	user/cat.asm	/^  fa:	00000517          	auipc	a0,0x0$/;"	l
fa	user/echo.asm	/^  fa:	4501                	li	a0,0$/;"	l
fa	user/forktest.asm	/^  fa:	4505                	li	a0,1$/;"	l
fa	user/init.asm	/^  fa:	8082                	ret$/;"	l
fa	user/kill.asm	/^  fa:	fee79de3          	bne	a5,a4,f4 <memset+0x16>$/;"	l
fa	user/ln.asm	/^  fa:	6422                	ld	s0,8(sp)$/;"	l
fa	user/ls.asm	/^  fa:	458080e7          	jalr	1112(ra) # 54e <fstat>$/;"	l
fa	user/mkdir.asm	/^  fa:	87aa                	mv	a5,a0$/;"	l
fa	user/rm.asm	/^  fa:	87aa                	mv	a5,a0$/;"	l
fa	user/stressfs.asm	/^  fa:	00000097          	auipc	ra,0x0$/;"	l
fa	user/wc.asm	/^  fa:	2ba080e7          	jalr	698(ra) # 3b0 <exit>$/;"	l
fa	user/zombie.asm	/^  fa:	e4a6                	sd	s1,72(sp)$/;"	l
fa0	user/usertests.asm	/^     fa0:	0af51563          	bne	a0,a5,104a <writetest+0x100>$/;"	l
fa2	user/sh.asm	/^     fa2:	4981                	li	s3,0$/;"	l
fa4	user/sh.asm	/^     fa4:	b765                	j	f4c <vprintf+0x60>$/;"	l
fa4	user/usertests.asm	/^     fa4:	4629                	li	a2,10$/;"	l
fa6	user/sh.asm	/^     fa6:	008b0493          	addi	s1,s6,8$/;"	l
fa6	user/usertests.asm	/^     fa6:	85d6                	mv	a1,s5$/;"	l
fa8	user/usertests.asm	/^     fa8:	854a                	mv	a0,s2$/;"	l
faa	user/sh.asm	/^     faa:	4685                	li	a3,1$/;"	l
faa	user/usertests.asm	/^     faa:	00003097          	auipc	ra,0x3$/;"	l
fac	user/sh.asm	/^     fac:	4629                	li	a2,10$/;"	l
fae	user/sh.asm	/^     fae:	000b2583          	lw	a1,0(s6)$/;"	l
fae	user/usertests.asm	/^     fae:	46e080e7          	jalr	1134(ra) # 4418 <write>$/;"	l
fail	user/usertests.asm	/^        fail = 1;$/;"	d
fb2	user/sh.asm	/^     fb2:	8556                	mv	a0,s5$/;"	l
fb2	user/usertests.asm	/^     fb2:	47a9                	li	a5,10$/;"	l
fb4	user/sh.asm	/^     fb4:	00000097          	auipc	ra,0x0$/;"	l
fb4	user/usertests.asm	/^     fb4:	0af51963          	bne	a0,a5,1066 <writetest+0x11c>$/;"	l
fb8	user/sh.asm	/^     fb8:	e8a080e7          	jalr	-374(ra) # e3e <printint>$/;"	l
fb8	user/usertests.asm	/^     fb8:	2485                	addiw	s1,s1,1$/;"	l
fba	user/usertests.asm	/^     fba:	fd449be3          	bne	s1,s4,f90 <writetest+0x46>$/;"	l
fbc	user/sh.asm	/^     fbc:	8b26                	mv	s6,s1$/;"	l
fbe	user/sh.asm	/^     fbe:	4981                	li	s3,0$/;"	l
fbe	user/usertests.asm	/^     fbe:	854a                	mv	a0,s2$/;"	l
fc	user/echo.asm	/^  fc:	bfe5                	j	f4 <strlen+0x20>$/;"	l
fc	user/forktest.asm	/^  fc:	00000097          	auipc	ra,0x0$/;"	l
fc	user/grep.asm	/^  fc:	f7f5                	bnez	a5,e8 <match+0x1c>$/;"	l
fc	user/init.asm	/^  fc:	1141                	addi	sp,sp,-16$/;"	l
fc	user/kthtest.asm	/^  fc:	1702                	slli	a4,a4,0x20$/;"	l
fc	user/ln.asm	/^  fc:	0141                	addi	sp,sp,16$/;"	l
fc	user/mkdir.asm	/^  fc:	fff6071b          	addiw	a4,a2,-1$/;"	l
fc	user/rm.asm	/^  fc:	fff6071b          	addiw	a4,a2,-1$/;"	l
fc	user/sh.asm	/^      fc:	cb4080e7          	jalr	-844(ra) # dac <exec>$/;"	l
fc	user/usertests.asm	/^      fc:	4505                	li	a0,1$/;"	l
fc	user/zombie.asm	/^  fc:	e0ca                	sd	s2,64(sp)$/;"	l
fc0	user/sh.asm	/^     fc0:	b771                	j	f4c <vprintf+0x60>$/;"	l
fc0	user/usertests.asm	/^     fc0:	00003097          	auipc	ra,0x3$/;"	l
fc2	user/sh.asm	/^     fc2:	008b0493          	addi	s1,s6,8$/;"	l
fc4	user/usertests.asm	/^     fc4:	460080e7          	jalr	1120(ra) # 4420 <close>$/;"	l
fc6	user/sh.asm	/^     fc6:	4681                	li	a3,0$/;"	l
fc8	user/sh.asm	/^     fc8:	4629                	li	a2,10$/;"	l
fc8	user/usertests.asm	/^     fc8:	4581                	li	a1,0$/;"	l
fca	user/sh.asm	/^     fca:	000b2583          	lw	a1,0(s6)$/;"	l
fca	user/usertests.asm	/^     fca:	00004517          	auipc	a0,0x4$/;"	l
fce	user/sh.asm	/^     fce:	8556                	mv	a0,s5$/;"	l
fce	user/usertests.asm	/^     fce:	2b650513          	addi	a0,a0,694 # 5280 <malloc+0xa48>$/;"	l
fd	user/cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/kthtest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd	user/stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	user/usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^    fd = open("echo-ok", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo-ok", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("sbrk", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd0	kernel/kernel.asm	/^  fd0 = -1;$/;"	d
fd0	user/sh.asm	/^     fd0:	00000097          	auipc	ra,0x0$/;"	l
fd1	user/usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd2	user/usertests.asm	/^     fd2:	00003097          	auipc	ra,0x3$/;"	l
fd4	user/sh.asm	/^     fd4:	e6e080e7          	jalr	-402(ra) # e3e <printint>$/;"	l
fd6	user/usertests.asm	/^     fd6:	466080e7          	jalr	1126(ra) # 4438 <open>$/;"	l
fd8	user/sh.asm	/^     fd8:	8b26                	mv	s6,s1$/;"	l
fda	user/sh.asm	/^     fda:	4981                	li	s3,0$/;"	l
fda	user/usertests.asm	/^     fda:	84aa                	mv	s1,a0$/;"	l
fdalloc	kernel/sysfile.c	/^fdalloc(struct file *f)$/;"	f	file:
fdc	user/sh.asm	/^     fdc:	bf85                	j	f4c <vprintf+0x60>$/;"	l
fdc	user/usertests.asm	/^     fdc:	0a054363          	bltz	a0,1082 <writetest+0x138>$/;"	l
fde	user/sh.asm	/^     fde:	008b0493          	addi	s1,s6,8$/;"	l
fe	user/cat.asm	/^  fe:	78e50513          	addi	a0,a0,1934 # 888 <malloc+0x11a>$/;"	l
fe	user/echo.asm	/^  fe:	1141                	addi	sp,sp,-16$/;"	l
fe	user/grep.asm	/^  fe:	a801                	j	10e <match+0x42>$/;"	l
fe	user/init.asm	/^  fe:	e422                	sd	s0,8(sp)$/;"	l
fe	user/kill.asm	/^  fe:	6422                	ld	s0,8(sp)$/;"	l
fe	user/kthtest.asm	/^  fe:	9301                	srli	a4,a4,0x20$/;"	l
fe	user/ln.asm	/^  fe:	8082                	ret$/;"	l
fe	user/ls.asm	/^  fe:	08054163          	bltz	a0,180 <ls+0xc2>$/;"	l
fe	user/stressfs.asm	/^  fe:	234080e7          	jalr	564(ra) # 32e <wait>$/;"	l
fe	user/usertests.asm	/^      fe:	00004097          	auipc	ra,0x4$/;"	l
fe	user/wc.asm	/^  fe:	7179                	addi	sp,sp,-48$/;"	l
fe	user/zombie.asm	/^  fe:	fc4e                	sd	s3,56(sp)$/;"	l
fe0	user/usertests.asm	/^     fe0:	7d000613          	li	a2,2000$/;"	l
fe2	user/sh.asm	/^     fe2:	4681                	li	a3,0$/;"	l
fe4	user/sh.asm	/^     fe4:	4641                	li	a2,16$/;"	l
fe4	user/usertests.asm	/^     fe4:	00008597          	auipc	a1,0x8$/;"	l
fe6	user/sh.asm	/^     fe6:	000b2583          	lw	a1,0(s6)$/;"	l
fe8	user/usertests.asm	/^     fe8:	21458593          	addi	a1,a1,532 # 91f8 <buf>$/;"	l
fea	user/sh.asm	/^     fea:	8556                	mv	a0,s5$/;"	l
fec	user/sh.asm	/^     fec:	00000097          	auipc	ra,0x0$/;"	l
fec	user/usertests.asm	/^     fec:	00003097          	auipc	ra,0x3$/;"	l
fetchaddr	kernel/syscall.c	/^fetchaddr(uint64 addr, uint64 *ip)$/;"	f
fetchstr	kernel/syscall.c	/^fetchstr(uint64 addr, char *buf, int max)$/;"	f
ff	kernel/kernel.asm	/^  ff = *f;$/;"	d
ff0	user/sh.asm	/^     ff0:	e52080e7          	jalr	-430(ra) # e3e <printint>$/;"	l
ff0	user/usertests.asm	/^     ff0:	424080e7          	jalr	1060(ra) # 4410 <read>$/;"	l
ff4	user/sh.asm	/^     ff4:	8b26                	mv	s6,s1$/;"	l
ff4	user/usertests.asm	/^     ff4:	7d000793          	li	a5,2000$/;"	l
ff6	user/sh.asm	/^     ff6:	4981                	li	s3,0$/;"	l
ff8	user/sh.asm	/^     ff8:	bf91                	j	f4c <vprintf+0x60>$/;"	l
ff8	user/usertests.asm	/^     ff8:	0af51363          	bne	a0,a5,109e <writetest+0x154>$/;"	l
ffa	user/sh.asm	/^     ffa:	008b0793          	addi	a5,s6,8$/;"	l
ffc	user/usertests.asm	/^     ffc:	8526                	mv	a0,s1$/;"	l
ffe	user/sh.asm	/^     ffe:	f8f43423          	sd	a5,-120(s0)$/;"	l
ffe	user/usertests.asm	/^     ffe:	00003097          	auipc	ra,0x3$/;"	l
file	kernel/file.c	/^  struct file file[NFILE];$/;"	m	struct:__anon6	typeref:struct:__anon6::file	file:
file	kernel/file.h	/^struct file {$/;"	s
file	user/sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
filealloc	kernel/file.c	/^filealloc(void)$/;"	f
fileclose	kernel/file.c	/^fileclose(struct file *f)$/;"	f
filedup	kernel/file.c	/^filedup(struct file *f)$/;"	f
fileinit	kernel/file.c	/^fileinit(void)$/;"	f
fileread	kernel/file.c	/^fileread(struct file *f, uint64 addr, int n)$/;"	f
filestat	kernel/file.c	/^filestat(struct file *f, uint64 addr)$/;"	f
filesz	kernel/elf.h	/^  uint64 filesz;$/;"	m	struct:proghdr
filewrite	kernel/file.c	/^filewrite(struct file *f, uint64 addr, int n)$/;"	f
find_proc_with_pid	kernel/sleeplock.c	/^find_proc_with_pid(int pid) {$/;"	f
first	kernel/kernel.asm	/^    first = 0;$/;"	d
flags	kernel/elf.h	/^  uint flags;$/;"	m	struct:elfhdr
flags	kernel/elf.h	/^  uint32 flags;$/;"	m	struct:proghdr
flags	kernel/kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
flags	kernel/virtio.h	/^  uint16 flags;$/;"	m	struct:UsedArea
flags	kernel/virtio.h	/^  uint16 flags;$/;"	m	struct:VRingDesc
fmtname	user/ls.c	/^fmtname(char *path)$/;"	f
fn	kernel/kthtest.c	/^  void (*fn)(void *);$/;"	m	struct:test	file:
fn	kernel/proc.h	/^  void (*fn)(void *);          \/\/ fn of kthread$/;"	m	struct:proc
fname	user/usertests.asm	/^    fname = names[i];$/;"	d
fname	user/usertests.asm	/^    fname = names[pi];$/;"	d
foo	user/alarmtest.c	/^void __attribute__ ((noinline)) foo(int i, int *j) {$/;"	f
fork	kernel/proc.c	/^fork(void)$/;"	f
fork	user/cat.asm	/^fork:$/;"	l
fork	user/echo.asm	/^fork:$/;"	l
fork	user/forktest.asm	/^fork:$/;"	l
fork	user/grep.asm	/^fork:$/;"	l
fork	user/init.asm	/^fork:$/;"	l
fork	user/kill.asm	/^fork:$/;"	l
fork	user/kthtest.asm	/^fork:$/;"	l
fork	user/ln.asm	/^fork:$/;"	l
fork	user/ls.asm	/^fork:$/;"	l
fork	user/mkdir.asm	/^fork:$/;"	l
fork	user/rm.asm	/^fork:$/;"	l
fork	user/sh.asm	/^fork:$/;"	l
fork	user/stressfs.asm	/^fork:$/;"	l
fork	user/usertests.asm	/^fork:$/;"	l
fork	user/usys.S	/^fork:$/;"	l
fork	user/wc.asm	/^fork:$/;"	l
fork	user/zombie.asm	/^fork:$/;"	l
fork1	user/sh.c	/^fork1(void)$/;"	f
forkfork	user/usertests.c	/^forkfork(char *s)$/;"	f
forkforkfork	user/usertests.c	/^forkforkfork(char *s)$/;"	f
forkret	kernel/proc.c	/^forkret(void)$/;"	f
forktest	user/forktest.c	/^forktest(void)$/;"	f
forktest	user/usertests.c	/^forktest(char *s)$/;"	f
fourfiles	user/usertests.c	/^fourfiles(char *s)$/;"	f
fourteen	user/usertests.c	/^fourteen(char *s)$/;"	f
fprintf	user/printf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free	kernel/virtio_disk.c	/^  char free[NUM];  \/\/ is a descriptor free?$/;"	m	struct:disk	file:
free	user/umalloc.c	/^free(void *ap)$/;"	f
free_chain	kernel/virtio_disk.c	/^free_chain(int i)$/;"	f	file:
free_desc	kernel/virtio_disk.c	/^free_desc(int i)$/;"	f	file:
freeblock	mkfs/mkfs.c	/^uint freeblock;$/;"	v
freeinode	mkfs/mkfs.c	/^uint freeinode = 1;$/;"	v
freelist	kernel/kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon5	typeref:struct:__anon5::run	file:
freep	user/cat.asm	/^      freep = prevp;$/;"	d
freep	user/cat.asm	/^  freep = p;$/;"	d
freep	user/echo.asm	/^      freep = prevp;$/;"	d
freep	user/echo.asm	/^  freep = p;$/;"	d
freep	user/grep.asm	/^      freep = prevp;$/;"	d
freep	user/grep.asm	/^  freep = p;$/;"	d
freep	user/init.asm	/^      freep = prevp;$/;"	d
freep	user/init.asm	/^  freep = p;$/;"	d
freep	user/kill.asm	/^      freep = prevp;$/;"	d
freep	user/kill.asm	/^  freep = p;$/;"	d
freep	user/kthtest.asm	/^      freep = prevp;$/;"	d
freep	user/kthtest.asm	/^  freep = p;$/;"	d
freep	user/ln.asm	/^      freep = prevp;$/;"	d
freep	user/ln.asm	/^  freep = p;$/;"	d
freep	user/ls.asm	/^      freep = prevp;$/;"	d
freep	user/ls.asm	/^  freep = p;$/;"	d
freep	user/mkdir.asm	/^      freep = prevp;$/;"	d
freep	user/mkdir.asm	/^  freep = p;$/;"	d
freep	user/rm.asm	/^      freep = prevp;$/;"	d
freep	user/rm.asm	/^  freep = p;$/;"	d
freep	user/sh.asm	/^      freep = prevp;$/;"	d
freep	user/sh.asm	/^  freep = p;$/;"	d
freep	user/stressfs.asm	/^      freep = prevp;$/;"	d
freep	user/stressfs.asm	/^  freep = p;$/;"	d
freep	user/umalloc.c	/^static Header *freep;$/;"	v	file:
freep	user/usertests.asm	/^      freep = prevp;$/;"	d
freep	user/usertests.asm	/^  freep = p;$/;"	d
freep	user/wc.asm	/^      freep = prevp;$/;"	d
freep	user/wc.asm	/^  freep = p;$/;"	d
freep	user/zombie.asm	/^      freep = prevp;$/;"	d
freep	user/zombie.asm	/^  freep = p;$/;"	d
freeproc	kernel/proc.c	/^freeproc(struct proc *p)$/;"	f	file:
freerange	kernel/kalloc.c	/^freerange(void *pa_start, void *pa_end)$/;"	f
freewalk	kernel/vm.c	/^freewalk(pagetable_t pagetable)$/;"	f	file:
fsfd	mkfs/mkfs.c	/^int fsfd;$/;"	v
fsfull	user/usertests.c	/^fsfull()$/;"	f
fsinit	kernel/fs.c	/^fsinit(int dev) {$/;"	f
fstat	user/cat.asm	/^fstat:$/;"	l
fstat	user/echo.asm	/^fstat:$/;"	l
fstat	user/forktest.asm	/^fstat:$/;"	l
fstat	user/grep.asm	/^fstat:$/;"	l
fstat	user/init.asm	/^fstat:$/;"	l
fstat	user/kill.asm	/^fstat:$/;"	l
fstat	user/kthtest.asm	/^fstat:$/;"	l
fstat	user/ln.asm	/^fstat:$/;"	l
fstat	user/ls.asm	/^fstat:$/;"	l
fstat	user/mkdir.asm	/^fstat:$/;"	l
fstat	user/rm.asm	/^fstat:$/;"	l
fstat	user/sh.asm	/^fstat:$/;"	l
fstat	user/stressfs.asm	/^fstat:$/;"	l
fstat	user/usertests.asm	/^fstat:$/;"	l
fstat	user/usys.S	/^fstat:$/;"	l
fstat	user/wc.asm	/^fstat:$/;"	l
fstat	user/zombie.asm	/^fstat:$/;"	l
ftable	kernel/file.c	/^} ftable;$/;"	v	typeref:struct:__anon6
getcmd	user/sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
getpid	user/cat.asm	/^getpid:$/;"	l
getpid	user/echo.asm	/^getpid:$/;"	l
getpid	user/forktest.asm	/^getpid:$/;"	l
getpid	user/grep.asm	/^getpid:$/;"	l
getpid	user/init.asm	/^getpid:$/;"	l
getpid	user/kill.asm	/^getpid:$/;"	l
getpid	user/kthtest.asm	/^getpid:$/;"	l
getpid	user/ln.asm	/^getpid:$/;"	l
getpid	user/ls.asm	/^getpid:$/;"	l
getpid	user/mkdir.asm	/^getpid:$/;"	l
getpid	user/rm.asm	/^getpid:$/;"	l
getpid	user/sh.asm	/^getpid:$/;"	l
getpid	user/stressfs.asm	/^getpid:$/;"	l
getpid	user/usertests.asm	/^getpid:$/;"	l
getpid	user/usys.S	/^getpid:$/;"	l
getpid	user/wc.asm	/^getpid:$/;"	l
getpid	user/zombie.asm	/^getpid:$/;"	l
gets	user/ulib.c	/^gets(char *buf, int max)$/;"	f
gettoken	user/sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
gp	kernel/proc.h	/^  \/*  56 *\/ uint64 gp;$/;"	m	struct:trapframe
grep	user/grep.c	/^grep(char *pattern, int fd)$/;"	f
growproc	kernel/proc.c	/^growproc(int n)$/;"	f
havekids	kernel/kernel.asm	/^        havekids = 1;$/;"	d
havekids	kernel/kernel.asm	/^    havekids = 0;$/;"	d
head	kernel/bio.c	/^  struct buf head;$/;"	m	struct:__anon1	typeref:struct:__anon1::buf	file:
header	user/umalloc.c	/^union header {$/;"	u	file:
holding	kernel/spinlock.c	/^holding(struct spinlock *lk)$/;"	f
holdingsleep	kernel/sleeplock.c	/^holdingsleep(struct sleeplock *lk)$/;"	f
hour	kernel/date.h	/^  uint hour;$/;"	m	struct:rtcdate
i	kernel/kernel.asm	/^      i = disk.desc[i].next;$/;"	d
i	kernel/kernel.asm	/^  i = 0;$/;"	d
i	user/cat.asm	/^  i = 0;$/;"	d
i	user/echo.asm	/^  i = 0;$/;"	d
i	user/grep.asm	/^  i = 0;$/;"	d
i	user/init.asm	/^  i = 0;$/;"	d
i	user/kill.asm	/^  i = 0;$/;"	d
i	user/kthtest.asm	/^  i = 0;$/;"	d
i	user/ln.asm	/^  i = 0;$/;"	d
i	user/ls.asm	/^  i = 0;$/;"	d
i	user/mkdir.asm	/^  i = 0;$/;"	d
i	user/rm.asm	/^  i = 0;$/;"	d
i	user/sh.asm	/^  i = 0;$/;"	d
i	user/stressfs.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	user/usertests.asm	/^    i = read(fd, buf, BSIZE);$/;"	d
i	user/usertests.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^  i = read(fd, buf, N*SZ*2);$/;"	d
i	user/wc.asm	/^  i = 0;$/;"	d
i	user/zombie.asm	/^  i = 0;$/;"	d
ialloc	kernel/fs.c	/^ialloc(uint dev, short type)$/;"	f
ialloc	mkfs/mkfs.c	/^ialloc(ushort type)$/;"	f
iappend	mkfs/mkfs.c	/^iappend(uint inum, void *xp, int n)$/;"	f
icache	kernel/fs.c	/^} icache;$/;"	v	typeref:struct:__anon7
id	kernel/virtio.h	/^  uint16 id;$/;"	m	struct:UsedArea
id	kernel/virtio.h	/^  uint32 id;   \/\/ index of start of completed descriptor chain$/;"	m	struct:VRingUsedElem
idup	kernel/fs.c	/^idup(struct inode *ip)$/;"	f
iget	kernel/fs.c	/^iget(uint dev, uint inum)$/;"	f	file:
iinit	kernel/fs.c	/^iinit()$/;"	f
ilock	kernel/fs.c	/^ilock(struct inode *ip)$/;"	f
info	kernel/virtio_disk.c	/^  } info[NUM];$/;"	m	struct:disk	typeref:struct:disk::__anon8	file:
init	user/initcode.S	/^init:$/;"	l
initcode	kernel/proc.c	/^uchar initcode[] = {$/;"	v
initlock	kernel/spinlock.c	/^initlock(struct spinlock *lk, char *name)$/;"	f
initlog	kernel/log.c	/^initlog(int dev, struct superblock *sb)$/;"	f
initproc	kernel/kernel.asm	/^  initproc = p;$/;"	d
initproc	kernel/proc.c	/^struct proc *initproc;$/;"	v	typeref:struct:proc
initsleeplock	kernel/sleeplock.c	/^initsleeplock(struct sleeplock *lk, char *name)$/;"	f
ino	kernel/stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat
inode	kernel/file.h	/^struct inode {$/;"	s
inode	kernel/fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon7	typeref:struct:__anon7::inode	file:
inodestart	kernel/fs.h	/^  uint inodestart;   \/\/ Block number of first inode block$/;"	m	struct:superblock
insert_and_update	kernel/sleeplock.c	/^insert_and_update(struct proc *node, struct proc *parent, struct sleeplock *lk) {$/;"	f
install_trans	kernel/log.c	/^install_trans(void)$/;"	f	file:
int	kernel/kernel.asm	/^int$/;"	l
int	user/cat.asm	/^int$/;"	l
int	user/echo.asm	/^int$/;"	l
int	user/forktest.asm	/^int$/;"	l
int	user/grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	user/grep.asm	/^int$/;"	l
int	user/init.asm	/^int$/;"	l
int	user/kill.asm	/^int$/;"	l
int	user/kthtest.asm	/^int$/;"	l
int	user/ln.asm	/^int$/;"	l
int	user/ls.asm	/^int$/;"	l
int	user/mkdir.asm	/^int$/;"	l
int	user/rm.asm	/^int$/;"	l
int	user/sh.asm	/^int$/;"	l
int	user/stressfs.asm	/^int$/;"	l
int	user/usertests.asm	/^int$/;"	l
int	user/wc.asm	/^int$/;"	l
int	user/zombie.asm	/^int$/;"	l
intena	kernel/kernel.asm	/^  intena = mycpu()->intena;$/;"	d
intena	kernel/proc.h	/^  int intena;                 \/\/ Were interrupts enabled before push_off()?$/;"	m	struct:cpu
intr_get	kernel/riscv.h	/^intr_get()$/;"	f
intr_off	kernel/riscv.h	/^intr_off()$/;"	f
intr_on	kernel/riscv.h	/^intr_on()$/;"	f
inum	kernel/file.h	/^  uint inum;          \/\/ Inode number$/;"	m	struct:inode
inum	kernel/fs.h	/^  ushort inum;$/;"	m	struct:dirent
inum	kernel/kernel.asm	/^      inum = de.inum;$/;"	d
inword	user/wc.asm	/^        inword = 0;$/;"	d
inword	user/wc.asm	/^        inword = 1;$/;"	d
inword	user/wc.asm	/^  inword = 0;$/;"	d
ip	kernel/file.h	/^  struct inode *ip;  \/\/ FD_INODE and FD_DEVICE$/;"	m	struct:file	typeref:struct:file::inode
ip	kernel/kernel.asm	/^    ip = create(path, T_FILE, 0, 0);$/;"	d
ip	kernel/kernel.asm	/^    ip = idup(myproc()->cwd);$/;"	d
ip	kernel/kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO);$/;"	d
ip	kernel/kernel.asm	/^    ip = next;$/;"	d
ip	kernel/kernel.asm	/^  ip = 0;$/;"	d
iput	kernel/fs.c	/^iput(struct inode *ip)$/;"	f
iputtest	user/usertests.c	/^iputtest(char *s)$/;"	f
iref	user/usertests.c	/^iref(char *s)$/;"	f
isdirempty	kernel/sysfile.c	/^isdirempty(struct inode *dp)$/;"	f	file:
itrunc	kernel/fs.c	/^itrunc(struct inode *ip)$/;"	f	file:
iunlock	kernel/fs.c	/^iunlock(struct inode *ip)$/;"	f
iunlockput	kernel/fs.c	/^iunlockput(struct inode *ip)$/;"	f
iupdate	kernel/fs.c	/^iupdate(struct inode *ip)$/;"	f
junk	kernel/entry.S	/^junk:$/;"	l
kalloc	kernel/kalloc.c	/^kalloc(void)$/;"	f
kernel_hartid	kernel/proc.h	/^  \/*  32 *\/ uint64 kernel_hartid; \/\/ saved kernel tp$/;"	m	struct:trapframe
kernel_pagetable	kernel/kernel.asm	/^  kernel_pagetable = (pagetable_t) kalloc();$/;"	d
kernel_pagetable	kernel/vm.c	/^pagetable_t kernel_pagetable;$/;"	v
kernel_satp	kernel/proc.h	/^  \/*   0 *\/ uint64 kernel_satp;   \/\/ kernel page table$/;"	m	struct:trapframe
kernel_sp	kernel/proc.h	/^  \/*   8 *\/ uint64 kernel_sp;     \/\/ top of process's kernel stack$/;"	m	struct:trapframe
kernel_trap	kernel/proc.h	/^  \/*  16 *\/ uint64 kernel_trap;   \/\/ usertrap()$/;"	m	struct:trapframe
kerneltrap	kernel/trap.c	/^kerneltrap()$/;"	f
kernelvec	kernel/kernelvec.S	/^kernelvec:$/;"	l
kernmem	user/usertests.c	/^kernmem(char *s)$/;"	f
kfree	kernel/kalloc.c	/^kfree(void *pa)$/;"	f
kill	kernel/proc.c	/^kill(int pid)$/;"	f
kill	user/cat.asm	/^kill:$/;"	l
kill	user/echo.asm	/^kill:$/;"	l
kill	user/forktest.asm	/^kill:$/;"	l
kill	user/grep.asm	/^kill:$/;"	l
kill	user/init.asm	/^kill:$/;"	l
kill	user/kill.asm	/^kill:$/;"	l
kill	user/kthtest.asm	/^kill:$/;"	l
kill	user/ln.asm	/^kill:$/;"	l
kill	user/ls.asm	/^kill:$/;"	l
kill	user/mkdir.asm	/^kill:$/;"	l
kill	user/rm.asm	/^kill:$/;"	l
kill	user/sh.asm	/^kill:$/;"	l
kill	user/stressfs.asm	/^kill:$/;"	l
kill	user/usertests.asm	/^kill:$/;"	l
kill	user/usys.S	/^kill:$/;"	l
kill	user/wc.asm	/^kill:$/;"	l
kill	user/zombie.asm	/^kill:$/;"	l
killed	kernel/proc.h	/^  int killed;                  \/\/ If non-zero, have been killed$/;"	m	struct:proc
kinit	kernel/kalloc.c	/^kinit()$/;"	f
kmem	kernel/kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon5
kstack	kernel/proc.h	/^  uint64 kstack;               \/\/ Bottom of kernel stack for this process$/;"	m	struct:proc
kth_cret_ret	kernel/kthread.c	/^kth_cret_ret(void)$/;"	f
kthread_create	kernel/kthread.c	/^kthread_create(const char *name, int prio, void (*fn)(void *), void *arg)$/;"	f
kthread_exit	kernel/kthread.c	/^kthread_exit(void)$/;"	f
kthread_get_prio	kernel/kthread.c	/^kthread_get_prio(void)$/;"	f
kthread_set_prio	kernel/kthread.c	/^kthread_set_prio(int newprio)$/;"	f
kthread_yield	kernel/kthread.c	/^kthread_yield(void)$/;"	f
kthtest	kernel/kthtest.c	/^kthtest(int n)$/;"	f
kthtest	user/cat.asm	/^kthtest:$/;"	l
kthtest	user/echo.asm	/^kthtest:$/;"	l
kthtest	user/forktest.asm	/^kthtest:$/;"	l
kthtest	user/grep.asm	/^kthtest:$/;"	l
kthtest	user/init.asm	/^kthtest:$/;"	l
kthtest	user/kill.asm	/^kthtest:$/;"	l
kthtest	user/kthtest.asm	/^kthtest:$/;"	l
kthtest	user/ln.asm	/^kthtest:$/;"	l
kthtest	user/ls.asm	/^kthtest:$/;"	l
kthtest	user/mkdir.asm	/^kthtest:$/;"	l
kthtest	user/rm.asm	/^kthtest:$/;"	l
kthtest	user/sh.asm	/^kthtest:$/;"	l
kthtest	user/stressfs.asm	/^kthtest:$/;"	l
kthtest	user/usertests.asm	/^kthtest:$/;"	l
kthtest	user/usys.S	/^kthtest:$/;"	l
kthtest	user/wc.asm	/^kthtest:$/;"	l
kthtest	user/zombie.asm	/^kthtest:$/;"	l
kvminit	kernel/vm.c	/^kvminit()$/;"	f
kvminithart	kernel/vm.c	/^kvminithart()$/;"	f
kvmmap	kernel/vm.c	/^kvmmap(uint64 va, uint64 pa, uint64 sz, int perm)$/;"	f
kvmpa	kernel/vm.c	/^kvmpa(uint64 va)$/;"	f
l	user/wc.asm	/^  l = w = c = 0;$/;"	d
last	kernel/kernel.asm	/^      last = s+1;$/;"	d
last	kernel/kernel.asm	/^  last = PGROUNDDOWN(va + size - 1);$/;"	d
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
len	kernel/kernel.asm	/^  len = path - s;$/;"	d
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:VRingDesc
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:VRingUsedElem
lh	kernel/log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:log::logheader	file:
link	user/cat.asm	/^link:$/;"	l
link	user/echo.asm	/^link:$/;"	l
link	user/forktest.asm	/^link:$/;"	l
link	user/grep.asm	/^link:$/;"	l
link	user/init.asm	/^link:$/;"	l
link	user/kill.asm	/^link:$/;"	l
link	user/kthtest.asm	/^link:$/;"	l
link	user/ln.asm	/^link:$/;"	l
link	user/ls.asm	/^link:$/;"	l
link	user/mkdir.asm	/^link:$/;"	l
link	user/rm.asm	/^link:$/;"	l
link	user/sh.asm	/^link:$/;"	l
link	user/stressfs.asm	/^link:$/;"	l
link	user/usertests.asm	/^link:$/;"	l
link	user/usys.S	/^link:$/;"	l
link	user/wc.asm	/^link:$/;"	l
link	user/zombie.asm	/^link:$/;"	l
linktest	user/usertests.c	/^linktest(char *s)$/;"	f
linkunlink	user/usertests.c	/^linkunlink(char *s)$/;"	f
listcmd	user/sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f
listcmd	user/sh.c	/^struct listcmd {$/;"	s	file:
lk	kernel/sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:sleeplock::spinlock
loadseg	kernel/exec.c	/^loadseg(pagetable_t pagetable, uint64 va, struct inode *ip, uint offset, uint sz)$/;"	f	file:
lock	kernel/bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon1	typeref:struct:__anon1::spinlock	file:
lock	kernel/buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:buf::sleeplock
lock	kernel/console.c	/^  struct spinlock lock;$/;"	m	struct:__anon2	typeref:struct:__anon2::spinlock	file:
lock	kernel/file.c	/^  struct spinlock lock;$/;"	m	struct:__anon6	typeref:struct:__anon6::spinlock	file:
lock	kernel/file.h	/^  struct sleeplock lock; \/\/ protects everything below here$/;"	m	struct:inode	typeref:struct:inode::sleeplock
lock	kernel/fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon7	typeref:struct:__anon7::spinlock	file:
lock	kernel/kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon5	typeref:struct:__anon5::spinlock	file:
lock	kernel/log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:log::spinlock	file:
lock	kernel/pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:pipe::spinlock	file:
lock	kernel/printf.c	/^  struct spinlock lock;$/;"	m	struct:__anon4	typeref:struct:__anon4::spinlock	file:
lock	kernel/proc.h	/^  struct spinlock lock;$/;"	m	struct:proc	typeref:struct:proc::spinlock
locked	kernel/sleeplock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:sleeplock
locked	kernel/spinlock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
locking	kernel/kernel.asm	/^  locking = pr.locking;$/;"	d
locking	kernel/printf.c	/^  int locking;$/;"	m	struct:__anon4	file:
log	kernel/log.c	/^struct log log;$/;"	v	typeref:struct:log
log	kernel/log.c	/^struct log {$/;"	s	file:
log_write	kernel/log.c	/^log_write(struct buf *b)$/;"	f
logheader	kernel/log.c	/^struct logheader {$/;"	s	file:
logstart	kernel/fs.h	/^  uint logstart;     \/\/ Block number of first log block$/;"	m	struct:superblock
ls	user/ls.c	/^ls(char *path)$/;"	f
m	kernel/kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	kernel/kernel.asm	/^    m = min(n - tot, BSIZE - off%BSIZE);$/;"	d
m	kernel/kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
m	user/grep.asm	/^  m = 0;$/;"	d
m1	user/usertests.asm	/^      m1 = m2;$/;"	d
m1	user/usertests.asm	/^    m1 = 0;$/;"	d
m1	user/usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	user/usertests.asm	/^      m2 = *(char**)m1;$/;"	d
machine	kernel/elf.h	/^  ushort machine;$/;"	m	struct:elfhdr
magic	kernel/elf.h	/^  uint magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
magic	kernel/fs.h	/^  uint magic;        \/\/ Must be FSMAGIC$/;"	m	struct:superblock
main	kernel/main.c	/^main()$/;"	f
main	mkfs/mkfs.c	/^main(int argc, char *argv[])$/;"	f
main	user/alarmtest.c	/^main(int argc, char *argv[])$/;"	f
main	user/cat.c	/^main(int argc, char *argv[])$/;"	f
main	user/echo.c	/^main(int argc, char *argv[])$/;"	f
main	user/forktest.c	/^main(void)$/;"	f
main	user/grep.c	/^main(int argc, char *argv[])$/;"	f
main	user/init.c	/^main(void)$/;"	f
main	user/kill.c	/^main(int argc, char **argv)$/;"	f
main	user/kthtest.c	/^main(int argc, char **argv)$/;"	f
main	user/ln.c	/^main(int argc, char *argv[])$/;"	f
main	user/ls.c	/^main(int argc, char *argv[])$/;"	f
main	user/mkdir.c	/^main(int argc, char *argv[])$/;"	f
main	user/rm.c	/^main(int argc, char *argv[])$/;"	f
main	user/sh.c	/^main(void)$/;"	f
main	user/stressfs.c	/^main(int argc, char *argv[])$/;"	f
main	user/usertests.c	/^main(int argc, char *argv[])$/;"	f
main	user/wc.c	/^main(int argc, char *argv[])$/;"	f
main	user/zombie.c	/^main(void)$/;"	f
major	kernel/file.h	/^  short major;       \/\/ FD_DEVICE$/;"	m	struct:file
major	kernel/file.h	/^  short major;$/;"	m	struct:inode
major	kernel/file.h	12;"	d
major	kernel/fs.h	/^  short major;          \/\/ Major device number (T_DEVICE only)$/;"	m	struct:dinode
malloc	user/umalloc.c	/^malloc(uint nbytes)$/;"	f
mappages	kernel/vm.c	/^mappages(pagetable_t pagetable, uint64 va, uint64 size, uint64 pa, int perm)$/;"	f
mask	kernel/kernel.asm	/^  mask = *(uint64*)PLIC_PENDING;$/;"	d
match	user/grep.c	/^match(char *re, char *text)$/;"	f
matchhere	user/grep.c	/^int matchhere(char *re, char *text)$/;"	f
matchstar	user/grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f
mem	kernel/kernel.asm	/^    mem = kalloc();$/;"	d
mem	kernel/kernel.asm	/^  mem = kalloc();$/;"	d
mem	user/usertests.c	/^mem(char *s)$/;"	f
memcmp	kernel/string.c	/^memcmp(const void *v1, const void *v2, uint n)$/;"	f
memcpy	kernel/string.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memmove	kernel/string.c	/^memmove(void *dst, const void *src, uint n)$/;"	f
memmove	user/ulib.c	/^memmove(void *vdst, const void *vsrc, int n)$/;"	f
memset	kernel/string.c	/^memset(void *dst, int c, uint n)$/;"	f
memset	user/ulib.c	/^memset(void *dst, int c, uint n)$/;"	f
memsz	kernel/elf.h	/^  uint64 memsz;$/;"	m	struct:proghdr
min	kernel/fs.c	24;"	d	file:
min	mkfs/mkfs.c	261;"	d	file:
min_eprio	kernel/kernel.asm	/^  min_eprio = p->bprio;   $/;"	d
min_prio	kernel/kernel.asm	/^                min_prio = p->eprio;$/;"	d
min_prio	kernel/kernel.asm	/^    min_prio = 140;                     \/\/ 0~99:kernel, 100~139:user$/;"	d
minor	kernel/file.h	/^  short minor;$/;"	m	struct:inode
minor	kernel/file.h	13;"	d
minor	kernel/fs.h	/^  short minor;          \/\/ Minor device number (T_DEVICE only)$/;"	m	struct:dinode
minute	kernel/date.h	/^  uint minute;$/;"	m	struct:rtcdate
mkdev	kernel/file.h	14;"	d
mkdir	user/cat.asm	/^mkdir:$/;"	l
mkdir	user/echo.asm	/^mkdir:$/;"	l
mkdir	user/forktest.asm	/^mkdir:$/;"	l
mkdir	user/grep.asm	/^mkdir:$/;"	l
mkdir	user/init.asm	/^mkdir:$/;"	l
mkdir	user/kill.asm	/^mkdir:$/;"	l
mkdir	user/kthtest.asm	/^mkdir:$/;"	l
mkdir	user/ln.asm	/^mkdir:$/;"	l
mkdir	user/ls.asm	/^mkdir:$/;"	l
mkdir	user/mkdir.asm	/^mkdir:$/;"	l
mkdir	user/rm.asm	/^mkdir:$/;"	l
mkdir	user/sh.asm	/^mkdir:$/;"	l
mkdir	user/stressfs.asm	/^mkdir:$/;"	l
mkdir	user/usertests.asm	/^mkdir:$/;"	l
mkdir	user/usys.S	/^mkdir:$/;"	l
mkdir	user/wc.asm	/^mkdir:$/;"	l
mkdir	user/zombie.asm	/^mkdir:$/;"	l
mknod	user/cat.asm	/^mknod:$/;"	l
mknod	user/echo.asm	/^mknod:$/;"	l
mknod	user/forktest.asm	/^mknod:$/;"	l
mknod	user/grep.asm	/^mknod:$/;"	l
mknod	user/init.asm	/^mknod:$/;"	l
mknod	user/kill.asm	/^mknod:$/;"	l
mknod	user/kthtest.asm	/^mknod:$/;"	l
mknod	user/ln.asm	/^mknod:$/;"	l
mknod	user/ls.asm	/^mknod:$/;"	l
mknod	user/mkdir.asm	/^mknod:$/;"	l
mknod	user/rm.asm	/^mknod:$/;"	l
mknod	user/sh.asm	/^mknod:$/;"	l
mknod	user/stressfs.asm	/^mknod:$/;"	l
mknod	user/usertests.asm	/^mknod:$/;"	l
mknod	user/usys.S	/^mknod:$/;"	l
mknod	user/wc.asm	/^mknod:$/;"	l
mknod	user/zombie.asm	/^mknod:$/;"	l
mode	user/sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
month	kernel/date.h	/^  uint month;$/;"	m	struct:rtcdate
morecore	user/umalloc.c	/^morecore(uint nu)$/;"	f	file:
mscratch0	kernel/start.c	/^uint64 mscratch0[NCPU * 32];$/;"	v
mycpu	kernel/proc.c	/^mycpu(void) {$/;"	f
myproc	kernel/proc.c	/^myproc(void) {$/;"	f
n	kernel/kernel.asm	/^      n = PGSIZE;$/;"	d
n	kernel/kernel.asm	/^      n = len;$/;"	d
n	kernel/kernel.asm	/^      n = max;$/;"	d
n	kernel/kernel.asm	/^      n = sz - i;$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (dstva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (srcva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = ip->size - off;$/;"	d
n	kernel/log.c	/^  int n;$/;"	m	struct:logheader	file:
n	user/cat.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/echo.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/forktest.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/grep.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/init.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/kill.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/kthtest.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/ln.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/ls.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/mkdir.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/rm.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/sh.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/stressfs.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/usertests.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/usertests.asm	/^    n = argv[1];$/;"	d
n	user/usertests.asm	/^  n = 0;$/;"	d
n	user/wc.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n	user/zombie.asm	/^		n = n*10 + *s++ - '0';$/;"	d
n1	kernel/kernel.asm	/^        n1 = max;$/;"	d
name	kernel/fs.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent
name	kernel/kthtest.c	/^  const char *name;$/;"	m	struct:test	file:
name	kernel/proc.h	/^  char name[16];               \/\/ Process name (debugging)$/;"	m	struct:proc
name	kernel/sleeplock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:sleeplock
name	kernel/spinlock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	user/usertests.c	/^char name[3];$/;"	v
namecmp	kernel/fs.c	/^namecmp(const char *s, const char *t)$/;"	f
namei	kernel/fs.c	/^namei(char *path)$/;"	f
nameiparent	kernel/fs.c	/^nameiparent(char *path, char *name)$/;"	f
namex	kernel/fs.c	/^namex(char *path, int nameiparent, char *name)$/;"	f	file:
nbitmap	mkfs/mkfs.c	/^int nbitmap = FSSIZE\/(BSIZE*8) + 1;$/;"	v
nblocks	kernel/fs.h	/^  uint nblocks;      \/\/ Number of data blocks$/;"	m	struct:superblock
nblocks	mkfs/mkfs.c	/^int nblocks;  \/\/ Number of data blocks$/;"	v
nc	user/usertests.asm	/^  nc = np = 0;$/;"	d
neg	user/cat.asm	/^    neg = 1;$/;"	d
neg	user/cat.asm	/^  neg = 0;$/;"	d
neg	user/echo.asm	/^    neg = 1;$/;"	d
neg	user/echo.asm	/^  neg = 0;$/;"	d
neg	user/grep.asm	/^    neg = 1;$/;"	d
neg	user/grep.asm	/^  neg = 0;$/;"	d
neg	user/init.asm	/^    neg = 1;$/;"	d
neg	user/init.asm	/^  neg = 0;$/;"	d
neg	user/kill.asm	/^    neg = 1;$/;"	d
neg	user/kill.asm	/^  neg = 0;$/;"	d
neg	user/kthtest.asm	/^    neg = 1;$/;"	d
neg	user/kthtest.asm	/^  neg = 0;$/;"	d
neg	user/ln.asm	/^    neg = 1;$/;"	d
neg	user/ln.asm	/^  neg = 0;$/;"	d
neg	user/ls.asm	/^    neg = 1;$/;"	d
neg	user/ls.asm	/^  neg = 0;$/;"	d
neg	user/mkdir.asm	/^    neg = 1;$/;"	d
neg	user/mkdir.asm	/^  neg = 0;$/;"	d
neg	user/rm.asm	/^    neg = 1;$/;"	d
neg	user/rm.asm	/^  neg = 0;$/;"	d
neg	user/sh.asm	/^    neg = 1;$/;"	d
neg	user/sh.asm	/^  neg = 0;$/;"	d
neg	user/stressfs.asm	/^    neg = 1;$/;"	d
neg	user/stressfs.asm	/^  neg = 0;$/;"	d
neg	user/usertests.asm	/^    neg = 1;$/;"	d
neg	user/usertests.asm	/^  neg = 0;$/;"	d
neg	user/wc.asm	/^    neg = 1;$/;"	d
neg	user/wc.asm	/^  neg = 0;$/;"	d
neg	user/zombie.asm	/^    neg = 1;$/;"	d
neg	user/zombie.asm	/^  neg = 0;$/;"	d
new_eprio	kernel/kernel.asm	/^  new_eprio = refresh_eprio();$/;"	d
next	kernel/buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf::buf
next	kernel/kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run::run	file:
next	kernel/kernel.asm	/^              next = next->dona_next;$/;"	d
next	kernel/kernel.asm	/^              next = p->dona_list;$/;"	d
next	kernel/kernel.asm	/^      next = next->dona_next;$/;"	d
next	kernel/kernel.asm	/^      next = tmp;$/;"	d
next	kernel/kernel.asm	/^  next = p->dona_list;$/;"	d
next	kernel/virtio.h	/^  uint16 next;$/;"	m	struct:VRingDesc
nextpid	kernel/kernel.asm	/^  nextpid = nextpid + 1;$/;"	d
nextpid	kernel/proc.c	/^int nextpid = 1;$/;"	v
ninodeblocks	mkfs/mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v
ninodes	kernel/fs.h	/^  uint ninodes;      \/\/ Number of inodes.$/;"	m	struct:superblock
nlink	kernel/file.h	/^  short nlink;$/;"	m	struct:inode
nlink	kernel/fs.h	/^  short nlink;          \/\/ Number of links to inode in file system$/;"	m	struct:dinode
nlink	kernel/stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat
nlog	kernel/fs.h	/^  uint nlog;         \/\/ Number of log blocks$/;"	m	struct:superblock
nlog	mkfs/mkfs.c	/^int nlog = LOGSIZE;$/;"	v
nmeta	mkfs/mkfs.c	/^int nmeta;    \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v
noff	kernel/proc.h	/^  int noff;                   \/\/ Depth of push_off() nesting.$/;"	m	struct:cpu
nread	kernel/pipe.c	/^  uint nread;     \/\/ number of bytes read$/;"	m	struct:pipe	file:
nulterminate	user/sh.c	/^nulterminate(struct cmd *cmd)$/;"	f
num	kernel/kernel.asm	/^  num = p->tf->a7;$/;"	d
nunits	user/cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/kthtest.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nwrite	kernel/pipe.c	/^  uint nwrite;    \/\/ number of bytes written$/;"	m	struct:pipe	file:
off	kernel/elf.h	/^  uint64 off;$/;"	m	struct:proghdr
off	kernel/file.h	/^  uint off;          \/\/ FD_INODE$/;"	m	struct:file
ofile	kernel/proc.h	/^  struct file *ofile[NOFILE];  \/\/ Open files$/;"	m	struct:proc	typeref:struct:proc::file
oldbrk	user/usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
oldpagetable	kernel/kernel.asm	/^  oldpagetable = p->pagetable;$/;"	d
oldsz	kernel/kernel.asm	/^  oldsz = PGROUNDUP(oldsz);$/;"	d
open	user/cat.asm	/^open:$/;"	l
open	user/echo.asm	/^open:$/;"	l
open	user/forktest.asm	/^open:$/;"	l
open	user/grep.asm	/^open:$/;"	l
open	user/init.asm	/^open:$/;"	l
open	user/kill.asm	/^open:$/;"	l
open	user/kthtest.asm	/^open:$/;"	l
open	user/ln.asm	/^open:$/;"	l
open	user/ls.asm	/^open:$/;"	l
open	user/mkdir.asm	/^open:$/;"	l
open	user/rm.asm	/^open:$/;"	l
open	user/sh.asm	/^open:$/;"	l
open	user/stressfs.asm	/^open:$/;"	l
open	user/usertests.asm	/^open:$/;"	l
open	user/usys.S	/^open:$/;"	l
open	user/wc.asm	/^open:$/;"	l
open	user/zombie.asm	/^open:$/;"	l
openiputtest	user/usertests.c	/^openiputtest(char *s)$/;"	f
opentest	user/usertests.c	/^opentest(char *s)$/;"	f
original_eprio	kernel/kernel.asm	/^  original_eprio = p->eprio;$/;"	d
os	kernel/kernel.asm	/^  os = s;$/;"	d
os	user/cat.asm	/^  os = s;$/;"	d
os	user/echo.asm	/^  os = s;$/;"	d
os	user/forktest.asm	/^  os = s;$/;"	d
os	user/grep.asm	/^  os = s;$/;"	d
os	user/init.asm	/^  os = s;$/;"	d
os	user/kill.asm	/^  os = s;$/;"	d
os	user/kthtest.asm	/^  os = s;$/;"	d
os	user/ln.asm	/^  os = s;$/;"	d
os	user/ls.asm	/^  os = s;$/;"	d
os	user/mkdir.asm	/^  os = s;$/;"	d
os	user/rm.asm	/^  os = s;$/;"	d
os	user/sh.asm	/^  os = s;$/;"	d
os	user/stressfs.asm	/^  os = s;$/;"	d
os	user/usertests.asm	/^  os = s;$/;"	d
os	user/wc.asm	/^  os = s;$/;"	d
os	user/zombie.asm	/^  os = s;$/;"	d
out_file	run-test.py	/^    out_file = ".\/out\/kthtest%d.out" % i$/;"	v
outstanding	kernel/log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	file:
p	kernel/kernel.asm	/^            p = proc;$/;"	d
p	kernel/kernel.asm	/^    p = assigned_task[my_id];$/;"	d
p	kernel/kernel.asm	/^    p = chosen_proc;$/;"	d
p	kernel/kernel.asm	/^  p = (char*)PGROUNDUP((uint64)pa_start);$/;"	d
p	kernel/kernel.asm	/^  p = allocproc();$/;"	d
p	kernel/kernel.asm	/^  p = myproc();$/;"	d
p	user/cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/grep.asm	/^      p = q+1;$/;"	d
p	user/grep.asm	/^    p = buf;$/;"	d
p	user/grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/kthtest.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	user/ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/usertests.asm	/^  p = sbrk(amt);$/;"	d
p	user/usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
pa	kernel/kernel.asm	/^      pa = PTE2PA(*pte);$/;"	d
pa	kernel/kernel.asm	/^    pa = PTE2PA(*pte);$/;"	d
pa	kernel/kernel.asm	/^    pa = walkaddr(pagetable, va + i);$/;"	d
pa	kernel/kernel.asm	/^  pa = PTE2PA(*pte);$/;"	d
pa0	kernel/kernel.asm	/^    pa0 = walkaddr(pagetable, va0);$/;"	d
paddr	kernel/elf.h	/^  uint64 paddr;$/;"	m	struct:proghdr
pages	kernel/virtio_disk.c	/^  char pages[2*PGSIZE];$/;"	m	struct:disk	file:
pagetable	kernel/kernel.asm	/^      pagetable = (pagetable_t)PTE2PA(*pte);$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = (pagetable_t) kalloc();$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = uvmcreate();$/;"	d
pagetable	kernel/proc.h	/^  pagetable_t pagetable;       \/\/ Page table$/;"	m	struct:proc
pagetable_t	kernel/riscv.h	/^typedef uint64 *pagetable_t; \/\/ 512 PTEs$/;"	t
panic	kernel/printf.c	/^panic(char *s)$/;"	f
panic	user/sh.c	/^panic(char *s)$/;"	f
panicked	kernel/kernel.asm	/^  panicked = 1; \/\/ freeze other CPUs$/;"	d
panicked	kernel/printf.c	/^volatile int panicked = 0;$/;"	v
parent	kernel/kernel.asm	/^      parent = find_proc_with_pid(lk->pid);$/;"	d
parent	kernel/kernel.asm	/^      parent = find_proc_with_pid(parent_pid);$/;"	d
parent	kernel/proc.h	/^  struct proc *parent;         \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc::proc
parent_lk	kernel/kernel.asm	/^      parent_lk = parent->waiting_for;$/;"	d
parent_pid	kernel/kernel.asm	/^      parent_pid = parent_lk->pid;$/;"	d
parseblock	user/sh.c	/^parseblock(char **ps, char *es)$/;"	f
parsecmd	user/sh.c	/^parsecmd(char *s)$/;"	f
parseexec	user/sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	user/sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	user/sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	user/sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
pattern	user/grep.asm	/^  pattern = argv[1];$/;"	d
pde_t	kernel/types.h	/^typedef uint64 pde_t;$/;"	t
peek	user/sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
periodic	user/alarmtest.c	/^periodic()$/;"	f
pgbug	user/usertests.c	/^pgbug(char *s)$/;"	f
phentsize	kernel/elf.h	/^  ushort phentsize;$/;"	m	struct:elfhdr
phnum	kernel/elf.h	/^  ushort phnum;$/;"	m	struct:elfhdr
phoff	kernel/elf.h	/^  uint64 phoff;$/;"	m	struct:elfhdr
pi	kernel/kernel.asm	/^  pi = 0;$/;"	d
pid	kernel/kernel.asm	/^          pid = np->pid;$/;"	d
pid	kernel/kernel.asm	/^  pid = nextpid;$/;"	d
pid	kernel/kernel.asm	/^  pid = np->pid;$/;"	d
pid	kernel/proc.h	/^  int pid;                     \/\/ Process ID$/;"	m	struct:proc
pid	kernel/sleeplock.h	/^  int pid;           \/\/ Process holding lock$/;"	m	struct:sleeplock
pid	user/forktest.asm	/^    pid = fork();$/;"	d
pid	user/init.asm	/^    pid = fork();$/;"	d
pid	user/sh.asm	/^  pid = fork();$/;"	d
pid	user/usertests.asm	/^    pid = fork();$/;"	d
pid	user/usertests.asm	/^  pid = fork();$/;"	d
pid1	user/usertests.asm	/^  pid1 = fork();$/;"	d
pid2	user/usertests.asm	/^  pid2 = fork();$/;"	d
pid3	user/usertests.asm	/^  pid3 = fork();$/;"	d
pid_lock	kernel/proc.c	/^struct spinlock pid_lock;$/;"	v	typeref:struct:spinlock
pipe	kernel/file.h	/^  struct pipe *pipe; \/\/ FD_PIPE$/;"	m	struct:file	typeref:struct:file::pipe
pipe	kernel/pipe.c	/^struct pipe {$/;"	s	file:
pipe	user/cat.asm	/^pipe:$/;"	l
pipe	user/echo.asm	/^pipe:$/;"	l
pipe	user/forktest.asm	/^pipe:$/;"	l
pipe	user/grep.asm	/^pipe:$/;"	l
pipe	user/init.asm	/^pipe:$/;"	l
pipe	user/kill.asm	/^pipe:$/;"	l
pipe	user/kthtest.asm	/^pipe:$/;"	l
pipe	user/ln.asm	/^pipe:$/;"	l
pipe	user/ls.asm	/^pipe:$/;"	l
pipe	user/mkdir.asm	/^pipe:$/;"	l
pipe	user/rm.asm	/^pipe:$/;"	l
pipe	user/sh.asm	/^pipe:$/;"	l
pipe	user/stressfs.asm	/^pipe:$/;"	l
pipe	user/usertests.asm	/^pipe:$/;"	l
pipe	user/usys.S	/^pipe:$/;"	l
pipe	user/wc.asm	/^pipe:$/;"	l
pipe	user/zombie.asm	/^pipe:$/;"	l
pipe1	user/usertests.c	/^pipe1(char *s)$/;"	f
pipealloc	kernel/pipe.c	/^pipealloc(struct file **f0, struct file **f1)$/;"	f
pipeclose	kernel/pipe.c	/^pipeclose(struct pipe *pi, int writable)$/;"	f
pipecmd	user/sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	user/sh.c	/^struct pipecmd {$/;"	s	file:
piperead	kernel/pipe.c	/^piperead(struct pipe *pi, uint64 addr, int n)$/;"	f
pipewrite	kernel/pipe.c	/^pipewrite(struct pipe *pi, uint64 addr, int n)$/;"	f
plic_claim	kernel/plic.c	/^plic_claim(void)$/;"	f
plic_complete	kernel/plic.c	/^plic_complete(int irq)$/;"	f
plic_pending	kernel/plic.c	/^plic_pending(void)$/;"	f
plicinit	kernel/plic.c	/^plicinit(void)$/;"	f
plicinithart	kernel/plic.c	/^plicinithart(void)$/;"	f
pop_off	kernel/spinlock.c	/^pop_off(void)$/;"	f
pr	kernel/printf.c	/^} pr;$/;"	v	typeref:struct:__anon4	file:
preempt	user/usertests.c	/^preempt(char *s)$/;"	f
prev	kernel/buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf::buf
print	user/forktest.c	/^print(const char *s)$/;"	f
printf	kernel/printf.c	/^printf(char *fmt, ...)$/;"	f
printf	user/printf.c	/^printf(const char *fmt, ...)$/;"	f
printfinit	kernel/printf.c	/^printfinit(void)$/;"	f
printint	kernel/printf.c	/^printint(int xx, int base, int sign)$/;"	f	file:
printint	user/printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	file:
printptr	kernel/printf.c	/^printptr(uint64 x)$/;"	f	file:
printptr	user/printf.c	/^printptr(int fd, uint64 x) {$/;"	f	file:
proc	kernel/proc.c	/^struct proc proc[NPROC];$/;"	v	typeref:struct:proc
proc	kernel/proc.h	/^  struct proc *proc;          \/\/ The process running on this cpu, or null.$/;"	m	struct:cpu	typeref:struct:cpu::proc
proc	kernel/proc.h	/^struct proc {$/;"	s
proc_freepagetable	kernel/proc.c	/^proc_freepagetable(pagetable_t pagetable, uint64 sz)$/;"	f
proc_pagetable	kernel/proc.c	/^proc_pagetable(struct proc *p)$/;"	f
procdump	kernel/proc.c	/^procdump(void)$/;"	f
procinit	kernel/proc.c	/^procinit(void)$/;"	f
procstate	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
proghdr	kernel/elf.h	/^struct proghdr {$/;"	s
pte	kernel/kernel.asm	/^  pte = walk(kernel_pagetable, va, 0);$/;"	d
pte	kernel/kernel.asm	/^  pte = walk(pagetable, va, 0);$/;"	d
pte_t	kernel/riscv.h	/^typedef uint64 pte_t;$/;"	t
ptr	user/umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon9	typeref:union:header::__anon9::header	file:
push_off	kernel/spinlock.c	/^push_off(void)$/;"	f
putc	user/printf.c	/^putc(int fd, char c)$/;"	f	file:
qnext	kernel/buf.h	/^  struct buf *qnext; \/\/ disk queue$/;"	m	struct:buf	typeref:struct:buf::buf
r	kernel/console.c	/^  uint r;  \/\/ Read index$/;"	m	struct:__anon2	file:
r	kernel/kernel.asm	/^    r = devsw[f->major].read(1, addr, n);$/;"	d
r	kernel/kernel.asm	/^    r = piperead(f->pipe, addr, n);$/;"	d
r	kernel/kernel.asm	/^  r = (lk->locked && lk->cpu == mycpu());$/;"	d
r	kernel/kernel.asm	/^  r = (struct run*)pa;$/;"	d
r	kernel/kernel.asm	/^  r = kmem.freelist;$/;"	d
r	kernel/kernel.asm	/^  r = lk->locked && (lk->pid == myproc()->pid);$/;"	d
r	user/cat.asm	/^  r = fstat(fd, st);$/;"	d
r	user/echo.asm	/^  r = fstat(fd, st);$/;"	d
r	user/forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	user/grep.asm	/^  r = fstat(fd, st);$/;"	d
r	user/init.asm	/^  r = fstat(fd, st);$/;"	d
r	user/kill.asm	/^  r = fstat(fd, st);$/;"	d
r	user/kthtest.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ln.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ls.asm	/^  r = fstat(fd, st);$/;"	d
r	user/mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	user/rm.asm	/^  r = fstat(fd, st);$/;"	d
r	user/sh.asm	/^  r = fstat(fd, st);$/;"	d
r	user/stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	user/usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	user/wc.asm	/^  r = fstat(fd, st);$/;"	d
r	user/zombie.asm	/^  r = fstat(fd, st);$/;"	d
r_mcounteren	kernel/riscv.h	/^r_mcounteren()$/;"	f
r_medeleg	kernel/riscv.h	/^r_medeleg()$/;"	f
r_mhartid	kernel/riscv.h	/^r_mhartid()$/;"	f
r_mideleg	kernel/riscv.h	/^r_mideleg()$/;"	f
r_mie	kernel/riscv.h	/^r_mie()$/;"	f
r_mstatus	kernel/riscv.h	/^r_mstatus()$/;"	f
r_ra	kernel/riscv.h	/^r_ra()$/;"	f
r_satp	kernel/riscv.h	/^r_satp()$/;"	f
r_scause	kernel/riscv.h	/^r_scause()$/;"	f
r_sepc	kernel/riscv.h	/^r_sepc()$/;"	f
r_sie	kernel/riscv.h	/^r_sie()$/;"	f
r_sip	kernel/riscv.h	/^r_sip()$/;"	f
r_sp	kernel/riscv.h	/^r_sp()$/;"	f
r_sstatus	kernel/riscv.h	/^r_sstatus()$/;"	f
r_stval	kernel/riscv.h	/^r_stval()$/;"	f
r_stvec	kernel/riscv.h	/^r_stvec()$/;"	f
r_time	kernel/riscv.h	/^r_time()$/;"	f
r_tp	kernel/riscv.h	/^r_tp()$/;"	f
ra	kernel/proc.h	/^  \/*  40 *\/ uint64 ra;$/;"	m	struct:trapframe
ra	kernel/proc.h	/^  uint64 ra;$/;"	m	struct:context
race_start	kernel/kernel.asm	/^  race_start = 0;$/;"	d
race_start	kernel/kernel.asm	/^  race_start = 1;$/;"	d
race_start	kernel/kthtest.c	/^int race_start = 0;$/;"	v
ramdiskinit	kernel/ramdisk.c	/^ramdiskinit(void)$/;"	f
ramdiskrw	kernel/ramdisk.c	/^ramdiskrw(struct buf *b)$/;"	f
rand	user/usertests.c	/^rand()$/;"	f
randstate	user/usertests.asm	/^  randstate = randstate * 1664525 + 1013904223;$/;"	d
randstate	user/usertests.c	/^unsigned long randstate = 1;$/;"	v
rc	kernel/kernel.asm	/^  rc = kthread_create("kthmain", KERN_DEF_PRIO, testcases[n].fn, (void *) 100 + n);$/;"	d
rc	run-test.py	/^    rc = os.system("cmp -s " + and_file + " " + out_file)$/;"	v
rc	user/kthtest.asm	/^  rc = kthtest(atoi(argv[1]));$/;"	d
rcmd	user/sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
read	kernel/file.h	/^  int (*read)(int, uint64, int);$/;"	m	struct:devsw
read	user/cat.asm	/^read:$/;"	l
read	user/echo.asm	/^read:$/;"	l
read	user/forktest.asm	/^read:$/;"	l
read	user/grep.asm	/^read:$/;"	l
read	user/init.asm	/^read:$/;"	l
read	user/kill.asm	/^read:$/;"	l
read	user/kthtest.asm	/^read:$/;"	l
read	user/ln.asm	/^read:$/;"	l
read	user/ls.asm	/^read:$/;"	l
read	user/mkdir.asm	/^read:$/;"	l
read	user/rm.asm	/^read:$/;"	l
read	user/sh.asm	/^read:$/;"	l
read	user/stressfs.asm	/^read:$/;"	l
read	user/usertests.asm	/^read:$/;"	l
read	user/usys.S	/^read:$/;"	l
read	user/wc.asm	/^read:$/;"	l
read	user/zombie.asm	/^read:$/;"	l
read_head	kernel/log.c	/^read_head(void)$/;"	f	file:
readable	kernel/file.h	/^  char readable;$/;"	m	struct:file
readi	kernel/fs.c	/^readi(struct inode *ip, int user_dst, uint64 dst, uint off, uint n)$/;"	f
readopen	kernel/pipe.c	/^  int readopen;   \/\/ read fd is still open$/;"	m	struct:pipe	file:
readsb	kernel/fs.c	/^readsb(int dev, struct superblock *sb)$/;"	f	file:
recover_from_log	kernel/log.c	/^recover_from_log(void)$/;"	f	file:
redircmd	user/sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f
redircmd	user/sh.c	/^struct redircmd {$/;"	s	file:
ref	kernel/file.h	/^  int ref;            \/\/ Reference count$/;"	m	struct:inode
ref	kernel/file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file
refcnt	kernel/buf.h	/^  uint refcnt;$/;"	m	struct:buf
refresh_eprio	kernel/sleeplock.c	/^refresh_eprio(void)$/;"	f
release	kernel/spinlock.c	/^release(struct spinlock *lk)$/;"	f
releasesleep	kernel/sleeplock.c	/^releasesleep(struct sleeplock *lk)$/;"	f
remove_lk_children	kernel/sleeplock.c	/^remove_lk_children(struct sleeplock *lk) {$/;"	f
reparent	kernel/proc.c	/^reparent(struct proc *p)$/;"	f
reparent	user/usertests.c	/^reparent(char *s)$/;"	f
reparent2	user/usertests.c	/^reparent2(char *s)$/;"	f
ret	kernel/kernel.asm	/^    ret = (i == n ? n : -1);$/;"	d
ret	kernel/kernel.asm	/^    ret = devsw[f->major].write(1, addr, n);$/;"	d
ret	kernel/kernel.asm	/^    ret = pipewrite(f->pipe, addr, n);$/;"	d
ret	user/sh.asm	/^      ret = '+';$/;"	d
ret	user/sh.asm	/^    ret = 'a';$/;"	d
ret	user/sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	user/sh.asm	/^  ret = *s;$/;"	d
ret	user/sh.asm	/^  ret = execcmd();$/;"	d
ret	user/sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rinode	mkfs/mkfs.c	/^rinode(uint inum, struct dinode *ip)$/;"	f
rmdot	user/usertests.c	/^rmdot(char *s)$/;"	f
rsect	mkfs/mkfs.c	/^rsect(uint sec, void *buf)$/;"	f
rtcdate	kernel/date.h	/^struct rtcdate {$/;"	s
run	kernel/kalloc.c	/^struct run {$/;"	s	file:
run	user/usertests.c	/^run(void f(char *), char *s) {$/;"	f
runcmd	user/sh.c	/^runcmd(struct cmd *cmd)$/;"	f
s	kernel/kernel.asm	/^        s = "(null)";$/;"	d
s	kernel/kernel.asm	/^  s = src;$/;"	d
s	user/cat.asm	/^          s = "(null)";$/;"	d
s	user/cat.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/echo.asm	/^          s = "(null)";$/;"	d
s	user/echo.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/grep.asm	/^          s = "(null)";$/;"	d
s	user/grep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/init.asm	/^          s = "(null)";$/;"	d
s	user/init.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/kill.asm	/^          s = "(null)";$/;"	d
s	user/kill.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/kthtest.asm	/^          s = "(null)";$/;"	d
s	user/kthtest.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/ln.asm	/^          s = "(null)";$/;"	d
s	user/ln.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/ls.asm	/^          s = "(null)";$/;"	d
s	user/ls.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/mkdir.asm	/^          s = "(null)";$/;"	d
s	user/mkdir.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/rm.asm	/^          s = "(null)";$/;"	d
s	user/rm.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/sh.asm	/^          s = "(null)";$/;"	d
s	user/sh.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/sh.asm	/^  s = *ps;$/;"	d
s	user/stressfs.asm	/^          s = "(null)";$/;"	d
s	user/stressfs.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon9	file:
s	user/usertests.asm	/^          s = "(null)";$/;"	d
s	user/usertests.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/wc.asm	/^          s = "(null)";$/;"	d
s	user/wc.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/zombie.asm	/^          s = "(null)";$/;"	d
s	user/zombie.asm	/^        s = va_arg(ap, char*);$/;"	d
s0	kernel/proc.h	/^  \/*  96 *\/ uint64 s0;$/;"	m	struct:trapframe
s0	kernel/proc.h	/^  uint64 s0;$/;"	m	struct:context
s1	kernel/kernel.asm	/^  s1 = v1;$/;"	d
s1	kernel/proc.h	/^  \/* 104 *\/ uint64 s1;$/;"	m	struct:trapframe
s1	kernel/proc.h	/^  uint64 s1;$/;"	m	struct:context
s10	kernel/proc.h	/^  \/* 240 *\/ uint64 s10;$/;"	m	struct:trapframe
s10	kernel/proc.h	/^  uint64 s10;$/;"	m	struct:context
s11	kernel/proc.h	/^  \/* 248 *\/ uint64 s11;$/;"	m	struct:trapframe
s11	kernel/proc.h	/^  uint64 s11;$/;"	m	struct:context
s2	kernel/kernel.asm	/^  s2 = v2;$/;"	d
s2	kernel/proc.h	/^  \/* 176 *\/ uint64 s2;$/;"	m	struct:trapframe
s2	kernel/proc.h	/^  uint64 s2;$/;"	m	struct:context
s3	kernel/proc.h	/^  \/* 184 *\/ uint64 s3;$/;"	m	struct:trapframe
s3	kernel/proc.h	/^  uint64 s3;$/;"	m	struct:context
s4	kernel/proc.h	/^  \/* 192 *\/ uint64 s4;$/;"	m	struct:trapframe
s4	kernel/proc.h	/^  uint64 s4;$/;"	m	struct:context
s5	kernel/proc.h	/^  \/* 200 *\/ uint64 s5;$/;"	m	struct:trapframe
s5	kernel/proc.h	/^  uint64 s5;$/;"	m	struct:context
s6	kernel/proc.h	/^  \/* 208 *\/ uint64 s6;$/;"	m	struct:trapframe
s6	kernel/proc.h	/^  uint64 s6;$/;"	m	struct:context
s7	kernel/proc.h	/^  \/* 216 *\/ uint64 s7;$/;"	m	struct:trapframe
s7	kernel/proc.h	/^  uint64 s7;$/;"	m	struct:context
s8	kernel/proc.h	/^  \/* 224 *\/ uint64 s8;$/;"	m	struct:trapframe
s8	kernel/proc.h	/^  uint64 s8;$/;"	m	struct:context
s9	kernel/proc.h	/^  \/* 232 *\/ uint64 s9;$/;"	m	struct:trapframe
s9	kernel/proc.h	/^  uint64 s9;$/;"	m	struct:context
safestrcpy	kernel/string.c	/^safestrcpy(char *s, const char *t, int n)$/;"	f
sb	kernel/fs.c	/^struct superblock sb; $/;"	v	typeref:struct:superblock
sb	mkfs/mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbrk	user/cat.asm	/^sbrk:$/;"	l
sbrk	user/echo.asm	/^sbrk:$/;"	l
sbrk	user/forktest.asm	/^sbrk:$/;"	l
sbrk	user/grep.asm	/^sbrk:$/;"	l
sbrk	user/init.asm	/^sbrk:$/;"	l
sbrk	user/kill.asm	/^sbrk:$/;"	l
sbrk	user/kthtest.asm	/^sbrk:$/;"	l
sbrk	user/ln.asm	/^sbrk:$/;"	l
sbrk	user/ls.asm	/^sbrk:$/;"	l
sbrk	user/mkdir.asm	/^sbrk:$/;"	l
sbrk	user/rm.asm	/^sbrk:$/;"	l
sbrk	user/sh.asm	/^sbrk:$/;"	l
sbrk	user/stressfs.asm	/^sbrk:$/;"	l
sbrk	user/usertests.asm	/^sbrk:$/;"	l
sbrk	user/usys.S	/^sbrk:$/;"	l
sbrk	user/wc.asm	/^sbrk:$/;"	l
sbrk	user/zombie.asm	/^sbrk:$/;"	l
sbrkarg	user/usertests.c	/^sbrkarg(char *s)$/;"	f
sbrkbasic	user/usertests.c	/^sbrkbasic(char *s)$/;"	f
sbrkbugs	user/usertests.c	/^sbrkbugs(char *s)$/;"	f
sbrkfail	user/usertests.c	/^sbrkfail(char *s)$/;"	f
sbrkmuch	user/usertests.c	/^sbrkmuch(char *s)$/;"	f
sched	kernel/proc.c	/^sched(void)$/;"	f
scheduler	kernel/proc.c	/^scheduler(void)$/;"	f
scheduler	kernel/proc.h	/^  struct context scheduler;   \/\/ swtch() here to enter scheduler().$/;"	m	struct:cpu	typeref:struct:cpu::context
scheduler1	kernel/proc.c	/^scheduler1(void)$/;"	f
scheduler_wait	kernel/proc.c	/^scheduler_wait(void)$/;"	f
second	kernel/date.h	/^  uint second;$/;"	m	struct:rtcdate
sfence_vma	kernel/riscv.h	/^sfence_vma()$/;"	f
sharedfd	user/usertests.c	/^sharedfd(char *s)$/;"	f
shentsize	kernel/elf.h	/^  ushort shentsize;$/;"	m	struct:elfhdr
shnum	kernel/elf.h	/^  ushort shnum;$/;"	m	struct:elfhdr
shoff	kernel/elf.h	/^  uint64 shoff;$/;"	m	struct:elfhdr
shstrndx	kernel/elf.h	/^  ushort shstrndx;$/;"	m	struct:elfhdr
size	kernel/file.h	/^  uint size;$/;"	m	struct:inode
size	kernel/fs.h	/^  uint size;            \/\/ Size of file (bytes)$/;"	m	struct:dinode
size	kernel/fs.h	/^  uint size;         \/\/ Size of file system image (blocks)$/;"	m	struct:superblock
size	kernel/log.c	/^  int size;$/;"	m	struct:log	file:
size	kernel/stat.h	/^  uint64 size; \/\/ Size of file in bytes$/;"	m	struct:stat
size	user/umalloc.c	/^    uint size;$/;"	m	struct:header::__anon9	file:
skipelem	kernel/fs.c	/^skipelem(char *path, char *name)$/;"	f	file:
sleep	kernel/proc.c	/^sleep(void *chan, struct spinlock *lk)$/;"	f
sleep	user/cat.asm	/^sleep:$/;"	l
sleep	user/echo.asm	/^sleep:$/;"	l
sleep	user/forktest.asm	/^sleep:$/;"	l
sleep	user/grep.asm	/^sleep:$/;"	l
sleep	user/init.asm	/^sleep:$/;"	l
sleep	user/kill.asm	/^sleep:$/;"	l
sleep	user/kthtest.asm	/^sleep:$/;"	l
sleep	user/ln.asm	/^sleep:$/;"	l
sleep	user/ls.asm	/^sleep:$/;"	l
sleep	user/mkdir.asm	/^sleep:$/;"	l
sleep	user/rm.asm	/^sleep:$/;"	l
sleep	user/sh.asm	/^sleep:$/;"	l
sleep	user/stressfs.asm	/^sleep:$/;"	l
sleep	user/usertests.asm	/^sleep:$/;"	l
sleep	user/usys.S	/^sleep:$/;"	l
sleep	user/wc.asm	/^sleep:$/;"	l
sleep	user/zombie.asm	/^sleep:$/;"	l
sleeplock	kernel/sleeplock.h	/^struct sleeplock {$/;"	s
slocks	kernel/kthtest.c	/^struct slocks {$/;"	s	file:
sp	kernel/kernel.asm	/^  sp = p->kstack + PGSIZE;   $/;"	d
sp	kernel/kernel.asm	/^  sp = sz;$/;"	d
sp	kernel/proc.h	/^  \/*  48 *\/ uint64 sp;$/;"	m	struct:trapframe
sp	kernel/proc.h	/^  uint64 sp;$/;"	m	struct:context
spinlock	kernel/spinlock.h	/^struct spinlock {$/;"	s
src	user/cat.asm	/^  src = vsrc;$/;"	d
src	user/echo.asm	/^  src = vsrc;$/;"	d
src	user/forktest.asm	/^  src = vsrc;$/;"	d
src	user/grep.asm	/^  src = vsrc;$/;"	d
src	user/init.asm	/^  src = vsrc;$/;"	d
src	user/kill.asm	/^  src = vsrc;$/;"	d
src	user/kthtest.asm	/^  src = vsrc;$/;"	d
src	user/ln.asm	/^  src = vsrc;$/;"	d
src	user/ls.asm	/^  src = vsrc;$/;"	d
src	user/mkdir.asm	/^  src = vsrc;$/;"	d
src	user/rm.asm	/^  src = vsrc;$/;"	d
src	user/sh.asm	/^  src = vsrc;$/;"	d
src	user/stressfs.asm	/^  src = vsrc;$/;"	d
src	user/usertests.asm	/^  src = vsrc;$/;"	d
src	user/wc.asm	/^  src = vsrc;$/;"	d
src	user/zombie.asm	/^  src = vsrc;$/;"	d
srcva	kernel/kernel.asm	/^    srcva = va0 + PGSIZE;$/;"	d
stack0	kernel/start.c	/^__attribute__ ((aligned (16))) char stack0[4096 * NCPU];$/;"	v
stackbase	kernel/kernel.asm	/^  stackbase = sp - PGSIZE;$/;"	d
stacktest	user/usertests.c	/^stacktest(char *s)$/;"	f
start	kernel/log.c	/^  int start;$/;"	m	struct:log	file:
start	kernel/start.c	/^start()$/;"	f
start	user/initcode.S	/^start:$/;"	l
start	user/initcode.asm	/^start:$/;"	l
started	kernel/kernel.asm	/^    started = 1;$/;"	d
started	kernel/main.c	/^volatile static int started = 0;$/;"	v	file:
stat	kernel/stat.h	/^struct stat {$/;"	s
stat	mkfs/mkfs.c	8;"	d	file:
stat	user/ulib.c	/^stat(const char *n, struct stat *st)$/;"	f
state	kernel/kernel.asm	/^      state = "???";$/;"	d
state	kernel/kernel.asm	/^      state = states[p->state];$/;"	d
state	kernel/proc.h	/^  enum procstate state;        \/\/ Process state$/;"	m	struct:proc	typeref:enum:proc::procstate
state	user/cat.asm	/^        state = '%';$/;"	d
state	user/cat.asm	/^      state = 0;$/;"	d
state	user/cat.asm	/^  state = 0;$/;"	d
state	user/echo.asm	/^        state = '%';$/;"	d
state	user/echo.asm	/^      state = 0;$/;"	d
state	user/echo.asm	/^  state = 0;$/;"	d
state	user/grep.asm	/^        state = '%';$/;"	d
state	user/grep.asm	/^      state = 0;$/;"	d
state	user/grep.asm	/^  state = 0;$/;"	d
state	user/init.asm	/^        state = '%';$/;"	d
state	user/init.asm	/^      state = 0;$/;"	d
state	user/init.asm	/^  state = 0;$/;"	d
state	user/kill.asm	/^        state = '%';$/;"	d
state	user/kill.asm	/^      state = 0;$/;"	d
state	user/kill.asm	/^  state = 0;$/;"	d
state	user/kthtest.asm	/^        state = '%';$/;"	d
state	user/kthtest.asm	/^      state = 0;$/;"	d
state	user/kthtest.asm	/^  state = 0;$/;"	d
state	user/ln.asm	/^        state = '%';$/;"	d
state	user/ln.asm	/^      state = 0;$/;"	d
state	user/ln.asm	/^  state = 0;$/;"	d
state	user/ls.asm	/^        state = '%';$/;"	d
state	user/ls.asm	/^      state = 0;$/;"	d
state	user/ls.asm	/^  state = 0;$/;"	d
state	user/mkdir.asm	/^        state = '%';$/;"	d
state	user/mkdir.asm	/^      state = 0;$/;"	d
state	user/mkdir.asm	/^  state = 0;$/;"	d
state	user/rm.asm	/^        state = '%';$/;"	d
state	user/rm.asm	/^      state = 0;$/;"	d
state	user/rm.asm	/^  state = 0;$/;"	d
state	user/sh.asm	/^        state = '%';$/;"	d
state	user/sh.asm	/^      state = 0;$/;"	d
state	user/sh.asm	/^  state = 0;$/;"	d
state	user/stressfs.asm	/^        state = '%';$/;"	d
state	user/stressfs.asm	/^      state = 0;$/;"	d
state	user/stressfs.asm	/^  state = 0;$/;"	d
state	user/usertests.asm	/^        state = '%';$/;"	d
state	user/usertests.asm	/^      state = 0;$/;"	d
state	user/usertests.asm	/^  state = 0;$/;"	d
state	user/wc.asm	/^        state = '%';$/;"	d
state	user/wc.asm	/^      state = 0;$/;"	d
state	user/wc.asm	/^  state = 0;$/;"	d
state	user/zombie.asm	/^        state = '%';$/;"	d
state	user/zombie.asm	/^      state = 0;$/;"	d
state	user/zombie.asm	/^  state = 0;$/;"	d
stati	kernel/fs.c	/^stati(struct inode *ip, struct stat *st)$/;"	f
static	kernel/kernel.asm	/^static char digits[] = "0123456789abcdef";$/;"	l
static	kernel/kernel.asm	/^static inline uint64$/;"	l
static	kernel/kernel.asm	/^static inline void $/;"	l
static	kernel/kernel.asm	/^static inline void$/;"	l
static	kernel/kernel.asm	/^static int loadseg(pde_t *pgdir, uint64 addr, struct inode *ip, uint offset, uint sz);$/;"	l
static	kernel/kernel.asm	/^static int$/;"	l
static	kernel/kernel.asm	/^static pte_t *$/;"	l
static	kernel/kernel.asm	/^static struct inode*$/;"	t
static	kernel/kernel.asm	/^static uint$/;"	l
static	kernel/kernel.asm	/^static uint64$/;"	l
static	kernel/kernel.asm	/^static void$/;"	l
static	user/cat.asm	/^static Header *freep;$/;"	l
static	user/cat.asm	/^static Header base;$/;"	l
static	user/cat.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/cat.asm	/^static void$/;"	l
static	user/echo.asm	/^static Header *freep;$/;"	l
static	user/echo.asm	/^static Header base;$/;"	l
static	user/echo.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/echo.asm	/^static void$/;"	l
static	user/grep.asm	/^static Header *freep;$/;"	l
static	user/grep.asm	/^static Header base;$/;"	l
static	user/grep.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/grep.asm	/^static void$/;"	l
static	user/init.asm	/^static Header *freep;$/;"	l
static	user/init.asm	/^static Header base;$/;"	l
static	user/init.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/init.asm	/^static void$/;"	l
static	user/kill.asm	/^static Header *freep;$/;"	l
static	user/kill.asm	/^static Header base;$/;"	l
static	user/kill.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/kill.asm	/^static void$/;"	l
static	user/kthtest.asm	/^static Header *freep;$/;"	l
static	user/kthtest.asm	/^static Header base;$/;"	l
static	user/kthtest.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/kthtest.asm	/^static void$/;"	l
static	user/ln.asm	/^static Header *freep;$/;"	l
static	user/ln.asm	/^static Header base;$/;"	l
static	user/ln.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ln.asm	/^static void$/;"	l
static	user/ls.asm	/^static Header *freep;$/;"	l
static	user/ls.asm	/^static Header base;$/;"	l
static	user/ls.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ls.asm	/^static void$/;"	l
static	user/mkdir.asm	/^static Header *freep;$/;"	l
static	user/mkdir.asm	/^static Header base;$/;"	l
static	user/mkdir.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/mkdir.asm	/^static void$/;"	l
static	user/rm.asm	/^static Header *freep;$/;"	l
static	user/rm.asm	/^static Header base;$/;"	l
static	user/rm.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/rm.asm	/^static void$/;"	l
static	user/sh.asm	/^static Header *freep;$/;"	l
static	user/sh.asm	/^static Header base;$/;"	l
static	user/sh.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/sh.asm	/^static void$/;"	l
static	user/stressfs.asm	/^static Header *freep;$/;"	l
static	user/stressfs.asm	/^static Header base;$/;"	l
static	user/stressfs.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/stressfs.asm	/^static void$/;"	l
static	user/usertests.asm	/^static Header *freep;$/;"	l
static	user/usertests.asm	/^static Header base;$/;"	l
static	user/usertests.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/usertests.asm	/^static inline uint64$/;"	l
static	user/usertests.asm	/^static void$/;"	l
static	user/wc.asm	/^static Header *freep;$/;"	l
static	user/wc.asm	/^static Header base;$/;"	l
static	user/wc.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/wc.asm	/^static void$/;"	l
static	user/zombie.asm	/^static Header *freep;$/;"	l
static	user/zombie.asm	/^static Header base;$/;"	l
static	user/zombie.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/zombie.asm	/^static void$/;"	l
static_assert	mkfs/mkfs.c	15;"	d	file:
status	kernel/virtio_disk.c	/^    char status;$/;"	m	struct:disk::__anon8	file:
strchr	user/ulib.c	/^strchr(const char *s, char c)$/;"	f
strcmp	user/ulib.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	user/ulib.c	/^strcpy(char *s, const char *t)$/;"	f
strlen	kernel/string.c	/^strlen(const char *s)$/;"	f
strlen	user/ulib.c	/^strlen(const char *s)$/;"	f
strncmp	kernel/string.c	/^strncmp(const char *p, const char *q, uint n)$/;"	f
strncpy	kernel/string.c	/^strncpy(char *s, const char *t, int n)$/;"	f
struct	kernel/kernel.asm	/^   struct proc *p;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *curr, *next, *tmp;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *next, *tmp;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *original_parent = p->parent;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p = c->proc;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p = myproc();  $/;"	l
struct	kernel/kernel.asm	/^  struct proc *p = myproc();$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *parent;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *pr = myproc();$/;"	l
subdir	user/usertests.c	/^subdir(char *s)$/;"	f
superblock	kernel/fs.h	/^struct superblock {$/;"	s
swtch	kernel/swtch.S	/^swtch:$/;"	l
symbols	user/sh.c	/^char symbols[] = "<|>&;()";$/;"	v
sys_chdir	kernel/sysfile.c	/^sys_chdir(void)$/;"	f
sys_close	kernel/sysfile.c	/^sys_close(void)$/;"	f
sys_dup	kernel/sysfile.c	/^sys_dup(void)$/;"	f
sys_exec	kernel/sysfile.c	/^sys_exec(void)$/;"	f
sys_exit	kernel/sysproc.c	/^sys_exit(void)$/;"	f
sys_fork	kernel/sysproc.c	/^sys_fork(void)$/;"	f
sys_fstat	kernel/sysfile.c	/^sys_fstat(void)$/;"	f
sys_getpid	kernel/sysproc.c	/^sys_getpid(void)$/;"	f
sys_kill	kernel/sysproc.c	/^sys_kill(void)$/;"	f
sys_kthtest	kernel/sysproc.c	/^uint64 sys_kthtest(void)$/;"	f
sys_link	kernel/sysfile.c	/^sys_link(void)$/;"	f
sys_mkdir	kernel/sysfile.c	/^sys_mkdir(void)$/;"	f
sys_mknod	kernel/sysfile.c	/^sys_mknod(void)$/;"	f
sys_open	kernel/sysfile.c	/^sys_open(void)$/;"	f
sys_pipe	kernel/sysfile.c	/^sys_pipe(void)$/;"	f
sys_read	kernel/sysfile.c	/^sys_read(void)$/;"	f
sys_sbrk	kernel/sysproc.c	/^sys_sbrk(void)$/;"	f
sys_sleep	kernel/sysproc.c	/^sys_sleep(void)$/;"	f
sys_unlink	kernel/sysfile.c	/^sys_unlink(void)$/;"	f
sys_uptime	kernel/sysproc.c	/^sys_uptime(void)$/;"	f
sys_wait	kernel/sysproc.c	/^sys_wait(void)$/;"	f
sys_write	kernel/sysfile.c	/^sys_write(void)$/;"	f
syscall	kernel/syscall.c	/^syscall(void)$/;"	f
syscalls	kernel/syscall.c	/^static uint64 (*syscalls[])(void) = {$/;"	v	file:
sz	kernel/kernel.asm	/^    sz = uvmdealloc(p->pagetable, sz, sz + n);$/;"	d
sz	kernel/kernel.asm	/^  sz = 0;$/;"	d
sz	kernel/kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	kernel/kernel.asm	/^  sz = p->sz;$/;"	d
sz	kernel/proc.h	/^  uint64 sz;                   \/\/ Size of process memory (bytes)$/;"	m	struct:proc
t0	kernel/proc.h	/^  \/*  72 *\/ uint64 t0;$/;"	m	struct:trapframe
t1	kernel/proc.h	/^  \/*  80 *\/ uint64 t1;$/;"	m	struct:trapframe
t2	kernel/proc.h	/^  \/*  88 *\/ uint64 t2;$/;"	m	struct:trapframe
t3	kernel/proc.h	/^  \/* 256 *\/ uint64 t3;$/;"	m	struct:trapframe
t4	kernel/proc.h	/^  \/* 264 *\/ uint64 t4;$/;"	m	struct:trapframe
t5	kernel/proc.h	/^  \/* 272 *\/ uint64 t5;$/;"	m	struct:trapframe
t6	kernel/proc.h	/^  \/* 280 *\/ uint64 t6;$/;"	m	struct:trapframe
target	kernel/kernel.asm	/^  target = n;$/;"	d
test	kernel/kthtest.c	/^struct test {$/;"	s	file:
test0	user/alarmtest.c	/^test0()$/;"	f
test1	user/alarmtest.c	/^test1()$/;"	f
test_arg	kernel/kthtest.c	/^test_arg(void *arg)$/;"	f
test_create	kernel/kthtest.c	/^test_create(void *arg)$/;"	f
test_donate	kernel/kthtest.c	/^test_donate(void *arg)$/;"	f
test_donate_func	kernel/kthtest.c	/^test_donate_func(void *arg)$/;"	f
test_donate_mc_funcA	kernel/kthtest.c	/^test_donate_mc_funcA(void *arg)$/;"	f
test_donate_mc_funcB	kernel/kthtest.c	/^test_donate_mc_funcB(void *arg)$/;"	f
test_donate_mc_funcC	kernel/kthtest.c	/^test_donate_mc_funcC(void *arg)$/;"	f
test_donate_multicore	kernel/kthtest.c	/^test_donate_multicore(void *arg)$/;"	f
test_donate_multiple	kernel/kthtest.c	/^test_donate_multiple(void *arg)$/;"	f
test_donate_multiple2	kernel/kthtest.c	/^test_donate_multiple2(void *arg)$/;"	f
test_donate_multiple2_func	kernel/kthtest.c	/^test_donate_multiple2_func(void *arg)$/;"	f
test_donate_multiple2_func2	kernel/kthtest.c	/^test_donate_multiple2_func2(void *arg)$/;"	f
test_donate_multiple_func	kernel/kthtest.c	/^test_donate_multiple_func(void *arg)$/;"	f
test_donate_nest	kernel/kthtest.c	/^test_donate_nest(void *arg)$/;"	f
test_donate_nest_funcH	kernel/kthtest.c	/^test_donate_nest_funcH(void *arg)$/;"	f
test_donate_nest_funcM	kernel/kthtest.c	/^test_donate_nest_funcM(void *arg)$/;"	f
test_donate_simple	kernel/kthtest.c	/^test_donate_simple(void *arg)$/;"	f
test_donate_simple_func	kernel/kthtest.c	/^test_donate_simple_func(void *arg)$/;"	f
test_hello	kernel/kthtest.c	/^test_hello(void *arg)$/;"	f
test_i	run-test.py	/^def test_i(i):$/;"	f
test_lk	kernel/kthtest.c	/^struct spinlock test_lk;$/;"	v	typeref:struct:spinlock
test_lower	kernel/kthtest.c	/^test_lower(void *arg)$/;"	f
test_lower_func	kernel/kthtest.c	/^test_lower_func(void *arg)$/;"	f
test_print_func	kernel/kthtest.c	/^test_print_func(void *arg)$/;"	f
test_rr	kernel/kthtest.c	/^test_rr(void *arg)$/;"	f
test_rr_func	kernel/kthtest.c	/^test_rr_func(void *arg)$/;"	f
testcases	kernel/kthtest.c	/^struct test testcases[] = $/;"	v	typeref:struct:test
testdone	kernel/kernel.asm	/^  testdone = 0;$/;"	d
testdone	kernel/kthtest.c	/^int testdone = 0;$/;"	v
tf	kernel/proc.h	/^  struct trapframe *tf;        \/\/ data page for trampoline.S$/;"	m	struct:proc	typeref:struct:proc::trapframe
ticks	kernel/trap.c	/^uint ticks;$/;"	v
ticks0	kernel/kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	kernel/trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
timerinit	kernel/start.c	/^timerinit()$/;"	f
timervec	kernel/kernelvec.S	/^timervec:$/;"	l
tmp	kernel/kernel.asm	/^          tmp = next;$/;"	d
tmp	kernel/kernel.asm	/^      tmp = next->dona_next;$/;"	d
tok	user/sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
total	user/usertests.asm	/^    total = 0;$/;"	d
total	user/usertests.asm	/^  total = 0;$/;"	d
tp	kernel/proc.h	/^  \/*  64 *\/ uint64 tp;$/;"	m	struct:trapframe
trampoline	kernel/trampoline.S	/^trampoline:$/;"	l
trapframe	kernel/proc.h	/^struct trapframe {$/;"	s
trapinit	kernel/trap.c	/^trapinit(void)$/;"	f
trapinithart	kernel/trap.c	/^trapinithart(void)$/;"	f
tree_lock	kernel/sleeplock.c	/^struct spinlock tree_lock;$/;"	v	typeref:struct:spinlock
twochildren	user/usertests.c	/^twochildren(char *s)$/;"	f
type	kernel/elf.h	/^  uint32 type;$/;"	m	struct:proghdr
type	kernel/elf.h	/^  ushort type;$/;"	m	struct:elfhdr
type	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	m	struct:file	typeref:enum:file::__anon3
type	kernel/file.h	/^  short type;         \/\/ copy of disk inode$/;"	m	struct:inode
type	kernel/fs.h	/^  short type;           \/\/ File type$/;"	m	struct:dinode
type	kernel/stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat
type	user/sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:redircmd	file:
uartgetc	kernel/uart.c	/^uartgetc(void)$/;"	f
uartinit	kernel/uart.c	/^uartinit(void)$/;"	f
uartintr	kernel/uart.c	/^uartintr(void)$/;"	f
uartputc	kernel/uart.c	/^uartputc(int c)$/;"	f
uchar	kernel/types.h	/^typedef unsigned char  uchar;$/;"	t
uint	kernel/types.h	/^typedef unsigned int   uint;$/;"	t
uint	user/cat.asm	/^uint$/;"	l
uint	user/echo.asm	/^uint$/;"	l
uint	user/forktest.asm	/^uint$/;"	l
uint	user/grep.asm	/^uint$/;"	l
uint	user/init.asm	/^uint$/;"	l
uint	user/kill.asm	/^uint$/;"	l
uint	user/kthtest.asm	/^uint$/;"	l
uint	user/ln.asm	/^uint$/;"	l
uint	user/ls.asm	/^uint$/;"	l
uint	user/mkdir.asm	/^uint$/;"	l
uint	user/rm.asm	/^uint$/;"	l
uint	user/sh.asm	/^uint$/;"	l
uint	user/stressfs.asm	/^uint$/;"	l
uint	user/usertests.asm	/^uint$/;"	l
uint	user/wc.asm	/^uint$/;"	l
uint	user/zombie.asm	/^uint$/;"	l
uint16	kernel/types.h	/^typedef unsigned short uint16;$/;"	t
uint32	kernel/types.h	/^typedef unsigned int  uint32;$/;"	t
uint64	kernel/kernel.asm	/^uint64 sys_kthtest(void)$/;"	l
uint64	kernel/kernel.asm	/^uint64$/;"	l
uint64	kernel/types.h	/^typedef unsigned long uint64;$/;"	t
uint8	kernel/types.h	/^typedef unsigned char uint8;$/;"	t
uninit	user/usertests.c	/^char uninit[10000];$/;"	v
unlink	user/cat.asm	/^unlink:$/;"	l
unlink	user/echo.asm	/^unlink:$/;"	l
unlink	user/forktest.asm	/^unlink:$/;"	l
unlink	user/grep.asm	/^unlink:$/;"	l
unlink	user/init.asm	/^unlink:$/;"	l
unlink	user/kill.asm	/^unlink:$/;"	l
unlink	user/kthtest.asm	/^unlink:$/;"	l
unlink	user/ln.asm	/^unlink:$/;"	l
unlink	user/ls.asm	/^unlink:$/;"	l
unlink	user/mkdir.asm	/^unlink:$/;"	l
unlink	user/rm.asm	/^unlink:$/;"	l
unlink	user/sh.asm	/^unlink:$/;"	l
unlink	user/stressfs.asm	/^unlink:$/;"	l
unlink	user/usertests.asm	/^unlink:$/;"	l
unlink	user/usys.S	/^unlink:$/;"	l
unlink	user/wc.asm	/^unlink:$/;"	l
unlink	user/zombie.asm	/^unlink:$/;"	l
unlinkread	user/usertests.c	/^unlinkread(char *s)$/;"	f
uptime	user/cat.asm	/^uptime:$/;"	l
uptime	user/echo.asm	/^uptime:$/;"	l
uptime	user/forktest.asm	/^uptime:$/;"	l
uptime	user/grep.asm	/^uptime:$/;"	l
uptime	user/init.asm	/^uptime:$/;"	l
uptime	user/kill.asm	/^uptime:$/;"	l
uptime	user/kthtest.asm	/^uptime:$/;"	l
uptime	user/ln.asm	/^uptime:$/;"	l
uptime	user/ls.asm	/^uptime:$/;"	l
uptime	user/mkdir.asm	/^uptime:$/;"	l
uptime	user/rm.asm	/^uptime:$/;"	l
uptime	user/sh.asm	/^uptime:$/;"	l
uptime	user/stressfs.asm	/^uptime:$/;"	l
uptime	user/usertests.asm	/^uptime:$/;"	l
uptime	user/usys.S	/^uptime:$/;"	l
uptime	user/wc.asm	/^uptime:$/;"	l
uptime	user/zombie.asm	/^uptime:$/;"	l
used	kernel/virtio_disk.c	/^  struct UsedArea *used;$/;"	m	struct:disk	typeref:struct:disk::UsedArea	file:
used_idx	kernel/virtio_disk.c	/^  uint16 used_idx; \/\/ we've looked this far in used[2..NUM].$/;"	m	struct:disk	file:
userinit	kernel/proc.c	/^userinit(void)$/;"	f
userprio	kernel/kernel.asm	/^  userprio = kthread_get_prio();$/;"	d
userret	kernel/trampoline.S	/^userret:$/;"	l
usertrap	kernel/trap.c	/^usertrap(void)$/;"	f
usertrapret	kernel/trap.c	/^usertrapret(void)$/;"	f
uservec	kernel/trampoline.S	/^uservec:    $/;"	l
ushort	kernel/types.h	/^typedef unsigned short ushort;$/;"	t
uvmalloc	kernel/vm.c	/^uvmalloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f
uvmclear	kernel/vm.c	/^uvmclear(pagetable_t pagetable, uint64 va)$/;"	f
uvmcopy	kernel/vm.c	/^uvmcopy(pagetable_t old, pagetable_t new, uint64 sz)$/;"	f
uvmcreate	kernel/vm.c	/^uvmcreate()$/;"	f
uvmdealloc	kernel/vm.c	/^uvmdealloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f
uvmfree	kernel/vm.c	/^uvmfree(pagetable_t pagetable, uint64 sz)$/;"	f
uvminit	kernel/vm.c	/^uvminit(pagetable_t pagetable, uchar *src, uint sz)$/;"	f
uvmunmap	kernel/vm.c	/^uvmunmap(pagetable_t pagetable, uint64 va, uint64 size, int do_free)$/;"	f
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(dstva);$/;"	d
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(srcva);$/;"	d
vaddr	kernel/elf.h	/^  uint64 vaddr;$/;"	m	struct:proghdr
valid	kernel/buf.h	/^  int valid;   \/\/ has data been read from disk?$/;"	m	struct:buf
valid	kernel/file.h	/^  int valid;          \/\/ inode has been read from disk?$/;"	m	struct:inode
validatetest	user/usertests.c	/^validatetest(char *s)$/;"	f
vdisk_lock	kernel/virtio_disk.c	/^  struct spinlock vdisk_lock;$/;"	m	struct:disk	typeref:struct:disk::spinlock	file:
version	kernel/elf.h	/^  uint version;$/;"	m	struct:elfhdr
virtio_disk_init	kernel/virtio_disk.c	/^virtio_disk_init(void)$/;"	f
virtio_disk_intr	kernel/virtio_disk.c	/^virtio_disk_intr()$/;"	f
virtio_disk_rw	kernel/virtio_disk.c	/^virtio_disk_rw(struct buf *b, int write)$/;"	f
void	kernel/kernel.asm	/^void $/;"	l
void	kernel/kernel.asm	/^void *$/;"	l
void	kernel/kernel.asm	/^void$/;"	l
void	user/cat.asm	/^void$/;"	l
void	user/echo.asm	/^void$/;"	l
void	user/forktest.asm	/^void$/;"	l
void	user/grep.asm	/^void$/;"	l
void	user/init.asm	/^void$/;"	l
void	user/kill.asm	/^void$/;"	l
void	user/kthtest.asm	/^void$/;"	l
void	user/ln.asm	/^void$/;"	l
void	user/ls.asm	/^void$/;"	l
void	user/mkdir.asm	/^void$/;"	l
void	user/rm.asm	/^void$/;"	l
void	user/sh.asm	/^void$/;"	l
void	user/stressfs.asm	/^void$/;"	l
void	user/usertests.asm	/^void$/;"	l
void	user/wc.asm	/^void$/;"	l
void	user/zombie.asm	/^void$/;"	l
volatile	kernel/kernel.asm	/^volatile static int started = 0;$/;"	l
vprintf	user/printf.c	/^vprintf(int fd, const char *fmt, va_list ap)$/;"	f
w	kernel/console.c	/^  uint w;  \/\/ Write index$/;"	m	struct:__anon2	file:
w_mcounteren	kernel/riscv.h	/^w_mcounteren(uint64 x)$/;"	f
w_medeleg	kernel/riscv.h	/^w_medeleg(uint64 x)$/;"	f
w_mepc	kernel/riscv.h	/^w_mepc(uint64 x)$/;"	f
w_mideleg	kernel/riscv.h	/^w_mideleg(uint64 x)$/;"	f
w_mie	kernel/riscv.h	/^w_mie(uint64 x)$/;"	f
w_mscratch	kernel/riscv.h	/^w_mscratch(uint64 x)$/;"	f
w_mstatus	kernel/riscv.h	/^w_mstatus(uint64 x)$/;"	f
w_mtvec	kernel/riscv.h	/^w_mtvec(uint64 x)$/;"	f
w_satp	kernel/riscv.h	/^w_satp(uint64 x)$/;"	f
w_sepc	kernel/riscv.h	/^w_sepc(uint64 x)$/;"	f
w_sie	kernel/riscv.h	/^w_sie(uint64 x)$/;"	f
w_sip	kernel/riscv.h	/^w_sip(uint64 x)$/;"	f
w_sscratch	kernel/riscv.h	/^w_sscratch(uint64 x)$/;"	f
w_sstatus	kernel/riscv.h	/^w_sstatus(uint64 x)$/;"	f
w_stvec	kernel/riscv.h	/^w_stvec(uint64 x)$/;"	f
w_tp	kernel/riscv.h	/^w_tp(uint64 x)$/;"	f
wait	kernel/proc.c	/^wait(uint64 addr)$/;"	f
wait	user/cat.asm	/^wait:$/;"	l
wait	user/echo.asm	/^wait:$/;"	l
wait	user/forktest.asm	/^wait:$/;"	l
wait	user/grep.asm	/^wait:$/;"	l
wait	user/init.asm	/^wait:$/;"	l
wait	user/kill.asm	/^wait:$/;"	l
wait	user/kthtest.asm	/^wait:$/;"	l
wait	user/ln.asm	/^wait:$/;"	l
wait	user/ls.asm	/^wait:$/;"	l
wait	user/mkdir.asm	/^wait:$/;"	l
wait	user/rm.asm	/^wait:$/;"	l
wait	user/sh.asm	/^wait:$/;"	l
wait	user/stressfs.asm	/^wait:$/;"	l
wait	user/usertests.asm	/^wait:$/;"	l
wait	user/usys.S	/^wait:$/;"	l
wait	user/wc.asm	/^wait:$/;"	l
wait	user/zombie.asm	/^wait:$/;"	l
wait_task	kernel/proc.c	/^struct spinlock wait_task;$/;"	v	typeref:struct:spinlock
waiting_cpus	kernel/proc.c	/^int waiting_cpus[NCPU];$/;"	v
waiting_for	kernel/proc.h	/^  struct sleeplock *waiting_for; \/\/ If non-zero, waiting for this sleeplock$/;"	m	struct:proc	typeref:struct:proc::sleeplock
wakeup	kernel/proc.c	/^wakeup(void *chan)$/;"	f
wakeup1	kernel/proc.c	/^wakeup1(struct proc *p)$/;"	f	file:
walk	kernel/vm.c	/^walk(pagetable_t pagetable, uint64 va, int alloc)$/;"	f	file:
walkaddr	kernel/vm.c	/^walkaddr(pagetable_t pagetable, uint64 va)$/;"	f
wc	user/wc.c	/^wc(int fd, char *name)$/;"	f
whitespace	user/sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
winode	mkfs/mkfs.c	/^winode(uint inum, struct dinode *ip)$/;"	f
writable	kernel/file.h	/^  char writable;$/;"	m	struct:file
write	kernel/file.h	/^  int (*write)(int, uint64, int);$/;"	m	struct:devsw
write	user/cat.asm	/^write:$/;"	l
write	user/echo.asm	/^write:$/;"	l
write	user/forktest.asm	/^write:$/;"	l
write	user/grep.asm	/^write:$/;"	l
write	user/init.asm	/^write:$/;"	l
write	user/kill.asm	/^write:$/;"	l
write	user/kthtest.asm	/^write:$/;"	l
write	user/ln.asm	/^write:$/;"	l
write	user/ls.asm	/^write:$/;"	l
write	user/mkdir.asm	/^write:$/;"	l
write	user/rm.asm	/^write:$/;"	l
write	user/sh.asm	/^write:$/;"	l
write	user/stressfs.asm	/^write:$/;"	l
write	user/usertests.asm	/^write:$/;"	l
write	user/usys.S	/^write:$/;"	l
write	user/wc.asm	/^write:$/;"	l
write	user/zombie.asm	/^write:$/;"	l
write_head	kernel/log.c	/^write_head(void)$/;"	f	file:
write_log	kernel/log.c	/^write_log(void)$/;"	f	file:
writebig	user/usertests.c	/^writebig(char *s)$/;"	f
writei	kernel/fs.c	/^writei(struct inode *ip, int user_src, uint64 src, uint off, uint n)$/;"	f
writeopen	kernel/pipe.c	/^  int writeopen;  \/\/ write fd is still open$/;"	m	struct:pipe	file:
writetest	user/usertests.c	/^writetest(char *s)$/;"	f
wsect	mkfs/mkfs.c	/^wsect(uint sec, void *buf)$/;"	f
x	kernel/kernel.asm	/^    x = -xx;$/;"	d
x	kernel/kernel.asm	/^    x = xx;$/;"	d
x	user/cat.asm	/^    x = -xx;$/;"	d
x	user/cat.asm	/^    x = xx;$/;"	d
x	user/echo.asm	/^    x = -xx;$/;"	d
x	user/echo.asm	/^    x = xx;$/;"	d
x	user/grep.asm	/^    x = -xx;$/;"	d
x	user/grep.asm	/^    x = xx;$/;"	d
x	user/init.asm	/^    x = -xx;$/;"	d
x	user/init.asm	/^    x = xx;$/;"	d
x	user/kill.asm	/^    x = -xx;$/;"	d
x	user/kill.asm	/^    x = xx;$/;"	d
x	user/kthtest.asm	/^    x = -xx;$/;"	d
x	user/kthtest.asm	/^    x = xx;$/;"	d
x	user/ln.asm	/^    x = -xx;$/;"	d
x	user/ln.asm	/^    x = xx;$/;"	d
x	user/ls.asm	/^    x = -xx;$/;"	d
x	user/ls.asm	/^    x = xx;$/;"	d
x	user/mkdir.asm	/^    x = -xx;$/;"	d
x	user/mkdir.asm	/^    x = xx;$/;"	d
x	user/rm.asm	/^    x = -xx;$/;"	d
x	user/rm.asm	/^    x = xx;$/;"	d
x	user/sh.asm	/^    x = -xx;$/;"	d
x	user/sh.asm	/^    x = xx;$/;"	d
x	user/stressfs.asm	/^    x = -xx;$/;"	d
x	user/stressfs.asm	/^    x = xx;$/;"	d
x	user/umalloc.c	/^  Align x;$/;"	m	union:header	file:
x	user/usertests.asm	/^    x = -xx;$/;"	d
x	user/usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	user/usertests.asm	/^    x = xx;$/;"	d
x	user/wc.asm	/^    x = -xx;$/;"	d
x	user/wc.asm	/^    x = xx;$/;"	d
x	user/zombie.asm	/^    x = -xx;$/;"	d
x	user/zombie.asm	/^    x = xx;$/;"	d
xint	mkfs/mkfs.c	/^xint(uint x)$/;"	f
xshort	mkfs/mkfs.c	/^xshort(ushort x)$/;"	f
xstate	kernel/proc.h	/^  int xstate;                  \/\/ Exit status to be returned to parent's wait$/;"	m	struct:proc
xticks	kernel/kernel.asm	/^  xticks = ticks;$/;"	d
year	kernel/date.h	/^  uint year;$/;"	m	struct:rtcdate
yield	kernel/proc.c	/^yield(void)$/;"	f
zeroes	mkfs/mkfs.c	/^char zeroes[BSIZE];$/;"	v
